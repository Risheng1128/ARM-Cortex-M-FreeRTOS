ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"timers.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.xActiveTimerList1,"aw",%nobits
  18              		.align	2
  21              	xActiveTimerList1:
  22 0000 00000000 		.space	20
  22      00000000 
  22      00000000 
  22      00000000 
  22      00000000 
  23              		.section	.bss.xActiveTimerList2,"aw",%nobits
  24              		.align	2
  27              	xActiveTimerList2:
  28 0000 00000000 		.space	20
  28      00000000 
  28      00000000 
  28      00000000 
  28      00000000 
  29              		.section	.bss.pxCurrentTimerList,"aw",%nobits
  30              		.align	2
  33              	pxCurrentTimerList:
  34 0000 00000000 		.space	4
  35              		.section	.bss.pxOverflowTimerList,"aw",%nobits
  36              		.align	2
  39              	pxOverflowTimerList:
  40 0000 00000000 		.space	4
  41              		.section	.bss.xTimerQueue,"aw",%nobits
  42              		.align	2
  45              	xTimerQueue:
  46 0000 00000000 		.space	4
  47              		.section	.bss.xTimerTaskHandle,"aw",%nobits
  48              		.align	2
  51              	xTimerTaskHandle:
  52 0000 00000000 		.space	4
  53              		.section	.rodata
  54              		.align	2
  55              	.LC0:
  56 0000 546D7220 		.ascii	"Tmr Svc\000"
  56      53766300 
  57              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
  58              		.align	1
  59              		.global	xTimerCreateTimerTask
  60              		.arch armv7e-m
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 2


  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	xTimerCreateTimerTask:
  67              	.LFB5:
  68              		.file 1 "./Drivers/FreeRTOS/timers.c"
   1:./Drivers/FreeRTOS/timers.c **** /*
   2:./Drivers/FreeRTOS/timers.c ****  * FreeRTOS Kernel V10.4.6
   3:./Drivers/FreeRTOS/timers.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:./Drivers/FreeRTOS/timers.c ****  *
   5:./Drivers/FreeRTOS/timers.c ****  * SPDX-License-Identifier: MIT
   6:./Drivers/FreeRTOS/timers.c ****  *
   7:./Drivers/FreeRTOS/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:./Drivers/FreeRTOS/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:./Drivers/FreeRTOS/timers.c ****  * the Software without restriction, including without limitation the rights to
  10:./Drivers/FreeRTOS/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:./Drivers/FreeRTOS/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:./Drivers/FreeRTOS/timers.c ****  * subject to the following conditions:
  13:./Drivers/FreeRTOS/timers.c ****  *
  14:./Drivers/FreeRTOS/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  15:./Drivers/FreeRTOS/timers.c ****  * copies or substantial portions of the Software.
  16:./Drivers/FreeRTOS/timers.c ****  *
  17:./Drivers/FreeRTOS/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:./Drivers/FreeRTOS/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:./Drivers/FreeRTOS/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:./Drivers/FreeRTOS/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:./Drivers/FreeRTOS/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:./Drivers/FreeRTOS/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:./Drivers/FreeRTOS/timers.c ****  *
  24:./Drivers/FreeRTOS/timers.c ****  * https://www.FreeRTOS.org
  25:./Drivers/FreeRTOS/timers.c ****  * https://github.com/FreeRTOS
  26:./Drivers/FreeRTOS/timers.c ****  *
  27:./Drivers/FreeRTOS/timers.c ****  */
  28:./Drivers/FreeRTOS/timers.c **** 
  29:./Drivers/FreeRTOS/timers.c **** /* Standard includes. */
  30:./Drivers/FreeRTOS/timers.c **** #include <stdlib.h>
  31:./Drivers/FreeRTOS/timers.c **** 
  32:./Drivers/FreeRTOS/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:./Drivers/FreeRTOS/timers.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  34:./Drivers/FreeRTOS/timers.c ****  * task.h is included from an application file. */
  35:./Drivers/FreeRTOS/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:./Drivers/FreeRTOS/timers.c **** 
  37:./Drivers/FreeRTOS/timers.c **** #include "FreeRTOS.h"
  38:./Drivers/FreeRTOS/timers.c **** #include "task.h"
  39:./Drivers/FreeRTOS/timers.c **** #include "queue.h"
  40:./Drivers/FreeRTOS/timers.c **** #include "timers.h"
  41:./Drivers/FreeRTOS/timers.c **** 
  42:./Drivers/FreeRTOS/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  43:./Drivers/FreeRTOS/timers.c ****     #error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function availabl
  44:./Drivers/FreeRTOS/timers.c **** #endif
  45:./Drivers/FreeRTOS/timers.c **** 
  46:./Drivers/FreeRTOS/timers.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  47:./Drivers/FreeRTOS/timers.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  48:./Drivers/FreeRTOS/timers.c ****  * for the header files above, but not in this file, in order to generate the
  49:./Drivers/FreeRTOS/timers.c ****  * correct privileged Vs unprivileged linkage and placement. */
  50:./Drivers/FreeRTOS/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 3


  51:./Drivers/FreeRTOS/timers.c **** 
  52:./Drivers/FreeRTOS/timers.c **** 
  53:./Drivers/FreeRTOS/timers.c **** /* This entire source file will be skipped if the application is not configured
  54:./Drivers/FreeRTOS/timers.c ****  * to include software timer functionality.  This #if is closed at the very bottom
  55:./Drivers/FreeRTOS/timers.c ****  * of this file.  If you want to include software timer functionality then ensure
  56:./Drivers/FreeRTOS/timers.c ****  * configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  57:./Drivers/FreeRTOS/timers.c **** #if ( configUSE_TIMERS == 1 )
  58:./Drivers/FreeRTOS/timers.c **** 
  59:./Drivers/FreeRTOS/timers.c **** /* Misc definitions. */
  60:./Drivers/FreeRTOS/timers.c ****     #define tmrNO_DELAY                    ( ( TickType_t ) 0U )
  61:./Drivers/FreeRTOS/timers.c ****     #define tmrMAX_TIME_BEFORE_OVERFLOW    ( ( TickType_t ) -1 )
  62:./Drivers/FreeRTOS/timers.c **** 
  63:./Drivers/FreeRTOS/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  64:./Drivers/FreeRTOS/timers.c ****  * defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  65:./Drivers/FreeRTOS/timers.c ****     #ifndef configTIMER_SERVICE_TASK_NAME
  66:./Drivers/FreeRTOS/timers.c ****         #define configTIMER_SERVICE_TASK_NAME    "Tmr Svc"
  67:./Drivers/FreeRTOS/timers.c ****     #endif
  68:./Drivers/FreeRTOS/timers.c **** 
  69:./Drivers/FreeRTOS/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  70:./Drivers/FreeRTOS/timers.c ****     #define tmrSTATUS_IS_ACTIVE                  ( ( uint8_t ) 0x01 )
  71:./Drivers/FreeRTOS/timers.c ****     #define tmrSTATUS_IS_STATICALLY_ALLOCATED    ( ( uint8_t ) 0x02 )
  72:./Drivers/FreeRTOS/timers.c ****     #define tmrSTATUS_IS_AUTORELOAD              ( ( uint8_t ) 0x04 )
  73:./Drivers/FreeRTOS/timers.c **** 
  74:./Drivers/FreeRTOS/timers.c **** /* The definition of the timers themselves. */
  75:./Drivers/FreeRTOS/timers.c ****     typedef struct tmrTimerControl                  /* The old naming convention is used to prevent
  76:./Drivers/FreeRTOS/timers.c ****     {
  77:./Drivers/FreeRTOS/timers.c ****         const char * pcTimerName;                   /*<< Text name.  This is not used by the kernel
  78:./Drivers/FreeRTOS/timers.c ****         ListItem_t xTimerListItem;                  /*<< Standard linked list item as used by all k
  79:./Drivers/FreeRTOS/timers.c ****         TickType_t xTimerPeriodInTicks;             /*<< How quickly and often the timer expires. *
  80:./Drivers/FreeRTOS/timers.c ****         void * pvTimerID;                           /*<< An ID to identify the timer.  This allows 
  81:./Drivers/FreeRTOS/timers.c ****         TimerCallbackFunction_t pxCallbackFunction; /*<< The function that will be called when the 
  82:./Drivers/FreeRTOS/timers.c ****         #if ( configUSE_TRACE_FACILITY == 1 )
  83:./Drivers/FreeRTOS/timers.c ****             UBaseType_t uxTimerNumber;              /*<< An ID assigned by trace tools such as Free
  84:./Drivers/FreeRTOS/timers.c ****         #endif
  85:./Drivers/FreeRTOS/timers.c ****         uint8_t ucStatus;                           /*<< Holds bits to say if the timer was statica
  86:./Drivers/FreeRTOS/timers.c ****     } xTIMER;
  87:./Drivers/FreeRTOS/timers.c **** 
  88:./Drivers/FreeRTOS/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  89:./Drivers/FreeRTOS/timers.c ****  * name below to enable the use of older kernel aware debuggers. */
  90:./Drivers/FreeRTOS/timers.c ****     typedef xTIMER Timer_t;
  91:./Drivers/FreeRTOS/timers.c **** 
  92:./Drivers/FreeRTOS/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  93:./Drivers/FreeRTOS/timers.c ****  * Two types of message can be queued - messages that manipulate a software timer,
  94:./Drivers/FreeRTOS/timers.c ****  * and messages that request the execution of a non-timer related callback.  The
  95:./Drivers/FreeRTOS/timers.c ****  * two message types are defined in two separate structures, xTimerParametersType
  96:./Drivers/FreeRTOS/timers.c ****  * and xCallbackParametersType respectively. */
  97:./Drivers/FreeRTOS/timers.c ****     typedef struct tmrTimerParameters
  98:./Drivers/FreeRTOS/timers.c ****     {
  99:./Drivers/FreeRTOS/timers.c ****         TickType_t xMessageValue; /*<< An optional value used by a subset of commands, for example,
 100:./Drivers/FreeRTOS/timers.c ****         Timer_t * pxTimer;        /*<< The timer to which the command will be applied. */
 101:./Drivers/FreeRTOS/timers.c ****     } TimerParameter_t;
 102:./Drivers/FreeRTOS/timers.c **** 
 103:./Drivers/FreeRTOS/timers.c **** 
 104:./Drivers/FreeRTOS/timers.c ****     typedef struct tmrCallbackParameters
 105:./Drivers/FreeRTOS/timers.c ****     {
 106:./Drivers/FreeRTOS/timers.c ****         PendedFunction_t pxCallbackFunction; /* << The callback function to execute. */
 107:./Drivers/FreeRTOS/timers.c ****         void * pvParameter1;                 /* << The value that will be used as the callback func
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 4


 108:./Drivers/FreeRTOS/timers.c ****         uint32_t ulParameter2;               /* << The value that will be used as the callback func
 109:./Drivers/FreeRTOS/timers.c ****     } CallbackParameters_t;
 110:./Drivers/FreeRTOS/timers.c **** 
 111:./Drivers/FreeRTOS/timers.c **** /* The structure that contains the two message types, along with an identifier
 112:./Drivers/FreeRTOS/timers.c ****  * that is used to determine which message type is valid. */
 113:./Drivers/FreeRTOS/timers.c ****     typedef struct tmrTimerQueueMessage
 114:./Drivers/FreeRTOS/timers.c ****     {
 115:./Drivers/FreeRTOS/timers.c ****         BaseType_t xMessageID; /*<< The command being sent to the timer service task. */
 116:./Drivers/FreeRTOS/timers.c ****         union
 117:./Drivers/FreeRTOS/timers.c ****         {
 118:./Drivers/FreeRTOS/timers.c ****             TimerParameter_t xTimerParameters;
 119:./Drivers/FreeRTOS/timers.c **** 
 120:./Drivers/FreeRTOS/timers.c ****             /* Don't include xCallbackParameters if it is not going to be used as
 121:./Drivers/FreeRTOS/timers.c ****              * it makes the structure (and therefore the timer queue) larger. */
 122:./Drivers/FreeRTOS/timers.c ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
 123:./Drivers/FreeRTOS/timers.c ****                 CallbackParameters_t xCallbackParameters;
 124:./Drivers/FreeRTOS/timers.c ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 125:./Drivers/FreeRTOS/timers.c ****         } u;
 126:./Drivers/FreeRTOS/timers.c ****     } DaemonTaskMessage_t;
 127:./Drivers/FreeRTOS/timers.c **** 
 128:./Drivers/FreeRTOS/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 129:./Drivers/FreeRTOS/timers.c ****  * which static variables must be declared volatile. */
 130:./Drivers/FreeRTOS/timers.c **** 
 131:./Drivers/FreeRTOS/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 132:./Drivers/FreeRTOS/timers.c ****  * time order, with the nearest expiry time at the front of the list.  Only the
 133:./Drivers/FreeRTOS/timers.c ****  * timer service task is allowed to access these lists.
 134:./Drivers/FreeRTOS/timers.c ****  * xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 135:./Drivers/FreeRTOS/timers.c ****  * breaks some kernel aware debuggers, and debuggers that reply on removing the
 136:./Drivers/FreeRTOS/timers.c ****  * static qualifier. */
 137:./Drivers/FreeRTOS/timers.c ****     PRIVILEGED_DATA static List_t xActiveTimerList1;
 138:./Drivers/FreeRTOS/timers.c ****     PRIVILEGED_DATA static List_t xActiveTimerList2;
 139:./Drivers/FreeRTOS/timers.c ****     PRIVILEGED_DATA static List_t * pxCurrentTimerList;
 140:./Drivers/FreeRTOS/timers.c ****     PRIVILEGED_DATA static List_t * pxOverflowTimerList;
 141:./Drivers/FreeRTOS/timers.c **** 
 142:./Drivers/FreeRTOS/timers.c **** /* A queue that is used to send commands to the timer service task. */
 143:./Drivers/FreeRTOS/timers.c ****     PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 144:./Drivers/FreeRTOS/timers.c ****     PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 145:./Drivers/FreeRTOS/timers.c **** 
 146:./Drivers/FreeRTOS/timers.c **** /*lint -restore */
 147:./Drivers/FreeRTOS/timers.c **** 
 148:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 149:./Drivers/FreeRTOS/timers.c **** 
 150:./Drivers/FreeRTOS/timers.c **** /*
 151:./Drivers/FreeRTOS/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 152:./Drivers/FreeRTOS/timers.c ****  * been initialised already.
 153:./Drivers/FreeRTOS/timers.c ****  */
 154:./Drivers/FreeRTOS/timers.c ****     static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 155:./Drivers/FreeRTOS/timers.c **** 
 156:./Drivers/FreeRTOS/timers.c **** /*
 157:./Drivers/FreeRTOS/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 158:./Drivers/FreeRTOS/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 159:./Drivers/FreeRTOS/timers.c ****  * xTimerQueue queue.
 160:./Drivers/FreeRTOS/timers.c ****  */
 161:./Drivers/FreeRTOS/timers.c ****     static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 162:./Drivers/FreeRTOS/timers.c **** 
 163:./Drivers/FreeRTOS/timers.c **** /*
 164:./Drivers/FreeRTOS/timers.c ****  * Called by the timer service task to interpret and process a command it
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 5


 165:./Drivers/FreeRTOS/timers.c ****  * received on the timer queue.
 166:./Drivers/FreeRTOS/timers.c ****  */
 167:./Drivers/FreeRTOS/timers.c ****     static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 168:./Drivers/FreeRTOS/timers.c **** 
 169:./Drivers/FreeRTOS/timers.c **** /*
 170:./Drivers/FreeRTOS/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 171:./Drivers/FreeRTOS/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 172:./Drivers/FreeRTOS/timers.c ****  */
 173:./Drivers/FreeRTOS/timers.c ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 174:./Drivers/FreeRTOS/timers.c ****                                                   const TickType_t xNextExpiryTime,
 175:./Drivers/FreeRTOS/timers.c ****                                                   const TickType_t xTimeNow,
 176:./Drivers/FreeRTOS/timers.c ****                                                   const TickType_t xCommandTime ) PRIVILEGED_FUNCTI
 177:./Drivers/FreeRTOS/timers.c **** 
 178:./Drivers/FreeRTOS/timers.c **** /*
 179:./Drivers/FreeRTOS/timers.c ****  * Reload the specified auto-reload timer.  If the reloading is backlogged,
 180:./Drivers/FreeRTOS/timers.c ****  * clear the backlog, calling the callback for each additional reload.  When
 181:./Drivers/FreeRTOS/timers.c ****  * this function returns, the next expiry time is after xTimeNow.
 182:./Drivers/FreeRTOS/timers.c ****  */
 183:./Drivers/FreeRTOS/timers.c ****     static void prvReloadTimer( Timer_t * const pxTimer,
 184:./Drivers/FreeRTOS/timers.c ****                                 TickType_t xExpiredTime,
 185:./Drivers/FreeRTOS/timers.c ****                                 const TickType_t xTimeNow ) PRIVILEGED_FUNCTION;
 186:./Drivers/FreeRTOS/timers.c **** 
 187:./Drivers/FreeRTOS/timers.c **** /*
 188:./Drivers/FreeRTOS/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 189:./Drivers/FreeRTOS/timers.c ****  * auto-reload timer, then call its callback.
 190:./Drivers/FreeRTOS/timers.c ****  */
 191:./Drivers/FreeRTOS/timers.c ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 192:./Drivers/FreeRTOS/timers.c ****                                         const TickType_t xTimeNow ) PRIVILEGED_FUNCTION;
 193:./Drivers/FreeRTOS/timers.c **** 
 194:./Drivers/FreeRTOS/timers.c **** /*
 195:./Drivers/FreeRTOS/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 196:./Drivers/FreeRTOS/timers.c ****  * current timer list does not still reference some timers.
 197:./Drivers/FreeRTOS/timers.c ****  */
 198:./Drivers/FreeRTOS/timers.c ****     static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 199:./Drivers/FreeRTOS/timers.c **** 
 200:./Drivers/FreeRTOS/timers.c **** /*
 201:./Drivers/FreeRTOS/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 202:./Drivers/FreeRTOS/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 203:./Drivers/FreeRTOS/timers.c ****  */
 204:./Drivers/FreeRTOS/timers.c ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FU
 205:./Drivers/FreeRTOS/timers.c **** 
 206:./Drivers/FreeRTOS/timers.c **** /*
 207:./Drivers/FreeRTOS/timers.c ****  * If the timer list contains any active timers then return the expire time of
 208:./Drivers/FreeRTOS/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 209:./Drivers/FreeRTOS/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 210:./Drivers/FreeRTOS/timers.c ****  * to pdTRUE.
 211:./Drivers/FreeRTOS/timers.c ****  */
 212:./Drivers/FreeRTOS/timers.c ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION
 213:./Drivers/FreeRTOS/timers.c **** 
 214:./Drivers/FreeRTOS/timers.c **** /*
 215:./Drivers/FreeRTOS/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 216:./Drivers/FreeRTOS/timers.c ****  * until either a timer does expire or a command is received.
 217:./Drivers/FreeRTOS/timers.c ****  */
 218:./Drivers/FreeRTOS/timers.c ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 219:./Drivers/FreeRTOS/timers.c ****                                             BaseType_t xListWasEmpty ) PRIVILEGED_FUNCTION;
 220:./Drivers/FreeRTOS/timers.c **** 
 221:./Drivers/FreeRTOS/timers.c **** /*
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 6


 222:./Drivers/FreeRTOS/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 223:./Drivers/FreeRTOS/timers.c ****  * dynamically to fill in the structure's members.
 224:./Drivers/FreeRTOS/timers.c ****  */
 225:./Drivers/FreeRTOS/timers.c ****     static void prvInitialiseNewTimer( const char * const pcTimerName, /*lint !e971 Unqualified cha
 226:./Drivers/FreeRTOS/timers.c ****                                        const TickType_t xTimerPeriodInTicks,
 227:./Drivers/FreeRTOS/timers.c ****                                        const UBaseType_t uxAutoReload,
 228:./Drivers/FreeRTOS/timers.c ****                                        void * const pvTimerID,
 229:./Drivers/FreeRTOS/timers.c ****                                        TimerCallbackFunction_t pxCallbackFunction,
 230:./Drivers/FreeRTOS/timers.c ****                                        Timer_t * pxNewTimer ) PRIVILEGED_FUNCTION;
 231:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 232:./Drivers/FreeRTOS/timers.c **** 
 233:./Drivers/FreeRTOS/timers.c ****     BaseType_t xTimerCreateTimerTask( void )
 234:./Drivers/FreeRTOS/timers.c ****     {
  69              		.loc 1 234 5
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 8
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73 0000 80B5     		push	{r7, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 84B0     		sub	sp, sp, #16
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 24
  81 0004 02AF     		add	r7, sp, #8
  82              	.LCFI2:
  83              		.cfi_def_cfa 7, 16
 235:./Drivers/FreeRTOS/timers.c ****         BaseType_t xReturn = pdFAIL;
  84              		.loc 1 235 20
  85 0006 0023     		movs	r3, #0
  86 0008 7B60     		str	r3, [r7, #4]
 236:./Drivers/FreeRTOS/timers.c **** 
 237:./Drivers/FreeRTOS/timers.c ****         /* This function is called when the scheduler is started if
 238:./Drivers/FreeRTOS/timers.c ****          * configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 239:./Drivers/FreeRTOS/timers.c ****          * timer service task has been created/initialised.  If timers have already
 240:./Drivers/FreeRTOS/timers.c ****          * been created then the initialisation will already have been performed. */
 241:./Drivers/FreeRTOS/timers.c ****         prvCheckForValidListAndQueue();
  87              		.loc 1 241 9
  88 000a FFF7FEFF 		bl	prvCheckForValidListAndQueue
 242:./Drivers/FreeRTOS/timers.c **** 
 243:./Drivers/FreeRTOS/timers.c ****         if( xTimerQueue != NULL )
  89              		.loc 1 243 25
  90 000e 114B     		ldr	r3, .L6
  91 0010 1B68     		ldr	r3, [r3]
  92              		.loc 1 243 11
  93 0012 002B     		cmp	r3, #0
  94 0014 0BD0     		beq	.L2
 244:./Drivers/FreeRTOS/timers.c ****         {
 245:./Drivers/FreeRTOS/timers.c ****             #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 246:./Drivers/FreeRTOS/timers.c ****                 {
 247:./Drivers/FreeRTOS/timers.c ****                     StaticTask_t * pxTimerTaskTCBBuffer = NULL;
 248:./Drivers/FreeRTOS/timers.c ****                     StackType_t * pxTimerTaskStackBuffer = NULL;
 249:./Drivers/FreeRTOS/timers.c ****                     uint32_t ulTimerTaskStackSize;
 250:./Drivers/FreeRTOS/timers.c **** 
 251:./Drivers/FreeRTOS/timers.c ****                     vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer,
 252:./Drivers/FreeRTOS/timers.c ****                     xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 7


 253:./Drivers/FreeRTOS/timers.c ****                                                           configTIMER_SERVICE_TASK_NAME,
 254:./Drivers/FreeRTOS/timers.c ****                                                           ulTimerTaskStackSize,
 255:./Drivers/FreeRTOS/timers.c ****                                                           NULL,
 256:./Drivers/FreeRTOS/timers.c ****                                                           ( ( UBaseType_t ) configTIMER_TASK_PRIORI
 257:./Drivers/FreeRTOS/timers.c ****                                                           pxTimerTaskStackBuffer,
 258:./Drivers/FreeRTOS/timers.c ****                                                           pxTimerTaskTCBBuffer );
 259:./Drivers/FreeRTOS/timers.c **** 
 260:./Drivers/FreeRTOS/timers.c ****                     if( xTimerTaskHandle != NULL )
 261:./Drivers/FreeRTOS/timers.c ****                     {
 262:./Drivers/FreeRTOS/timers.c ****                         xReturn = pdPASS;
 263:./Drivers/FreeRTOS/timers.c ****                     }
 264:./Drivers/FreeRTOS/timers.c ****                 }
 265:./Drivers/FreeRTOS/timers.c ****             #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 266:./Drivers/FreeRTOS/timers.c ****                 {
 267:./Drivers/FreeRTOS/timers.c ****                     xReturn = xTaskCreate( prvTimerTask,
  95              		.loc 1 267 31
  96 0016 104B     		ldr	r3, .L6+4
  97 0018 0193     		str	r3, [sp, #4]
  98 001a 0223     		movs	r3, #2
  99 001c 0093     		str	r3, [sp]
 100 001e 0023     		movs	r3, #0
 101 0020 4FF48272 		mov	r2, #260
 102 0024 0D49     		ldr	r1, .L6+8
 103 0026 0E48     		ldr	r0, .L6+12
 104 0028 FFF7FEFF 		bl	xTaskCreate
 105 002c 7860     		str	r0, [r7, #4]
 106              	.L2:
 268:./Drivers/FreeRTOS/timers.c ****                                            configTIMER_SERVICE_TASK_NAME,
 269:./Drivers/FreeRTOS/timers.c ****                                            configTIMER_TASK_STACK_DEPTH,
 270:./Drivers/FreeRTOS/timers.c ****                                            NULL,
 271:./Drivers/FreeRTOS/timers.c ****                                            ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIV
 272:./Drivers/FreeRTOS/timers.c ****                                            &xTimerTaskHandle );
 273:./Drivers/FreeRTOS/timers.c ****                 }
 274:./Drivers/FreeRTOS/timers.c ****             #endif /* configSUPPORT_STATIC_ALLOCATION */
 275:./Drivers/FreeRTOS/timers.c ****         }
 276:./Drivers/FreeRTOS/timers.c ****         else
 277:./Drivers/FreeRTOS/timers.c ****         {
 278:./Drivers/FreeRTOS/timers.c ****             mtCOVERAGE_TEST_MARKER();
 279:./Drivers/FreeRTOS/timers.c ****         }
 280:./Drivers/FreeRTOS/timers.c **** 
 281:./Drivers/FreeRTOS/timers.c ****         configASSERT( xReturn );
 107              		.loc 1 281 9
 108 002e 7B68     		ldr	r3, [r7, #4]
 109 0030 002B     		cmp	r3, #0
 110 0032 0AD1     		bne	.L3
 111              	.LBB28:
 112              	.LBB29:
 113              		.file 2 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
   1:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.4.6
   3:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * SPDX-License-Identifier: MIT
   6:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   7:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   9:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 8


  10:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  13:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  14:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  15:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  16:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  17:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  24:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  25:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  26:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  27:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  28:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  30:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  31:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define PORTMACRO_H
  32:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  33:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef __cplusplus
  34:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern "C" {
  35:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  36:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  37:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  38:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  39:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  40:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  41:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  42:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  43:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  44:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  45:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  46:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  47:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  48:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCHAR          char
  49:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFLOAT         float
  50:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDOUBLE        double
  51:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portLONG          long
  52:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSHORT         short
  53:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  54:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBASE_TYPE     long
  55:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  56:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  57:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef long             BaseType_t;
  58:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef unsigned long    UBaseType_t;
  59:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  60:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  61:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint16_t     TickType_t;
  62:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  63:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #else
  64:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint32_t     TickType_t;
  65:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  66:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 9


  67:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  68:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  69:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  70:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  71:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  72:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  73:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  74:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  75:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  76:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  77:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  78:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  79:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  80:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  81:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD()                                 \
  82:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  83:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  84:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  85:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  86:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  87:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  88:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  89:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
  90:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
  91:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  92:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  93:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  94:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    do { if( xSwitchRequired != pdFALSE ) portY
  95:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  96:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  97:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  98:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  99:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortEnterCritical( void );
 100:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortExitCritical( void );
 101:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 102:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 103:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 104:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 105:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 106:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 107:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 109:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 110:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 111:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 112:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 113:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 114:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 115:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 116:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 117:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 118:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 119:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 120:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 121:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 122:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 123:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 10


 124:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 125:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 126:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 127:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 128:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 130:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 131:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 132:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 133:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 134:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             uint8_t ucReturn;
 135:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 136:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 137:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             return ucReturn;
 139:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 140:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 141:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 142:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 143:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 144:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #endif
 145:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 146:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 147:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 148:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 149:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 152:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 153:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 154:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 155:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 156:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 158:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef configASSERT
 159:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         void vPortValidateInterruptPriority( void );
 160:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 161:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 162:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNOP()
 165:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 166:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portINLINE              __inline
 167:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 168:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portFORCE_INLINE
 169:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 170:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 171:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 172:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 173:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 174:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulCurrentInterrupt;
 175:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         BaseType_t xReturn;
 176:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 178:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 179:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 180:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         if( ulCurrentInterrupt == 0 )
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 11


 181:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 182:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdFALSE;
 183:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 184:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         else
 185:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 186:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdTRUE;
 187:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 188:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return xReturn;
 190:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 191:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 192:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 193:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 194:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 195:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 196:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulNewBASEPRI;
 197:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 198:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 114              		.loc 2 198 9
 115              		.syntax unified
 116              	@ 198 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 117 0034 4FF05003 			mov r3, #80												
 118 0038 83F31188 		msr basepri, r3											
 119 003c BFF36F8F 		isb														
 120 0040 BFF34F8F 		dsb														
 121              	
 122              	@ 0 "" 2
 123              		.thumb
 124              		.syntax unified
 125 0044 3B60     		str	r3, [r7]
 199:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 200:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %0, %1												\n"\
 201:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %0											\n"\
 202:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 203:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 204:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 205:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         );
 206:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 126              		.loc 2 206 5
 127 0046 00BF     		nop
 128              	.L4:
 129              	.LBE29:
 130              	.LBE28:
 131              		.loc 1 281 9 discriminator 1
 132 0048 FEE7     		b	.L4
 133              	.L3:
 282:./Drivers/FreeRTOS/timers.c ****         return xReturn;
 134              		.loc 1 282 16
 135 004a 7B68     		ldr	r3, [r7, #4]
 283:./Drivers/FreeRTOS/timers.c ****     }
 136              		.loc 1 283 5
 137 004c 1846     		mov	r0, r3
 138 004e 0837     		adds	r7, r7, #8
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 8
 141 0050 BD46     		mov	sp, r7
 142              	.LCFI4:
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 12


 143              		.cfi_def_cfa_register 13
 144              		@ sp needed
 145 0052 80BD     		pop	{r7, pc}
 146              	.L7:
 147              		.align	2
 148              	.L6:
 149 0054 00000000 		.word	xTimerQueue
 150 0058 00000000 		.word	xTimerTaskHandle
 151 005c 00000000 		.word	.LC0
 152 0060 00000000 		.word	prvTimerTask
 153              		.cfi_endproc
 154              	.LFE5:
 156              		.section	.text.xTimerCreate,"ax",%progbits
 157              		.align	1
 158              		.global	xTimerCreate
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu fpv4-sp-d16
 164              	xTimerCreate:
 165              	.LFB6:
 284:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 285:./Drivers/FreeRTOS/timers.c **** 
 286:./Drivers/FreeRTOS/timers.c ****     #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 287:./Drivers/FreeRTOS/timers.c **** 
 288:./Drivers/FreeRTOS/timers.c ****         TimerHandle_t xTimerCreate( const char * const pcTimerName, /*lint !e971 Unqualified char t
 289:./Drivers/FreeRTOS/timers.c ****                                     const TickType_t xTimerPeriodInTicks,
 290:./Drivers/FreeRTOS/timers.c ****                                     const UBaseType_t uxAutoReload,
 291:./Drivers/FreeRTOS/timers.c ****                                     void * const pvTimerID,
 292:./Drivers/FreeRTOS/timers.c ****                                     TimerCallbackFunction_t pxCallbackFunction )
 293:./Drivers/FreeRTOS/timers.c ****         {
 166              		.loc 1 293 9
 167              		.cfi_startproc
 168              		@ args = 4, pretend = 0, frame = 24
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170 0000 80B5     		push	{r7, lr}
 171              	.LCFI5:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 7, -8
 174              		.cfi_offset 14, -4
 175 0002 88B0     		sub	sp, sp, #32
 176              	.LCFI6:
 177              		.cfi_def_cfa_offset 40
 178 0004 02AF     		add	r7, sp, #8
 179              	.LCFI7:
 180              		.cfi_def_cfa 7, 32
 181 0006 F860     		str	r0, [r7, #12]
 182 0008 B960     		str	r1, [r7, #8]
 183 000a 7A60     		str	r2, [r7, #4]
 184 000c 3B60     		str	r3, [r7]
 294:./Drivers/FreeRTOS/timers.c ****             Timer_t * pxNewTimer;
 295:./Drivers/FreeRTOS/timers.c **** 
 296:./Drivers/FreeRTOS/timers.c ****             pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All 
 185              		.loc 1 296 40
 186 000e 2C20     		movs	r0, #44
 187 0010 FFF7FEFF 		bl	pvPortMalloc
 188 0014 7861     		str	r0, [r7, #20]
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 13


 297:./Drivers/FreeRTOS/timers.c **** 
 298:./Drivers/FreeRTOS/timers.c ****             if( pxNewTimer != NULL )
 189              		.loc 1 298 15
 190 0016 7B69     		ldr	r3, [r7, #20]
 191 0018 002B     		cmp	r3, #0
 192 001a 0DD0     		beq	.L9
 299:./Drivers/FreeRTOS/timers.c ****             {
 300:./Drivers/FreeRTOS/timers.c ****                 /* Status is thus far zero as the timer is not created statically
 301:./Drivers/FreeRTOS/timers.c ****                  * and has not been started.  The auto-reload bit may get set in
 302:./Drivers/FreeRTOS/timers.c ****                  * prvInitialiseNewTimer. */
 303:./Drivers/FreeRTOS/timers.c ****                 pxNewTimer->ucStatus = 0x00;
 193              		.loc 1 303 38
 194 001c 7B69     		ldr	r3, [r7, #20]
 195 001e 0022     		movs	r2, #0
 196 0020 83F82820 		strb	r2, [r3, #40]
 304:./Drivers/FreeRTOS/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, p
 197              		.loc 1 304 17
 198 0024 7B69     		ldr	r3, [r7, #20]
 199 0026 0193     		str	r3, [sp, #4]
 200 0028 3B6A     		ldr	r3, [r7, #32]
 201 002a 0093     		str	r3, [sp]
 202 002c 3B68     		ldr	r3, [r7]
 203 002e 7A68     		ldr	r2, [r7, #4]
 204 0030 B968     		ldr	r1, [r7, #8]
 205 0032 F868     		ldr	r0, [r7, #12]
 206 0034 FFF7FEFF 		bl	prvInitialiseNewTimer
 207              	.L9:
 305:./Drivers/FreeRTOS/timers.c ****             }
 306:./Drivers/FreeRTOS/timers.c **** 
 307:./Drivers/FreeRTOS/timers.c ****             return pxNewTimer;
 208              		.loc 1 307 20
 209 0038 7B69     		ldr	r3, [r7, #20]
 308:./Drivers/FreeRTOS/timers.c ****         }
 210              		.loc 1 308 9
 211 003a 1846     		mov	r0, r3
 212 003c 1837     		adds	r7, r7, #24
 213              	.LCFI8:
 214              		.cfi_def_cfa_offset 8
 215 003e BD46     		mov	sp, r7
 216              	.LCFI9:
 217              		.cfi_def_cfa_register 13
 218              		@ sp needed
 219 0040 80BD     		pop	{r7, pc}
 220              		.cfi_endproc
 221              	.LFE6:
 223              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 224              		.align	1
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	prvInitialiseNewTimer:
 231              	.LFB7:
 309:./Drivers/FreeRTOS/timers.c **** 
 310:./Drivers/FreeRTOS/timers.c ****     #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 311:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 312:./Drivers/FreeRTOS/timers.c **** 
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 14


 313:./Drivers/FreeRTOS/timers.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 314:./Drivers/FreeRTOS/timers.c **** 
 315:./Drivers/FreeRTOS/timers.c ****         TimerHandle_t xTimerCreateStatic( const char * const pcTimerName, /*lint !e971 Unqualified 
 316:./Drivers/FreeRTOS/timers.c ****                                           const TickType_t xTimerPeriodInTicks,
 317:./Drivers/FreeRTOS/timers.c ****                                           const UBaseType_t uxAutoReload,
 318:./Drivers/FreeRTOS/timers.c ****                                           void * const pvTimerID,
 319:./Drivers/FreeRTOS/timers.c ****                                           TimerCallbackFunction_t pxCallbackFunction,
 320:./Drivers/FreeRTOS/timers.c ****                                           StaticTimer_t * pxTimerBuffer )
 321:./Drivers/FreeRTOS/timers.c ****         {
 322:./Drivers/FreeRTOS/timers.c ****             Timer_t * pxNewTimer;
 323:./Drivers/FreeRTOS/timers.c **** 
 324:./Drivers/FreeRTOS/timers.c ****             #if ( configASSERT_DEFINED == 1 )
 325:./Drivers/FreeRTOS/timers.c ****                 {
 326:./Drivers/FreeRTOS/timers.c ****                     /* Sanity check that the size of the structure used to declare a
 327:./Drivers/FreeRTOS/timers.c ****                      * variable of type StaticTimer_t equals the size of the real timer
 328:./Drivers/FreeRTOS/timers.c ****                      * structure. */
 329:./Drivers/FreeRTOS/timers.c ****                     volatile size_t xSize = sizeof( StaticTimer_t );
 330:./Drivers/FreeRTOS/timers.c ****                     configASSERT( xSize == sizeof( Timer_t ) );
 331:./Drivers/FreeRTOS/timers.c ****                     ( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 332:./Drivers/FreeRTOS/timers.c ****                 }
 333:./Drivers/FreeRTOS/timers.c ****             #endif /* configASSERT_DEFINED */
 334:./Drivers/FreeRTOS/timers.c **** 
 335:./Drivers/FreeRTOS/timers.c ****             /* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 336:./Drivers/FreeRTOS/timers.c ****             configASSERT( pxTimerBuffer );
 337:./Drivers/FreeRTOS/timers.c ****             pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointe
 338:./Drivers/FreeRTOS/timers.c **** 
 339:./Drivers/FreeRTOS/timers.c ****             if( pxNewTimer != NULL )
 340:./Drivers/FreeRTOS/timers.c ****             {
 341:./Drivers/FreeRTOS/timers.c ****                 /* Timers can be created statically or dynamically so note this
 342:./Drivers/FreeRTOS/timers.c ****                  * timer was created statically in case it is later deleted.  The
 343:./Drivers/FreeRTOS/timers.c ****                  * auto-reload bit may get set in prvInitialiseNewTimer(). */
 344:./Drivers/FreeRTOS/timers.c ****                 pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 345:./Drivers/FreeRTOS/timers.c **** 
 346:./Drivers/FreeRTOS/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, p
 347:./Drivers/FreeRTOS/timers.c ****             }
 348:./Drivers/FreeRTOS/timers.c **** 
 349:./Drivers/FreeRTOS/timers.c ****             return pxNewTimer;
 350:./Drivers/FreeRTOS/timers.c ****         }
 351:./Drivers/FreeRTOS/timers.c **** 
 352:./Drivers/FreeRTOS/timers.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
 353:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 354:./Drivers/FreeRTOS/timers.c **** 
 355:./Drivers/FreeRTOS/timers.c ****     static void prvInitialiseNewTimer( const char * const pcTimerName, /*lint !e971 Unqualified cha
 356:./Drivers/FreeRTOS/timers.c ****                                        const TickType_t xTimerPeriodInTicks,
 357:./Drivers/FreeRTOS/timers.c ****                                        const UBaseType_t uxAutoReload,
 358:./Drivers/FreeRTOS/timers.c ****                                        void * const pvTimerID,
 359:./Drivers/FreeRTOS/timers.c ****                                        TimerCallbackFunction_t pxCallbackFunction,
 360:./Drivers/FreeRTOS/timers.c ****                                        Timer_t * pxNewTimer )
 361:./Drivers/FreeRTOS/timers.c ****     {
 232              		.loc 1 361 5
 233              		.cfi_startproc
 234              		@ args = 8, pretend = 0, frame = 24
 235              		@ frame_needed = 1, uses_anonymous_args = 0
 236 0000 80B5     		push	{r7, lr}
 237              	.LCFI10:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 7, -8
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 15


 240              		.cfi_offset 14, -4
 241 0002 86B0     		sub	sp, sp, #24
 242              	.LCFI11:
 243              		.cfi_def_cfa_offset 32
 244 0004 00AF     		add	r7, sp, #0
 245              	.LCFI12:
 246              		.cfi_def_cfa_register 7
 247 0006 F860     		str	r0, [r7, #12]
 248 0008 B960     		str	r1, [r7, #8]
 249 000a 7A60     		str	r2, [r7, #4]
 250 000c 3B60     		str	r3, [r7]
 362:./Drivers/FreeRTOS/timers.c ****         /* 0 is not a valid value for xTimerPeriodInTicks. */
 363:./Drivers/FreeRTOS/timers.c ****         configASSERT( ( xTimerPeriodInTicks > 0 ) );
 251              		.loc 1 363 9
 252 000e BB68     		ldr	r3, [r7, #8]
 253 0010 002B     		cmp	r3, #0
 254 0012 0AD1     		bne	.L12
 255              	.LBB30:
 256              	.LBB31:
 198:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 257              		.loc 2 198 9
 258              		.syntax unified
 259              	@ 198 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 260 0014 4FF05003 			mov r3, #80												
 261 0018 83F31188 		msr basepri, r3											
 262 001c BFF36F8F 		isb														
 263 0020 BFF34F8F 		dsb														
 264              	
 265              	@ 0 "" 2
 266              		.thumb
 267              		.syntax unified
 268 0024 7B61     		str	r3, [r7, #20]
 269              		.loc 2 206 5
 270 0026 00BF     		nop
 271              	.L13:
 272              	.LBE31:
 273              	.LBE30:
 274              		.loc 1 363 9 discriminator 1
 275 0028 FEE7     		b	.L13
 276              	.L12:
 364:./Drivers/FreeRTOS/timers.c **** 
 365:./Drivers/FreeRTOS/timers.c ****         /* Ensure the infrastructure used by the timer service task has been
 366:./Drivers/FreeRTOS/timers.c ****          * created/initialised. */
 367:./Drivers/FreeRTOS/timers.c ****         prvCheckForValidListAndQueue();
 277              		.loc 1 367 9
 278 002a FFF7FEFF 		bl	prvCheckForValidListAndQueue
 368:./Drivers/FreeRTOS/timers.c **** 
 369:./Drivers/FreeRTOS/timers.c ****         /* Initialise the timer structure members using the function
 370:./Drivers/FreeRTOS/timers.c ****          * parameters. */
 371:./Drivers/FreeRTOS/timers.c ****         pxNewTimer->pcTimerName = pcTimerName;
 279              		.loc 1 371 33
 280 002e 7B6A     		ldr	r3, [r7, #36]
 281 0030 FA68     		ldr	r2, [r7, #12]
 282 0032 1A60     		str	r2, [r3]
 372:./Drivers/FreeRTOS/timers.c ****         pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 283              		.loc 1 372 41
 284 0034 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 16


 285 0036 BA68     		ldr	r2, [r7, #8]
 286 0038 9A61     		str	r2, [r3, #24]
 373:./Drivers/FreeRTOS/timers.c ****         pxNewTimer->pvTimerID = pvTimerID;
 287              		.loc 1 373 31
 288 003a 7B6A     		ldr	r3, [r7, #36]
 289 003c 3A68     		ldr	r2, [r7]
 290 003e DA61     		str	r2, [r3, #28]
 374:./Drivers/FreeRTOS/timers.c ****         pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 291              		.loc 1 374 40
 292 0040 7B6A     		ldr	r3, [r7, #36]
 293 0042 3A6A     		ldr	r2, [r7, #32]
 294 0044 1A62     		str	r2, [r3, #32]
 375:./Drivers/FreeRTOS/timers.c ****         vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 295              		.loc 1 375 9
 296 0046 7B6A     		ldr	r3, [r7, #36]
 297 0048 0433     		adds	r3, r3, #4
 298 004a 1846     		mov	r0, r3
 299 004c FFF7FEFF 		bl	vListInitialiseItem
 376:./Drivers/FreeRTOS/timers.c **** 
 377:./Drivers/FreeRTOS/timers.c ****         if( uxAutoReload != pdFALSE )
 300              		.loc 1 377 11
 301 0050 7B68     		ldr	r3, [r7, #4]
 302 0052 002B     		cmp	r3, #0
 303 0054 08D0     		beq	.L15
 378:./Drivers/FreeRTOS/timers.c ****         {
 379:./Drivers/FreeRTOS/timers.c ****             pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 304              		.loc 1 379 34
 305 0056 7B6A     		ldr	r3, [r7, #36]
 306 0058 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 307 005c 43F00403 		orr	r3, r3, #4
 308 0060 DAB2     		uxtb	r2, r3
 309 0062 7B6A     		ldr	r3, [r7, #36]
 310 0064 83F82820 		strb	r2, [r3, #40]
 311              	.L15:
 380:./Drivers/FreeRTOS/timers.c ****         }
 381:./Drivers/FreeRTOS/timers.c **** 
 382:./Drivers/FreeRTOS/timers.c ****         traceTIMER_CREATE( pxNewTimer );
 383:./Drivers/FreeRTOS/timers.c ****     }
 312              		.loc 1 383 5
 313 0068 00BF     		nop
 314 006a 1837     		adds	r7, r7, #24
 315              	.LCFI13:
 316              		.cfi_def_cfa_offset 8
 317 006c BD46     		mov	sp, r7
 318              	.LCFI14:
 319              		.cfi_def_cfa_register 13
 320              		@ sp needed
 321 006e 80BD     		pop	{r7, pc}
 322              		.cfi_endproc
 323              	.LFE7:
 325              		.section	.text.xTimerGenericCommand,"ax",%progbits
 326              		.align	1
 327              		.global	xTimerGenericCommand
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 331              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 17


 333              	xTimerGenericCommand:
 334              	.LFB8:
 384:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 385:./Drivers/FreeRTOS/timers.c **** 
 386:./Drivers/FreeRTOS/timers.c ****     BaseType_t xTimerGenericCommand( TimerHandle_t xTimer,
 387:./Drivers/FreeRTOS/timers.c ****                                      const BaseType_t xCommandID,
 388:./Drivers/FreeRTOS/timers.c ****                                      const TickType_t xOptionalValue,
 389:./Drivers/FreeRTOS/timers.c ****                                      BaseType_t * const pxHigherPriorityTaskWoken,
 390:./Drivers/FreeRTOS/timers.c ****                                      const TickType_t xTicksToWait )
 391:./Drivers/FreeRTOS/timers.c ****     {
 335              		.loc 1 391 5
 336              		.cfi_startproc
 337              		@ args = 4, pretend = 0, frame = 40
 338              		@ frame_needed = 1, uses_anonymous_args = 0
 339 0000 80B5     		push	{r7, lr}
 340              	.LCFI15:
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 8AB0     		sub	sp, sp, #40
 345              	.LCFI16:
 346              		.cfi_def_cfa_offset 48
 347 0004 00AF     		add	r7, sp, #0
 348              	.LCFI17:
 349              		.cfi_def_cfa_register 7
 350 0006 F860     		str	r0, [r7, #12]
 351 0008 B960     		str	r1, [r7, #8]
 352 000a 7A60     		str	r2, [r7, #4]
 353 000c 3B60     		str	r3, [r7]
 392:./Drivers/FreeRTOS/timers.c ****         BaseType_t xReturn = pdFAIL;
 354              		.loc 1 392 20
 355 000e 0023     		movs	r3, #0
 356 0010 7B62     		str	r3, [r7, #36]
 393:./Drivers/FreeRTOS/timers.c ****         DaemonTaskMessage_t xMessage;
 394:./Drivers/FreeRTOS/timers.c **** 
 395:./Drivers/FreeRTOS/timers.c ****         configASSERT( xTimer );
 357              		.loc 1 395 9
 358 0012 FB68     		ldr	r3, [r7, #12]
 359 0014 002B     		cmp	r3, #0
 360 0016 0AD1     		bne	.L17
 361              	.LBB32:
 362              	.LBB33:
 198:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 363              		.loc 2 198 9
 364              		.syntax unified
 365              	@ 198 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 366 0018 4FF05003 			mov r3, #80												
 367 001c 83F31188 		msr basepri, r3											
 368 0020 BFF36F8F 		isb														
 369 0024 BFF34F8F 		dsb														
 370              	
 371              	@ 0 "" 2
 372              		.thumb
 373              		.syntax unified
 374 0028 3B62     		str	r3, [r7, #32]
 375              		.loc 2 206 5
 376 002a 00BF     		nop
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 18


 377              	.L18:
 378              	.LBE33:
 379              	.LBE32:
 380              		.loc 1 395 9 discriminator 1
 381 002c FEE7     		b	.L18
 382              	.L17:
 396:./Drivers/FreeRTOS/timers.c **** 
 397:./Drivers/FreeRTOS/timers.c ****         /* Send a message to the timer service task to perform a particular action
 398:./Drivers/FreeRTOS/timers.c ****          * on a particular timer definition. */
 399:./Drivers/FreeRTOS/timers.c ****         if( xTimerQueue != NULL )
 383              		.loc 1 399 25
 384 002e 1A4B     		ldr	r3, .L23
 385 0030 1B68     		ldr	r3, [r3]
 386              		.loc 1 399 11
 387 0032 002B     		cmp	r3, #0
 388 0034 2AD0     		beq	.L19
 400:./Drivers/FreeRTOS/timers.c ****         {
 401:./Drivers/FreeRTOS/timers.c ****             /* Send a command to the timer service task to start the xTimer timer. */
 402:./Drivers/FreeRTOS/timers.c ****             xMessage.xMessageID = xCommandID;
 389              		.loc 1 402 33
 390 0036 BB68     		ldr	r3, [r7, #8]
 391 0038 7B61     		str	r3, [r7, #20]
 403:./Drivers/FreeRTOS/timers.c ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 392              		.loc 1 403 55
 393 003a 7B68     		ldr	r3, [r7, #4]
 394 003c BB61     		str	r3, [r7, #24]
 404:./Drivers/FreeRTOS/timers.c ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 395              		.loc 1 404 49
 396 003e FB68     		ldr	r3, [r7, #12]
 397 0040 FB61     		str	r3, [r7, #28]
 405:./Drivers/FreeRTOS/timers.c **** 
 406:./Drivers/FreeRTOS/timers.c ****             if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398              		.loc 1 406 15
 399 0042 BB68     		ldr	r3, [r7, #8]
 400 0044 052B     		cmp	r3, #5
 401 0046 18DC     		bgt	.L20
 407:./Drivers/FreeRTOS/timers.c ****             {
 408:./Drivers/FreeRTOS/timers.c ****                 if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 402              		.loc 1 408 21
 403 0048 FFF7FEFF 		bl	xTaskGetSchedulerState
 404 004c 0346     		mov	r3, r0
 405              		.loc 1 408 19
 406 004e 022B     		cmp	r3, #2
 407 0050 09D1     		bne	.L21
 409:./Drivers/FreeRTOS/timers.c ****                 {
 410:./Drivers/FreeRTOS/timers.c ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 408              		.loc 1 410 31
 409 0052 114B     		ldr	r3, .L23
 410 0054 1868     		ldr	r0, [r3]
 411 0056 07F11401 		add	r1, r7, #20
 412 005a 0023     		movs	r3, #0
 413 005c 3A6B     		ldr	r2, [r7, #48]
 414 005e FFF7FEFF 		bl	xQueueGenericSend
 415 0062 7862     		str	r0, [r7, #36]
 416 0064 12E0     		b	.L19
 417              	.L21:
 411:./Drivers/FreeRTOS/timers.c ****                 }
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 19


 412:./Drivers/FreeRTOS/timers.c ****                 else
 413:./Drivers/FreeRTOS/timers.c ****                 {
 414:./Drivers/FreeRTOS/timers.c ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 418              		.loc 1 414 31
 419 0066 0C4B     		ldr	r3, .L23
 420 0068 1868     		ldr	r0, [r3]
 421 006a 07F11401 		add	r1, r7, #20
 422 006e 0023     		movs	r3, #0
 423 0070 0022     		movs	r2, #0
 424 0072 FFF7FEFF 		bl	xQueueGenericSend
 425 0076 7862     		str	r0, [r7, #36]
 426 0078 08E0     		b	.L19
 427              	.L20:
 415:./Drivers/FreeRTOS/timers.c ****                 }
 416:./Drivers/FreeRTOS/timers.c ****             }
 417:./Drivers/FreeRTOS/timers.c ****             else
 418:./Drivers/FreeRTOS/timers.c ****             {
 419:./Drivers/FreeRTOS/timers.c ****                 xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoke
 428              		.loc 1 419 27
 429 007a 074B     		ldr	r3, .L23
 430 007c 1868     		ldr	r0, [r3]
 431 007e 07F11401 		add	r1, r7, #20
 432 0082 0023     		movs	r3, #0
 433 0084 3A68     		ldr	r2, [r7]
 434 0086 FFF7FEFF 		bl	xQueueGenericSendFromISR
 435 008a 7862     		str	r0, [r7, #36]
 436              	.L19:
 420:./Drivers/FreeRTOS/timers.c ****             }
 421:./Drivers/FreeRTOS/timers.c **** 
 422:./Drivers/FreeRTOS/timers.c ****             traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 423:./Drivers/FreeRTOS/timers.c ****         }
 424:./Drivers/FreeRTOS/timers.c ****         else
 425:./Drivers/FreeRTOS/timers.c ****         {
 426:./Drivers/FreeRTOS/timers.c ****             mtCOVERAGE_TEST_MARKER();
 427:./Drivers/FreeRTOS/timers.c ****         }
 428:./Drivers/FreeRTOS/timers.c **** 
 429:./Drivers/FreeRTOS/timers.c ****         return xReturn;
 437              		.loc 1 429 16
 438 008c 7B6A     		ldr	r3, [r7, #36]
 430:./Drivers/FreeRTOS/timers.c ****     }
 439              		.loc 1 430 5
 440 008e 1846     		mov	r0, r3
 441 0090 2837     		adds	r7, r7, #40
 442              	.LCFI18:
 443              		.cfi_def_cfa_offset 8
 444 0092 BD46     		mov	sp, r7
 445              	.LCFI19:
 446              		.cfi_def_cfa_register 13
 447              		@ sp needed
 448 0094 80BD     		pop	{r7, pc}
 449              	.L24:
 450 0096 00BF     		.align	2
 451              	.L23:
 452 0098 00000000 		.word	xTimerQueue
 453              		.cfi_endproc
 454              	.LFE8:
 456              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 20


 457              		.align	1
 458              		.global	xTimerGetTimerDaemonTaskHandle
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 462              		.fpu fpv4-sp-d16
 464              	xTimerGetTimerDaemonTaskHandle:
 465              	.LFB9:
 431:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 432:./Drivers/FreeRTOS/timers.c **** 
 433:./Drivers/FreeRTOS/timers.c ****     TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 434:./Drivers/FreeRTOS/timers.c ****     {
 466              		.loc 1 434 5
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 8
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471 0000 80B4     		push	{r7}
 472              	.LCFI20:
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 7, -4
 475 0002 83B0     		sub	sp, sp, #12
 476              	.LCFI21:
 477              		.cfi_def_cfa_offset 16
 478 0004 00AF     		add	r7, sp, #0
 479              	.LCFI22:
 480              		.cfi_def_cfa_register 7
 435:./Drivers/FreeRTOS/timers.c ****         /* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 436:./Drivers/FreeRTOS/timers.c ****          * started, then xTimerTaskHandle will be NULL. */
 437:./Drivers/FreeRTOS/timers.c ****         configASSERT( ( xTimerTaskHandle != NULL ) );
 481              		.loc 1 437 9
 482 0006 0B4B     		ldr	r3, .L29
 483 0008 1B68     		ldr	r3, [r3]
 484 000a 002B     		cmp	r3, #0
 485 000c 0AD1     		bne	.L26
 486              	.LBB34:
 487              	.LBB35:
 198:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 488              		.loc 2 198 9
 489              		.syntax unified
 490              	@ 198 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 491 000e 4FF05003 			mov r3, #80												
 492 0012 83F31188 		msr basepri, r3											
 493 0016 BFF36F8F 		isb														
 494 001a BFF34F8F 		dsb														
 495              	
 496              	@ 0 "" 2
 497              		.thumb
 498              		.syntax unified
 499 001e 7B60     		str	r3, [r7, #4]
 500              		.loc 2 206 5
 501 0020 00BF     		nop
 502              	.L27:
 503              	.LBE35:
 504              	.LBE34:
 505              		.loc 1 437 9 discriminator 1
 506 0022 FEE7     		b	.L27
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 21


 507              	.L26:
 438:./Drivers/FreeRTOS/timers.c ****         return xTimerTaskHandle;
 508              		.loc 1 438 16
 509 0024 034B     		ldr	r3, .L29
 510 0026 1B68     		ldr	r3, [r3]
 439:./Drivers/FreeRTOS/timers.c ****     }
 511              		.loc 1 439 5
 512 0028 1846     		mov	r0, r3
 513 002a 0C37     		adds	r7, r7, #12
 514              	.LCFI23:
 515              		.cfi_def_cfa_offset 4
 516 002c BD46     		mov	sp, r7
 517              	.LCFI24:
 518              		.cfi_def_cfa_register 13
 519              		@ sp needed
 520 002e 5DF8047B 		ldr	r7, [sp], #4
 521              	.LCFI25:
 522              		.cfi_restore 7
 523              		.cfi_def_cfa_offset 0
 524 0032 7047     		bx	lr
 525              	.L30:
 526              		.align	2
 527              	.L29:
 528 0034 00000000 		.word	xTimerTaskHandle
 529              		.cfi_endproc
 530              	.LFE9:
 532              		.section	.text.xTimerGetPeriod,"ax",%progbits
 533              		.align	1
 534              		.global	xTimerGetPeriod
 535              		.syntax unified
 536              		.thumb
 537              		.thumb_func
 538              		.fpu fpv4-sp-d16
 540              	xTimerGetPeriod:
 541              	.LFB10:
 440:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 441:./Drivers/FreeRTOS/timers.c **** 
 442:./Drivers/FreeRTOS/timers.c ****     TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 443:./Drivers/FreeRTOS/timers.c ****     {
 542              		.loc 1 443 5
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 16
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 547 0000 80B4     		push	{r7}
 548              	.LCFI26:
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 85B0     		sub	sp, sp, #20
 552              	.LCFI27:
 553              		.cfi_def_cfa_offset 24
 554 0004 00AF     		add	r7, sp, #0
 555              	.LCFI28:
 556              		.cfi_def_cfa_register 7
 557 0006 7860     		str	r0, [r7, #4]
 444:./Drivers/FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 558              		.loc 1 444 19
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 22


 559 0008 7B68     		ldr	r3, [r7, #4]
 560 000a FB60     		str	r3, [r7, #12]
 445:./Drivers/FreeRTOS/timers.c **** 
 446:./Drivers/FreeRTOS/timers.c ****         configASSERT( xTimer );
 561              		.loc 1 446 9
 562 000c 7B68     		ldr	r3, [r7, #4]
 563 000e 002B     		cmp	r3, #0
 564 0010 0AD1     		bne	.L32
 565              	.LBB36:
 566              	.LBB37:
 198:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 567              		.loc 2 198 9
 568              		.syntax unified
 569              	@ 198 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 570 0012 4FF05003 			mov r3, #80												
 571 0016 83F31188 		msr basepri, r3											
 572 001a BFF36F8F 		isb														
 573 001e BFF34F8F 		dsb														
 574              	
 575              	@ 0 "" 2
 576              		.thumb
 577              		.syntax unified
 578 0022 BB60     		str	r3, [r7, #8]
 579              		.loc 2 206 5
 580 0024 00BF     		nop
 581              	.L33:
 582              	.LBE37:
 583              	.LBE36:
 584              		.loc 1 446 9 discriminator 1
 585 0026 FEE7     		b	.L33
 586              	.L32:
 447:./Drivers/FreeRTOS/timers.c ****         return pxTimer->xTimerPeriodInTicks;
 587              		.loc 1 447 23
 588 0028 FB68     		ldr	r3, [r7, #12]
 589 002a 9B69     		ldr	r3, [r3, #24]
 448:./Drivers/FreeRTOS/timers.c ****     }
 590              		.loc 1 448 5
 591 002c 1846     		mov	r0, r3
 592 002e 1437     		adds	r7, r7, #20
 593              	.LCFI29:
 594              		.cfi_def_cfa_offset 4
 595 0030 BD46     		mov	sp, r7
 596              	.LCFI30:
 597              		.cfi_def_cfa_register 13
 598              		@ sp needed
 599 0032 5DF8047B 		ldr	r7, [sp], #4
 600              	.LCFI31:
 601              		.cfi_restore 7
 602              		.cfi_def_cfa_offset 0
 603 0036 7047     		bx	lr
 604              		.cfi_endproc
 605              	.LFE10:
 607              		.section	.text.vTimerSetReloadMode,"ax",%progbits
 608              		.align	1
 609              		.global	vTimerSetReloadMode
 610              		.syntax unified
 611              		.thumb
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 23


 612              		.thumb_func
 613              		.fpu fpv4-sp-d16
 615              	vTimerSetReloadMode:
 616              	.LFB11:
 449:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 450:./Drivers/FreeRTOS/timers.c **** 
 451:./Drivers/FreeRTOS/timers.c ****     void vTimerSetReloadMode( TimerHandle_t xTimer,
 452:./Drivers/FreeRTOS/timers.c ****                               const UBaseType_t uxAutoReload )
 453:./Drivers/FreeRTOS/timers.c ****     {
 617              		.loc 1 453 5
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 16
 620              		@ frame_needed = 1, uses_anonymous_args = 0
 621 0000 80B5     		push	{r7, lr}
 622              	.LCFI32:
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 7, -8
 625              		.cfi_offset 14, -4
 626 0002 84B0     		sub	sp, sp, #16
 627              	.LCFI33:
 628              		.cfi_def_cfa_offset 24
 629 0004 00AF     		add	r7, sp, #0
 630              	.LCFI34:
 631              		.cfi_def_cfa_register 7
 632 0006 7860     		str	r0, [r7, #4]
 633 0008 3960     		str	r1, [r7]
 454:./Drivers/FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 634              		.loc 1 454 19
 635 000a 7B68     		ldr	r3, [r7, #4]
 636 000c FB60     		str	r3, [r7, #12]
 455:./Drivers/FreeRTOS/timers.c **** 
 456:./Drivers/FreeRTOS/timers.c ****         configASSERT( xTimer );
 637              		.loc 1 456 9
 638 000e 7B68     		ldr	r3, [r7, #4]
 639 0010 002B     		cmp	r3, #0
 640 0012 0AD1     		bne	.L36
 641              	.LBB38:
 642              	.LBB39:
 198:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 643              		.loc 2 198 9
 644              		.syntax unified
 645              	@ 198 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 646 0014 4FF05003 			mov r3, #80												
 647 0018 83F31188 		msr basepri, r3											
 648 001c BFF36F8F 		isb														
 649 0020 BFF34F8F 		dsb														
 650              	
 651              	@ 0 "" 2
 652              		.thumb
 653              		.syntax unified
 654 0024 BB60     		str	r3, [r7, #8]
 655              		.loc 2 206 5
 656 0026 00BF     		nop
 657              	.L37:
 658              	.LBE39:
 659              	.LBE38:
 660              		.loc 1 456 9 discriminator 1
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 24


 661 0028 FEE7     		b	.L37
 662              	.L36:
 457:./Drivers/FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 663              		.loc 1 457 9
 664 002a FFF7FEFF 		bl	vPortEnterCritical
 458:./Drivers/FreeRTOS/timers.c ****         {
 459:./Drivers/FreeRTOS/timers.c ****             if( uxAutoReload != pdFALSE )
 665              		.loc 1 459 15
 666 002e 3B68     		ldr	r3, [r7]
 667 0030 002B     		cmp	r3, #0
 668 0032 09D0     		beq	.L38
 460:./Drivers/FreeRTOS/timers.c ****             {
 461:./Drivers/FreeRTOS/timers.c ****                 pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 669              		.loc 1 461 35
 670 0034 FB68     		ldr	r3, [r7, #12]
 671 0036 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 672 003a 43F00403 		orr	r3, r3, #4
 673 003e DAB2     		uxtb	r2, r3
 674 0040 FB68     		ldr	r3, [r7, #12]
 675 0042 83F82820 		strb	r2, [r3, #40]
 676 0046 08E0     		b	.L39
 677              	.L38:
 462:./Drivers/FreeRTOS/timers.c ****             }
 463:./Drivers/FreeRTOS/timers.c ****             else
 464:./Drivers/FreeRTOS/timers.c ****             {
 465:./Drivers/FreeRTOS/timers.c ****                 pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_AUTORELOAD );
 678              		.loc 1 465 35
 679 0048 FB68     		ldr	r3, [r7, #12]
 680 004a 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 681 004e 23F00403 		bic	r3, r3, #4
 682 0052 DAB2     		uxtb	r2, r3
 683 0054 FB68     		ldr	r3, [r7, #12]
 684 0056 83F82820 		strb	r2, [r3, #40]
 685              	.L39:
 466:./Drivers/FreeRTOS/timers.c ****             }
 467:./Drivers/FreeRTOS/timers.c ****         }
 468:./Drivers/FreeRTOS/timers.c ****         taskEXIT_CRITICAL();
 686              		.loc 1 468 9
 687 005a FFF7FEFF 		bl	vPortExitCritical
 469:./Drivers/FreeRTOS/timers.c ****     }
 688              		.loc 1 469 5
 689 005e 00BF     		nop
 690 0060 1037     		adds	r7, r7, #16
 691              	.LCFI35:
 692              		.cfi_def_cfa_offset 8
 693 0062 BD46     		mov	sp, r7
 694              	.LCFI36:
 695              		.cfi_def_cfa_register 13
 696              		@ sp needed
 697 0064 80BD     		pop	{r7, pc}
 698              		.cfi_endproc
 699              	.LFE11:
 701              		.section	.text.uxTimerGetReloadMode,"ax",%progbits
 702              		.align	1
 703              		.global	uxTimerGetReloadMode
 704              		.syntax unified
 705              		.thumb
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 25


 706              		.thumb_func
 707              		.fpu fpv4-sp-d16
 709              	uxTimerGetReloadMode:
 710              	.LFB12:
 470:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 471:./Drivers/FreeRTOS/timers.c **** 
 472:./Drivers/FreeRTOS/timers.c ****     UBaseType_t uxTimerGetReloadMode( TimerHandle_t xTimer )
 473:./Drivers/FreeRTOS/timers.c ****     {
 711              		.loc 1 473 5
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 24
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715 0000 80B5     		push	{r7, lr}
 716              	.LCFI37:
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 7, -8
 719              		.cfi_offset 14, -4
 720 0002 86B0     		sub	sp, sp, #24
 721              	.LCFI38:
 722              		.cfi_def_cfa_offset 32
 723 0004 00AF     		add	r7, sp, #0
 724              	.LCFI39:
 725              		.cfi_def_cfa_register 7
 726 0006 7860     		str	r0, [r7, #4]
 474:./Drivers/FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 727              		.loc 1 474 19
 728 0008 7B68     		ldr	r3, [r7, #4]
 729 000a 3B61     		str	r3, [r7, #16]
 475:./Drivers/FreeRTOS/timers.c ****         UBaseType_t uxReturn;
 476:./Drivers/FreeRTOS/timers.c **** 
 477:./Drivers/FreeRTOS/timers.c ****         configASSERT( xTimer );
 730              		.loc 1 477 9
 731 000c 7B68     		ldr	r3, [r7, #4]
 732 000e 002B     		cmp	r3, #0
 733 0010 0AD1     		bne	.L41
 734              	.LBB40:
 735              	.LBB41:
 198:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 736              		.loc 2 198 9
 737              		.syntax unified
 738              	@ 198 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 739 0012 4FF05003 			mov r3, #80												
 740 0016 83F31188 		msr basepri, r3											
 741 001a BFF36F8F 		isb														
 742 001e BFF34F8F 		dsb														
 743              	
 744              	@ 0 "" 2
 745              		.thumb
 746              		.syntax unified
 747 0022 FB60     		str	r3, [r7, #12]
 748              		.loc 2 206 5
 749 0024 00BF     		nop
 750              	.L42:
 751              	.LBE41:
 752              	.LBE40:
 753              		.loc 1 477 9 discriminator 1
 754 0026 FEE7     		b	.L42
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 26


 755              	.L41:
 478:./Drivers/FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 756              		.loc 1 478 9
 757 0028 FFF7FEFF 		bl	vPortEnterCritical
 479:./Drivers/FreeRTOS/timers.c ****         {
 480:./Drivers/FreeRTOS/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) == 0 )
 758              		.loc 1 480 26
 759 002c 3B69     		ldr	r3, [r7, #16]
 760 002e 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 761              		.loc 1 480 37
 762 0032 03F00403 		and	r3, r3, #4
 763              		.loc 1 480 15
 764 0036 002B     		cmp	r3, #0
 765 0038 02D1     		bne	.L43
 481:./Drivers/FreeRTOS/timers.c ****             {
 482:./Drivers/FreeRTOS/timers.c ****                 /* Not an auto-reload timer. */
 483:./Drivers/FreeRTOS/timers.c ****                 uxReturn = ( UBaseType_t ) pdFALSE;
 766              		.loc 1 483 26
 767 003a 0023     		movs	r3, #0
 768 003c 7B61     		str	r3, [r7, #20]
 769 003e 01E0     		b	.L44
 770              	.L43:
 484:./Drivers/FreeRTOS/timers.c ****             }
 485:./Drivers/FreeRTOS/timers.c ****             else
 486:./Drivers/FreeRTOS/timers.c ****             {
 487:./Drivers/FreeRTOS/timers.c ****                 /* Is an auto-reload timer. */
 488:./Drivers/FreeRTOS/timers.c ****                 uxReturn = ( UBaseType_t ) pdTRUE;
 771              		.loc 1 488 26
 772 0040 0123     		movs	r3, #1
 773 0042 7B61     		str	r3, [r7, #20]
 774              	.L44:
 489:./Drivers/FreeRTOS/timers.c ****             }
 490:./Drivers/FreeRTOS/timers.c ****         }
 491:./Drivers/FreeRTOS/timers.c ****         taskEXIT_CRITICAL();
 775              		.loc 1 491 9
 776 0044 FFF7FEFF 		bl	vPortExitCritical
 492:./Drivers/FreeRTOS/timers.c **** 
 493:./Drivers/FreeRTOS/timers.c ****         return uxReturn;
 777              		.loc 1 493 16
 778 0048 7B69     		ldr	r3, [r7, #20]
 494:./Drivers/FreeRTOS/timers.c ****     }
 779              		.loc 1 494 5
 780 004a 1846     		mov	r0, r3
 781 004c 1837     		adds	r7, r7, #24
 782              	.LCFI40:
 783              		.cfi_def_cfa_offset 8
 784 004e BD46     		mov	sp, r7
 785              	.LCFI41:
 786              		.cfi_def_cfa_register 13
 787              		@ sp needed
 788 0050 80BD     		pop	{r7, pc}
 789              		.cfi_endproc
 790              	.LFE12:
 792              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 793              		.align	1
 794              		.global	xTimerGetExpiryTime
 795              		.syntax unified
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 27


 796              		.thumb
 797              		.thumb_func
 798              		.fpu fpv4-sp-d16
 800              	xTimerGetExpiryTime:
 801              	.LFB13:
 495:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 496:./Drivers/FreeRTOS/timers.c **** 
 497:./Drivers/FreeRTOS/timers.c ****     TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 498:./Drivers/FreeRTOS/timers.c ****     {
 802              		.loc 1 498 5
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 24
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806              		@ link register save eliminated.
 807 0000 80B4     		push	{r7}
 808              	.LCFI42:
 809              		.cfi_def_cfa_offset 4
 810              		.cfi_offset 7, -4
 811 0002 87B0     		sub	sp, sp, #28
 812              	.LCFI43:
 813              		.cfi_def_cfa_offset 32
 814 0004 00AF     		add	r7, sp, #0
 815              	.LCFI44:
 816              		.cfi_def_cfa_register 7
 817 0006 7860     		str	r0, [r7, #4]
 499:./Drivers/FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 818              		.loc 1 499 19
 819 0008 7B68     		ldr	r3, [r7, #4]
 820 000a 7B61     		str	r3, [r7, #20]
 500:./Drivers/FreeRTOS/timers.c ****         TickType_t xReturn;
 501:./Drivers/FreeRTOS/timers.c **** 
 502:./Drivers/FreeRTOS/timers.c ****         configASSERT( xTimer );
 821              		.loc 1 502 9
 822 000c 7B68     		ldr	r3, [r7, #4]
 823 000e 002B     		cmp	r3, #0
 824 0010 0AD1     		bne	.L47
 825              	.LBB42:
 826              	.LBB43:
 198:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 827              		.loc 2 198 9
 828              		.syntax unified
 829              	@ 198 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 830 0012 4FF05003 			mov r3, #80												
 831 0016 83F31188 		msr basepri, r3											
 832 001a BFF36F8F 		isb														
 833 001e BFF34F8F 		dsb														
 834              	
 835              	@ 0 "" 2
 836              		.thumb
 837              		.syntax unified
 838 0022 FB60     		str	r3, [r7, #12]
 839              		.loc 2 206 5
 840 0024 00BF     		nop
 841              	.L48:
 842              	.LBE43:
 843              	.LBE42:
 844              		.loc 1 502 9 discriminator 1
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 28


 845 0026 FEE7     		b	.L48
 846              	.L47:
 503:./Drivers/FreeRTOS/timers.c ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 847              		.loc 1 503 17
 848 0028 7B69     		ldr	r3, [r7, #20]
 849 002a 5B68     		ldr	r3, [r3, #4]
 850 002c 3B61     		str	r3, [r7, #16]
 504:./Drivers/FreeRTOS/timers.c ****         return xReturn;
 851              		.loc 1 504 16
 852 002e 3B69     		ldr	r3, [r7, #16]
 505:./Drivers/FreeRTOS/timers.c ****     }
 853              		.loc 1 505 5
 854 0030 1846     		mov	r0, r3
 855 0032 1C37     		adds	r7, r7, #28
 856              	.LCFI45:
 857              		.cfi_def_cfa_offset 4
 858 0034 BD46     		mov	sp, r7
 859              	.LCFI46:
 860              		.cfi_def_cfa_register 13
 861              		@ sp needed
 862 0036 5DF8047B 		ldr	r7, [sp], #4
 863              	.LCFI47:
 864              		.cfi_restore 7
 865              		.cfi_def_cfa_offset 0
 866 003a 7047     		bx	lr
 867              		.cfi_endproc
 868              	.LFE13:
 870              		.section	.text.pcTimerGetName,"ax",%progbits
 871              		.align	1
 872              		.global	pcTimerGetName
 873              		.syntax unified
 874              		.thumb
 875              		.thumb_func
 876              		.fpu fpv4-sp-d16
 878              	pcTimerGetName:
 879              	.LFB14:
 506:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 507:./Drivers/FreeRTOS/timers.c **** 
 508:./Drivers/FreeRTOS/timers.c ****     const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are all
 509:./Drivers/FreeRTOS/timers.c ****     {
 880              		.loc 1 509 5
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 16
 883              		@ frame_needed = 1, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 885 0000 80B4     		push	{r7}
 886              	.LCFI48:
 887              		.cfi_def_cfa_offset 4
 888              		.cfi_offset 7, -4
 889 0002 85B0     		sub	sp, sp, #20
 890              	.LCFI49:
 891              		.cfi_def_cfa_offset 24
 892 0004 00AF     		add	r7, sp, #0
 893              	.LCFI50:
 894              		.cfi_def_cfa_register 7
 895 0006 7860     		str	r0, [r7, #4]
 510:./Drivers/FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 29


 896              		.loc 1 510 19
 897 0008 7B68     		ldr	r3, [r7, #4]
 898 000a FB60     		str	r3, [r7, #12]
 511:./Drivers/FreeRTOS/timers.c **** 
 512:./Drivers/FreeRTOS/timers.c ****         configASSERT( xTimer );
 899              		.loc 1 512 9
 900 000c 7B68     		ldr	r3, [r7, #4]
 901 000e 002B     		cmp	r3, #0
 902 0010 0AD1     		bne	.L51
 903              	.LBB44:
 904              	.LBB45:
 198:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 905              		.loc 2 198 9
 906              		.syntax unified
 907              	@ 198 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 908 0012 4FF05003 			mov r3, #80												
 909 0016 83F31188 		msr basepri, r3											
 910 001a BFF36F8F 		isb														
 911 001e BFF34F8F 		dsb														
 912              	
 913              	@ 0 "" 2
 914              		.thumb
 915              		.syntax unified
 916 0022 BB60     		str	r3, [r7, #8]
 917              		.loc 2 206 5
 918 0024 00BF     		nop
 919              	.L52:
 920              	.LBE45:
 921              	.LBE44:
 922              		.loc 1 512 9 discriminator 1
 923 0026 FEE7     		b	.L52
 924              	.L51:
 513:./Drivers/FreeRTOS/timers.c ****         return pxTimer->pcTimerName;
 925              		.loc 1 513 23
 926 0028 FB68     		ldr	r3, [r7, #12]
 927 002a 1B68     		ldr	r3, [r3]
 514:./Drivers/FreeRTOS/timers.c ****     }
 928              		.loc 1 514 5
 929 002c 1846     		mov	r0, r3
 930 002e 1437     		adds	r7, r7, #20
 931              	.LCFI51:
 932              		.cfi_def_cfa_offset 4
 933 0030 BD46     		mov	sp, r7
 934              	.LCFI52:
 935              		.cfi_def_cfa_register 13
 936              		@ sp needed
 937 0032 5DF8047B 		ldr	r7, [sp], #4
 938              	.LCFI53:
 939              		.cfi_restore 7
 940              		.cfi_def_cfa_offset 0
 941 0036 7047     		bx	lr
 942              		.cfi_endproc
 943              	.LFE14:
 945              		.section	.text.prvReloadTimer,"ax",%progbits
 946              		.align	1
 947              		.syntax unified
 948              		.thumb
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 30


 949              		.thumb_func
 950              		.fpu fpv4-sp-d16
 952              	prvReloadTimer:
 953              	.LFB15:
 515:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 516:./Drivers/FreeRTOS/timers.c **** 
 517:./Drivers/FreeRTOS/timers.c ****     static void prvReloadTimer( Timer_t * const pxTimer,
 518:./Drivers/FreeRTOS/timers.c ****                                 TickType_t xExpiredTime,
 519:./Drivers/FreeRTOS/timers.c ****                                 const TickType_t xTimeNow )
 520:./Drivers/FreeRTOS/timers.c ****     {
 954              		.loc 1 520 5
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 16
 957              		@ frame_needed = 1, uses_anonymous_args = 0
 958 0000 80B5     		push	{r7, lr}
 959              	.LCFI54:
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 84B0     		sub	sp, sp, #16
 964              	.LCFI55:
 965              		.cfi_def_cfa_offset 24
 966 0004 00AF     		add	r7, sp, #0
 967              	.LCFI56:
 968              		.cfi_def_cfa_register 7
 969 0006 F860     		str	r0, [r7, #12]
 970 0008 B960     		str	r1, [r7, #8]
 971 000a 7A60     		str	r2, [r7, #4]
 521:./Drivers/FreeRTOS/timers.c ****         /* Insert the timer into the appropriate list for the next expiry time.
 522:./Drivers/FreeRTOS/timers.c ****          * If the next expiry time has already passed, advance the expiry time,
 523:./Drivers/FreeRTOS/timers.c ****          * call the callback function, and try again. */
 524:./Drivers/FreeRTOS/timers.c ****         while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks )
 972              		.loc 1 524 14
 973 000c 08E0     		b	.L55
 974              	.L56:
 525:./Drivers/FreeRTOS/timers.c ****         {
 526:./Drivers/FreeRTOS/timers.c ****             /* Advance the expiry time. */
 527:./Drivers/FreeRTOS/timers.c ****             xExpiredTime += pxTimer->xTimerPeriodInTicks;
 975              		.loc 1 527 36
 976 000e FB68     		ldr	r3, [r7, #12]
 977 0010 9B69     		ldr	r3, [r3, #24]
 978              		.loc 1 527 26
 979 0012 BA68     		ldr	r2, [r7, #8]
 980 0014 1344     		add	r3, r3, r2
 981 0016 BB60     		str	r3, [r7, #8]
 528:./Drivers/FreeRTOS/timers.c **** 
 529:./Drivers/FreeRTOS/timers.c ****             /* Call the timer callback. */
 530:./Drivers/FreeRTOS/timers.c ****             traceTIMER_EXPIRED( pxTimer );
 531:./Drivers/FreeRTOS/timers.c ****             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 982              		.loc 1 531 20
 983 0018 FB68     		ldr	r3, [r7, #12]
 984 001a 1B6A     		ldr	r3, [r3, #32]
 985              		.loc 1 531 13
 986 001c F868     		ldr	r0, [r7, #12]
 987 001e 9847     		blx	r3
 988              	.LVL0:
 989              	.L55:
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 31


 524:./Drivers/FreeRTOS/timers.c ****         {
 990              		.loc 1 524 77
 991 0020 FB68     		ldr	r3, [r7, #12]
 992 0022 9A69     		ldr	r2, [r3, #24]
 524:./Drivers/FreeRTOS/timers.c ****         {
 993              		.loc 1 524 16
 994 0024 BB68     		ldr	r3, [r7, #8]
 995 0026 D118     		adds	r1, r2, r3
 996 0028 BB68     		ldr	r3, [r7, #8]
 997 002a 7A68     		ldr	r2, [r7, #4]
 998 002c F868     		ldr	r0, [r7, #12]
 999 002e FFF7FEFF 		bl	prvInsertTimerInActiveList
 1000 0032 0346     		mov	r3, r0
 524:./Drivers/FreeRTOS/timers.c ****         {
 1001              		.loc 1 524 14
 1002 0034 002B     		cmp	r3, #0
 1003 0036 EAD1     		bne	.L56
 532:./Drivers/FreeRTOS/timers.c ****         }
 533:./Drivers/FreeRTOS/timers.c ****     }
 1004              		.loc 1 533 5
 1005 0038 00BF     		nop
 1006 003a 00BF     		nop
 1007 003c 1037     		adds	r7, r7, #16
 1008              	.LCFI57:
 1009              		.cfi_def_cfa_offset 8
 1010 003e BD46     		mov	sp, r7
 1011              	.LCFI58:
 1012              		.cfi_def_cfa_register 13
 1013              		@ sp needed
 1014 0040 80BD     		pop	{r7, pc}
 1015              		.cfi_endproc
 1016              	.LFE15:
 1018              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 1019              		.align	1
 1020              		.syntax unified
 1021              		.thumb
 1022              		.thumb_func
 1023              		.fpu fpv4-sp-d16
 1025              	prvProcessExpiredTimer:
 1026              	.LFB16:
 534:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 535:./Drivers/FreeRTOS/timers.c **** 
 536:./Drivers/FreeRTOS/timers.c ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 537:./Drivers/FreeRTOS/timers.c ****                                         const TickType_t xTimeNow )
 538:./Drivers/FreeRTOS/timers.c ****     {
 1027              		.loc 1 538 5
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 16
 1030              		@ frame_needed = 1, uses_anonymous_args = 0
 1031 0000 80B5     		push	{r7, lr}
 1032              	.LCFI59:
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 7, -8
 1035              		.cfi_offset 14, -4
 1036 0002 84B0     		sub	sp, sp, #16
 1037              	.LCFI60:
 1038              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 32


 1039 0004 00AF     		add	r7, sp, #0
 1040              	.LCFI61:
 1041              		.cfi_def_cfa_register 7
 1042 0006 7860     		str	r0, [r7, #4]
 1043 0008 3960     		str	r1, [r7]
 539:./Drivers/FreeRTOS/timers.c ****         Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); 
 1044              		.loc 1 539 49
 1045 000a 144B     		ldr	r3, .L60
 1046 000c 1B68     		ldr	r3, [r3]
 1047 000e DB68     		ldr	r3, [r3, #12]
 1048              		.loc 1 539 25
 1049 0010 DB68     		ldr	r3, [r3, #12]
 1050 0012 FB60     		str	r3, [r7, #12]
 540:./Drivers/FreeRTOS/timers.c **** 
 541:./Drivers/FreeRTOS/timers.c ****         /* Remove the timer from the list of active timers.  A check has already
 542:./Drivers/FreeRTOS/timers.c ****          * been performed to ensure the list is not empty. */
 543:./Drivers/FreeRTOS/timers.c **** 
 544:./Drivers/FreeRTOS/timers.c ****         ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 1051              		.loc 1 544 18
 1052 0014 FB68     		ldr	r3, [r7, #12]
 1053 0016 0433     		adds	r3, r3, #4
 1054 0018 1846     		mov	r0, r3
 1055 001a FFF7FEFF 		bl	uxListRemove
 545:./Drivers/FreeRTOS/timers.c **** 
 546:./Drivers/FreeRTOS/timers.c ****         /* If the timer is an auto-reload timer then calculate the next
 547:./Drivers/FreeRTOS/timers.c ****          * expiry time and re-insert the timer in the list of active timers. */
 548:./Drivers/FreeRTOS/timers.c ****         if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 1056              		.loc 1 548 22
 1057 001e FB68     		ldr	r3, [r7, #12]
 1058 0020 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1059              		.loc 1 548 33
 1060 0024 03F00403 		and	r3, r3, #4
 1061              		.loc 1 548 11
 1062 0028 002B     		cmp	r3, #0
 1063 002a 05D0     		beq	.L58
 549:./Drivers/FreeRTOS/timers.c ****         {
 550:./Drivers/FreeRTOS/timers.c ****             prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
 1064              		.loc 1 550 13
 1065 002c 3A68     		ldr	r2, [r7]
 1066 002e 7968     		ldr	r1, [r7, #4]
 1067 0030 F868     		ldr	r0, [r7, #12]
 1068 0032 FFF7FEFF 		bl	prvReloadTimer
 1069 0036 08E0     		b	.L59
 1070              	.L58:
 551:./Drivers/FreeRTOS/timers.c ****         }
 552:./Drivers/FreeRTOS/timers.c ****         else
 553:./Drivers/FreeRTOS/timers.c ****         {
 554:./Drivers/FreeRTOS/timers.c ****             pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 1071              		.loc 1 554 31
 1072 0038 FB68     		ldr	r3, [r7, #12]
 1073 003a 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1074 003e 23F00103 		bic	r3, r3, #1
 1075 0042 DAB2     		uxtb	r2, r3
 1076 0044 FB68     		ldr	r3, [r7, #12]
 1077 0046 83F82820 		strb	r2, [r3, #40]
 1078              	.L59:
 555:./Drivers/FreeRTOS/timers.c ****         }
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 33


 556:./Drivers/FreeRTOS/timers.c **** 
 557:./Drivers/FreeRTOS/timers.c ****         /* Call the timer callback. */
 558:./Drivers/FreeRTOS/timers.c ****         traceTIMER_EXPIRED( pxTimer );
 559:./Drivers/FreeRTOS/timers.c ****         pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1079              		.loc 1 559 16
 1080 004a FB68     		ldr	r3, [r7, #12]
 1081 004c 1B6A     		ldr	r3, [r3, #32]
 1082              		.loc 1 559 9
 1083 004e F868     		ldr	r0, [r7, #12]
 1084 0050 9847     		blx	r3
 1085              	.LVL1:
 560:./Drivers/FreeRTOS/timers.c ****     }
 1086              		.loc 1 560 5
 1087 0052 00BF     		nop
 1088 0054 1037     		adds	r7, r7, #16
 1089              	.LCFI62:
 1090              		.cfi_def_cfa_offset 8
 1091 0056 BD46     		mov	sp, r7
 1092              	.LCFI63:
 1093              		.cfi_def_cfa_register 13
 1094              		@ sp needed
 1095 0058 80BD     		pop	{r7, pc}
 1096              	.L61:
 1097 005a 00BF     		.align	2
 1098              	.L60:
 1099 005c 00000000 		.word	pxCurrentTimerList
 1100              		.cfi_endproc
 1101              	.LFE16:
 1103              		.section	.text.prvTimerTask,"ax",%progbits
 1104              		.align	1
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1108              		.fpu fpv4-sp-d16
 1110              	prvTimerTask:
 1111              	.LFB17:
 561:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 562:./Drivers/FreeRTOS/timers.c **** 
 563:./Drivers/FreeRTOS/timers.c ****     static portTASK_FUNCTION( prvTimerTask, pvParameters )
 564:./Drivers/FreeRTOS/timers.c ****     {
 1112              		.loc 1 564 5
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 16
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116 0000 80B5     		push	{r7, lr}
 1117              	.LCFI64:
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 7, -8
 1120              		.cfi_offset 14, -4
 1121 0002 84B0     		sub	sp, sp, #16
 1122              	.LCFI65:
 1123              		.cfi_def_cfa_offset 24
 1124 0004 00AF     		add	r7, sp, #0
 1125              	.LCFI66:
 1126              		.cfi_def_cfa_register 7
 1127 0006 7860     		str	r0, [r7, #4]
 1128              	.L63:
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 34


 565:./Drivers/FreeRTOS/timers.c ****         TickType_t xNextExpireTime;
 566:./Drivers/FreeRTOS/timers.c ****         BaseType_t xListWasEmpty;
 567:./Drivers/FreeRTOS/timers.c **** 
 568:./Drivers/FreeRTOS/timers.c ****         /* Just to avoid compiler warnings. */
 569:./Drivers/FreeRTOS/timers.c ****         ( void ) pvParameters;
 570:./Drivers/FreeRTOS/timers.c **** 
 571:./Drivers/FreeRTOS/timers.c ****         #if ( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 572:./Drivers/FreeRTOS/timers.c ****             {
 573:./Drivers/FreeRTOS/timers.c ****                 extern void vApplicationDaemonTaskStartupHook( void );
 574:./Drivers/FreeRTOS/timers.c **** 
 575:./Drivers/FreeRTOS/timers.c ****                 /* Allow the application writer to execute some code in the context of
 576:./Drivers/FreeRTOS/timers.c ****                  * this task at the point the task starts executing.  This is useful if the
 577:./Drivers/FreeRTOS/timers.c ****                  * application includes initialisation code that would benefit from
 578:./Drivers/FreeRTOS/timers.c ****                  * executing after the scheduler has been started. */
 579:./Drivers/FreeRTOS/timers.c ****                 vApplicationDaemonTaskStartupHook();
 580:./Drivers/FreeRTOS/timers.c ****             }
 581:./Drivers/FreeRTOS/timers.c ****         #endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 582:./Drivers/FreeRTOS/timers.c **** 
 583:./Drivers/FreeRTOS/timers.c ****         for( ; ; )
 584:./Drivers/FreeRTOS/timers.c ****         {
 585:./Drivers/FreeRTOS/timers.c ****             /* Query the timers list to see if it contains any timers, and if so,
 586:./Drivers/FreeRTOS/timers.c ****              * obtain the time at which the next timer will expire. */
 587:./Drivers/FreeRTOS/timers.c ****             xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 1129              		.loc 1 587 31 discriminator 1
 1130 0008 07F10803 		add	r3, r7, #8
 1131 000c 1846     		mov	r0, r3
 1132 000e FFF7FEFF 		bl	prvGetNextExpireTime
 1133 0012 F860     		str	r0, [r7, #12]
 588:./Drivers/FreeRTOS/timers.c **** 
 589:./Drivers/FreeRTOS/timers.c ****             /* If a timer has expired, process it.  Otherwise, block this task
 590:./Drivers/FreeRTOS/timers.c ****              * until either a timer does expire, or a command is received. */
 591:./Drivers/FreeRTOS/timers.c ****             prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 1134              		.loc 1 591 13 discriminator 1
 1135 0014 BB68     		ldr	r3, [r7, #8]
 1136 0016 1946     		mov	r1, r3
 1137 0018 F868     		ldr	r0, [r7, #12]
 1138 001a FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 592:./Drivers/FreeRTOS/timers.c **** 
 593:./Drivers/FreeRTOS/timers.c ****             /* Empty the command queue. */
 594:./Drivers/FreeRTOS/timers.c ****             prvProcessReceivedCommands();
 1139              		.loc 1 594 13 discriminator 1
 1140 001e FFF7FEFF 		bl	prvProcessReceivedCommands
 587:./Drivers/FreeRTOS/timers.c **** 
 1141              		.loc 1 587 29 discriminator 1
 1142 0022 F1E7     		b	.L63
 1143              		.cfi_endproc
 1144              	.LFE17:
 1146              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 1147              		.align	1
 1148              		.syntax unified
 1149              		.thumb
 1150              		.thumb_func
 1151              		.fpu fpv4-sp-d16
 1153              	prvProcessTimerOrBlockTask:
 1154              	.LFB18:
 595:./Drivers/FreeRTOS/timers.c ****         }
 596:./Drivers/FreeRTOS/timers.c ****     }
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 35


 597:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 598:./Drivers/FreeRTOS/timers.c **** 
 599:./Drivers/FreeRTOS/timers.c ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 600:./Drivers/FreeRTOS/timers.c ****                                             BaseType_t xListWasEmpty )
 601:./Drivers/FreeRTOS/timers.c ****     {
 1155              		.loc 1 601 5
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 16
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159 0000 80B5     		push	{r7, lr}
 1160              	.LCFI67:
 1161              		.cfi_def_cfa_offset 8
 1162              		.cfi_offset 7, -8
 1163              		.cfi_offset 14, -4
 1164 0002 84B0     		sub	sp, sp, #16
 1165              	.LCFI68:
 1166              		.cfi_def_cfa_offset 24
 1167 0004 00AF     		add	r7, sp, #0
 1168              	.LCFI69:
 1169              		.cfi_def_cfa_register 7
 1170 0006 7860     		str	r0, [r7, #4]
 1171 0008 3960     		str	r1, [r7]
 602:./Drivers/FreeRTOS/timers.c ****         TickType_t xTimeNow;
 603:./Drivers/FreeRTOS/timers.c ****         BaseType_t xTimerListsWereSwitched;
 604:./Drivers/FreeRTOS/timers.c **** 
 605:./Drivers/FreeRTOS/timers.c ****         vTaskSuspendAll();
 1172              		.loc 1 605 9
 1173 000a FFF7FEFF 		bl	vTaskSuspendAll
 606:./Drivers/FreeRTOS/timers.c ****         {
 607:./Drivers/FreeRTOS/timers.c ****             /* Obtain the time now to make an assessment as to whether the timer
 608:./Drivers/FreeRTOS/timers.c ****              * has expired or not.  If obtaining the time causes the lists to switch
 609:./Drivers/FreeRTOS/timers.c ****              * then don't process this timer as any timers that remained in the list
 610:./Drivers/FreeRTOS/timers.c ****              * when the lists were switched will have been processed within the
 611:./Drivers/FreeRTOS/timers.c ****              * prvSampleTimeNow() function. */
 612:./Drivers/FreeRTOS/timers.c ****             xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 1174              		.loc 1 612 24
 1175 000e 07F10803 		add	r3, r7, #8
 1176 0012 1846     		mov	r0, r3
 1177 0014 FFF7FEFF 		bl	prvSampleTimeNow
 1178 0018 F860     		str	r0, [r7, #12]
 613:./Drivers/FreeRTOS/timers.c **** 
 614:./Drivers/FreeRTOS/timers.c ****             if( xTimerListsWereSwitched == pdFALSE )
 1179              		.loc 1 614 41
 1180 001a BB68     		ldr	r3, [r7, #8]
 1181              		.loc 1 614 15
 1182 001c 002B     		cmp	r3, #0
 1183 001e 30D1     		bne	.L65
 615:./Drivers/FreeRTOS/timers.c ****             {
 616:./Drivers/FreeRTOS/timers.c ****                 /* The tick count has not overflowed, has the timer expired? */
 617:./Drivers/FreeRTOS/timers.c ****                 if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 1184              		.loc 1 617 19
 1185 0020 3B68     		ldr	r3, [r7]
 1186 0022 002B     		cmp	r3, #0
 1187 0024 0AD1     		bne	.L66
 1188              		.loc 1 617 50 discriminator 1
 1189 0026 7A68     		ldr	r2, [r7, #4]
 1190 0028 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 36


 1191 002a 9A42     		cmp	r2, r3
 1192 002c 06D8     		bhi	.L66
 618:./Drivers/FreeRTOS/timers.c ****                 {
 619:./Drivers/FreeRTOS/timers.c ****                     ( void ) xTaskResumeAll();
 1193              		.loc 1 619 30
 1194 002e FFF7FEFF 		bl	xTaskResumeAll
 620:./Drivers/FreeRTOS/timers.c ****                     prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1195              		.loc 1 620 21
 1196 0032 F968     		ldr	r1, [r7, #12]
 1197 0034 7868     		ldr	r0, [r7, #4]
 1198 0036 FFF7FEFF 		bl	prvProcessExpiredTimer
 621:./Drivers/FreeRTOS/timers.c ****                 }
 622:./Drivers/FreeRTOS/timers.c ****                 else
 623:./Drivers/FreeRTOS/timers.c ****                 {
 624:./Drivers/FreeRTOS/timers.c ****                     /* The tick count has not overflowed, and the next expire
 625:./Drivers/FreeRTOS/timers.c ****                      * time has not been reached yet.  This task should therefore
 626:./Drivers/FreeRTOS/timers.c ****                      * block to wait for the next expire time or a command to be
 627:./Drivers/FreeRTOS/timers.c ****                      * received - whichever comes first.  The following line cannot
 628:./Drivers/FreeRTOS/timers.c ****                      * be reached unless xNextExpireTime > xTimeNow, except in the
 629:./Drivers/FreeRTOS/timers.c ****                      * case when the current timer list is empty. */
 630:./Drivers/FreeRTOS/timers.c ****                     if( xListWasEmpty != pdFALSE )
 631:./Drivers/FreeRTOS/timers.c ****                     {
 632:./Drivers/FreeRTOS/timers.c ****                         /* The current timer list is empty - is the overflow list
 633:./Drivers/FreeRTOS/timers.c ****                          * also empty? */
 634:./Drivers/FreeRTOS/timers.c ****                         xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 635:./Drivers/FreeRTOS/timers.c ****                     }
 636:./Drivers/FreeRTOS/timers.c **** 
 637:./Drivers/FreeRTOS/timers.c ****                     vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xL
 638:./Drivers/FreeRTOS/timers.c **** 
 639:./Drivers/FreeRTOS/timers.c ****                     if( xTaskResumeAll() == pdFALSE )
 640:./Drivers/FreeRTOS/timers.c ****                     {
 641:./Drivers/FreeRTOS/timers.c ****                         /* Yield to wait for either a command to arrive, or the
 642:./Drivers/FreeRTOS/timers.c ****                          * block time to expire.  If a command arrived between the
 643:./Drivers/FreeRTOS/timers.c ****                          * critical section being exited and this yield then the yield
 644:./Drivers/FreeRTOS/timers.c ****                          * will not cause the task to block. */
 645:./Drivers/FreeRTOS/timers.c ****                         portYIELD_WITHIN_API();
 646:./Drivers/FreeRTOS/timers.c ****                     }
 647:./Drivers/FreeRTOS/timers.c ****                     else
 648:./Drivers/FreeRTOS/timers.c ****                     {
 649:./Drivers/FreeRTOS/timers.c ****                         mtCOVERAGE_TEST_MARKER();
 650:./Drivers/FreeRTOS/timers.c ****                     }
 651:./Drivers/FreeRTOS/timers.c ****                 }
 652:./Drivers/FreeRTOS/timers.c ****             }
 653:./Drivers/FreeRTOS/timers.c ****             else
 654:./Drivers/FreeRTOS/timers.c ****             {
 655:./Drivers/FreeRTOS/timers.c ****                 ( void ) xTaskResumeAll();
 656:./Drivers/FreeRTOS/timers.c ****             }
 657:./Drivers/FreeRTOS/timers.c ****         }
 658:./Drivers/FreeRTOS/timers.c ****     }
 1199              		.loc 1 658 5
 1200 003a 24E0     		b	.L72
 1201              	.L66:
 630:./Drivers/FreeRTOS/timers.c ****                     {
 1202              		.loc 1 630 23
 1203 003c 3B68     		ldr	r3, [r7]
 1204 003e 002B     		cmp	r3, #0
 1205 0040 08D0     		beq	.L68
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 37


 634:./Drivers/FreeRTOS/timers.c ****                     }
 1206              		.loc 1 634 41
 1207 0042 134B     		ldr	r3, .L73
 1208 0044 1B68     		ldr	r3, [r3]
 1209 0046 1B68     		ldr	r3, [r3]
 1210 0048 002B     		cmp	r3, #0
 1211 004a 01D1     		bne	.L69
 634:./Drivers/FreeRTOS/timers.c ****                     }
 1212              		.loc 1 634 41 is_stmt 0 discriminator 1
 1213 004c 0123     		movs	r3, #1
 1214 004e 00E0     		b	.L70
 1215              	.L69:
 634:./Drivers/FreeRTOS/timers.c ****                     }
 1216              		.loc 1 634 41 discriminator 2
 1217 0050 0023     		movs	r3, #0
 1218              	.L70:
 634:./Drivers/FreeRTOS/timers.c ****                     }
 1219              		.loc 1 634 39 is_stmt 1 discriminator 4
 1220 0052 3B60     		str	r3, [r7]
 1221              	.L68:
 637:./Drivers/FreeRTOS/timers.c **** 
 1222              		.loc 1 637 21
 1223 0054 0F4B     		ldr	r3, .L73+4
 1224 0056 1868     		ldr	r0, [r3]
 1225 0058 7A68     		ldr	r2, [r7, #4]
 1226 005a FB68     		ldr	r3, [r7, #12]
 1227 005c D31A     		subs	r3, r2, r3
 1228 005e 3A68     		ldr	r2, [r7]
 1229 0060 1946     		mov	r1, r3
 1230 0062 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 639:./Drivers/FreeRTOS/timers.c ****                     {
 1231              		.loc 1 639 25
 1232 0066 FFF7FEFF 		bl	xTaskResumeAll
 1233 006a 0346     		mov	r3, r0
 639:./Drivers/FreeRTOS/timers.c ****                     {
 1234              		.loc 1 639 23
 1235 006c 002B     		cmp	r3, #0
 1236 006e 0AD1     		bne	.L72
 645:./Drivers/FreeRTOS/timers.c ****                     }
 1237              		.loc 1 645 25
 1238 0070 094B     		ldr	r3, .L73+8
 1239 0072 4FF08052 		mov	r2, #268435456
 1240 0076 1A60     		str	r2, [r3]
 1241              		.syntax unified
 1242              	@ 645 "./Drivers/FreeRTOS/timers.c" 1
 1243 0078 BFF34F8F 		dsb
 1244              	@ 0 "" 2
 1245              	@ 645 "./Drivers/FreeRTOS/timers.c" 1
 1246 007c BFF36F8F 		isb
 1247              	@ 0 "" 2
 1248              		.loc 1 658 5
 1249              		.thumb
 1250              		.syntax unified
 1251 0080 01E0     		b	.L72
 1252              	.L65:
 655:./Drivers/FreeRTOS/timers.c ****             }
 1253              		.loc 1 655 26
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 38


 1254 0082 FFF7FEFF 		bl	xTaskResumeAll
 1255              	.L72:
 1256              		.loc 1 658 5
 1257 0086 00BF     		nop
 1258 0088 1037     		adds	r7, r7, #16
 1259              	.LCFI70:
 1260              		.cfi_def_cfa_offset 8
 1261 008a BD46     		mov	sp, r7
 1262              	.LCFI71:
 1263              		.cfi_def_cfa_register 13
 1264              		@ sp needed
 1265 008c 80BD     		pop	{r7, pc}
 1266              	.L74:
 1267 008e 00BF     		.align	2
 1268              	.L73:
 1269 0090 00000000 		.word	pxOverflowTimerList
 1270 0094 00000000 		.word	xTimerQueue
 1271 0098 04ED00E0 		.word	-536810236
 1272              		.cfi_endproc
 1273              	.LFE18:
 1275              		.section	.text.prvGetNextExpireTime,"ax",%progbits
 1276              		.align	1
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1280              		.fpu fpv4-sp-d16
 1282              	prvGetNextExpireTime:
 1283              	.LFB19:
 659:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 660:./Drivers/FreeRTOS/timers.c **** 
 661:./Drivers/FreeRTOS/timers.c ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 662:./Drivers/FreeRTOS/timers.c ****     {
 1284              		.loc 1 662 5
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 16
 1287              		@ frame_needed = 1, uses_anonymous_args = 0
 1288              		@ link register save eliminated.
 1289 0000 80B4     		push	{r7}
 1290              	.LCFI72:
 1291              		.cfi_def_cfa_offset 4
 1292              		.cfi_offset 7, -4
 1293 0002 85B0     		sub	sp, sp, #20
 1294              	.LCFI73:
 1295              		.cfi_def_cfa_offset 24
 1296 0004 00AF     		add	r7, sp, #0
 1297              	.LCFI74:
 1298              		.cfi_def_cfa_register 7
 1299 0006 7860     		str	r0, [r7, #4]
 663:./Drivers/FreeRTOS/timers.c ****         TickType_t xNextExpireTime;
 664:./Drivers/FreeRTOS/timers.c **** 
 665:./Drivers/FreeRTOS/timers.c ****         /* Timers are listed in expiry time order, with the head of the list
 666:./Drivers/FreeRTOS/timers.c ****          * referencing the task that will expire first.  Obtain the time at which
 667:./Drivers/FreeRTOS/timers.c ****          * the timer with the nearest expiry time will expire.  If there are no
 668:./Drivers/FreeRTOS/timers.c ****          * active timers then just set the next expire time to 0.  That will cause
 669:./Drivers/FreeRTOS/timers.c ****          * this task to unblock when the tick count overflows, at which point the
 670:./Drivers/FreeRTOS/timers.c ****          * timer lists will be switched and the next expiry time can be
 671:./Drivers/FreeRTOS/timers.c ****          * re-assessed.  */
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 39


 672:./Drivers/FreeRTOS/timers.c ****         *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 1300              		.loc 1 672 27
 1301 0008 0E4B     		ldr	r3, .L81
 1302 000a 1B68     		ldr	r3, [r3]
 1303 000c 1B68     		ldr	r3, [r3]
 1304 000e 002B     		cmp	r3, #0
 1305 0010 01D1     		bne	.L76
 1306              		.loc 1 672 27 is_stmt 0 discriminator 1
 1307 0012 0122     		movs	r2, #1
 1308 0014 00E0     		b	.L77
 1309              	.L76:
 1310              		.loc 1 672 27 discriminator 2
 1311 0016 0022     		movs	r2, #0
 1312              	.L77:
 1313              		.loc 1 672 25 is_stmt 1 discriminator 4
 1314 0018 7B68     		ldr	r3, [r7, #4]
 1315 001a 1A60     		str	r2, [r3]
 673:./Drivers/FreeRTOS/timers.c **** 
 674:./Drivers/FreeRTOS/timers.c ****         if( *pxListWasEmpty == pdFALSE )
 1316              		.loc 1 674 13 discriminator 4
 1317 001c 7B68     		ldr	r3, [r7, #4]
 1318 001e 1B68     		ldr	r3, [r3]
 1319              		.loc 1 674 11 discriminator 4
 1320 0020 002B     		cmp	r3, #0
 1321 0022 05D1     		bne	.L78
 675:./Drivers/FreeRTOS/timers.c ****         {
 676:./Drivers/FreeRTOS/timers.c ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 1322              		.loc 1 676 31
 1323 0024 074B     		ldr	r3, .L81
 1324 0026 1B68     		ldr	r3, [r3]
 1325 0028 DB68     		ldr	r3, [r3, #12]
 1326              		.loc 1 676 29
 1327 002a 1B68     		ldr	r3, [r3]
 1328 002c FB60     		str	r3, [r7, #12]
 1329 002e 01E0     		b	.L79
 1330              	.L78:
 677:./Drivers/FreeRTOS/timers.c ****         }
 678:./Drivers/FreeRTOS/timers.c ****         else
 679:./Drivers/FreeRTOS/timers.c ****         {
 680:./Drivers/FreeRTOS/timers.c ****             /* Ensure the task unblocks when the tick count rolls over. */
 681:./Drivers/FreeRTOS/timers.c ****             xNextExpireTime = ( TickType_t ) 0U;
 1331              		.loc 1 681 29
 1332 0030 0023     		movs	r3, #0
 1333 0032 FB60     		str	r3, [r7, #12]
 1334              	.L79:
 682:./Drivers/FreeRTOS/timers.c ****         }
 683:./Drivers/FreeRTOS/timers.c **** 
 684:./Drivers/FreeRTOS/timers.c ****         return xNextExpireTime;
 1335              		.loc 1 684 16
 1336 0034 FB68     		ldr	r3, [r7, #12]
 685:./Drivers/FreeRTOS/timers.c ****     }
 1337              		.loc 1 685 5
 1338 0036 1846     		mov	r0, r3
 1339 0038 1437     		adds	r7, r7, #20
 1340              	.LCFI75:
 1341              		.cfi_def_cfa_offset 4
 1342 003a BD46     		mov	sp, r7
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 40


 1343              	.LCFI76:
 1344              		.cfi_def_cfa_register 13
 1345              		@ sp needed
 1346 003c 5DF8047B 		ldr	r7, [sp], #4
 1347              	.LCFI77:
 1348              		.cfi_restore 7
 1349              		.cfi_def_cfa_offset 0
 1350 0040 7047     		bx	lr
 1351              	.L82:
 1352 0042 00BF     		.align	2
 1353              	.L81:
 1354 0044 00000000 		.word	pxCurrentTimerList
 1355              		.cfi_endproc
 1356              	.LFE19:
 1358              		.section	.text.prvSampleTimeNow,"ax",%progbits
 1359              		.align	1
 1360              		.syntax unified
 1361              		.thumb
 1362              		.thumb_func
 1363              		.fpu fpv4-sp-d16
 1365              	prvSampleTimeNow:
 1366              	.LFB20:
 686:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 687:./Drivers/FreeRTOS/timers.c **** 
 688:./Drivers/FreeRTOS/timers.c ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 689:./Drivers/FreeRTOS/timers.c ****     {
 1367              		.loc 1 689 5
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 16
 1370              		@ frame_needed = 1, uses_anonymous_args = 0
 1371 0000 80B5     		push	{r7, lr}
 1372              	.LCFI78:
 1373              		.cfi_def_cfa_offset 8
 1374              		.cfi_offset 7, -8
 1375              		.cfi_offset 14, -4
 1376 0002 84B0     		sub	sp, sp, #16
 1377              	.LCFI79:
 1378              		.cfi_def_cfa_offset 24
 1379 0004 00AF     		add	r7, sp, #0
 1380              	.LCFI80:
 1381              		.cfi_def_cfa_register 7
 1382 0006 7860     		str	r0, [r7, #4]
 690:./Drivers/FreeRTOS/timers.c ****         TickType_t xTimeNow;
 691:./Drivers/FreeRTOS/timers.c ****         PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is o
 692:./Drivers/FreeRTOS/timers.c **** 
 693:./Drivers/FreeRTOS/timers.c ****         xTimeNow = xTaskGetTickCount();
 1383              		.loc 1 693 20
 1384 0008 FFF7FEFF 		bl	xTaskGetTickCount
 1385 000c F860     		str	r0, [r7, #12]
 694:./Drivers/FreeRTOS/timers.c **** 
 695:./Drivers/FreeRTOS/timers.c ****         if( xTimeNow < xLastTime )
 1386              		.loc 1 695 22
 1387 000e 0B4B     		ldr	r3, .L87
 1388 0010 1B68     		ldr	r3, [r3]
 1389              		.loc 1 695 11
 1390 0012 FA68     		ldr	r2, [r7, #12]
 1391 0014 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 41


 1392 0016 05D2     		bcs	.L84
 696:./Drivers/FreeRTOS/timers.c ****         {
 697:./Drivers/FreeRTOS/timers.c ****             prvSwitchTimerLists();
 1393              		.loc 1 697 13
 1394 0018 FFF7FEFF 		bl	prvSwitchTimerLists
 698:./Drivers/FreeRTOS/timers.c ****             *pxTimerListsWereSwitched = pdTRUE;
 1395              		.loc 1 698 39
 1396 001c 7B68     		ldr	r3, [r7, #4]
 1397 001e 0122     		movs	r2, #1
 1398 0020 1A60     		str	r2, [r3]
 1399 0022 02E0     		b	.L85
 1400              	.L84:
 699:./Drivers/FreeRTOS/timers.c ****         }
 700:./Drivers/FreeRTOS/timers.c ****         else
 701:./Drivers/FreeRTOS/timers.c ****         {
 702:./Drivers/FreeRTOS/timers.c ****             *pxTimerListsWereSwitched = pdFALSE;
 1401              		.loc 1 702 39
 1402 0024 7B68     		ldr	r3, [r7, #4]
 1403 0026 0022     		movs	r2, #0
 1404 0028 1A60     		str	r2, [r3]
 1405              	.L85:
 703:./Drivers/FreeRTOS/timers.c ****         }
 704:./Drivers/FreeRTOS/timers.c **** 
 705:./Drivers/FreeRTOS/timers.c ****         xLastTime = xTimeNow;
 1406              		.loc 1 705 19
 1407 002a 044A     		ldr	r2, .L87
 1408 002c FB68     		ldr	r3, [r7, #12]
 1409 002e 1360     		str	r3, [r2]
 706:./Drivers/FreeRTOS/timers.c **** 
 707:./Drivers/FreeRTOS/timers.c ****         return xTimeNow;
 1410              		.loc 1 707 16
 1411 0030 FB68     		ldr	r3, [r7, #12]
 708:./Drivers/FreeRTOS/timers.c ****     }
 1412              		.loc 1 708 5
 1413 0032 1846     		mov	r0, r3
 1414 0034 1037     		adds	r7, r7, #16
 1415              	.LCFI81:
 1416              		.cfi_def_cfa_offset 8
 1417 0036 BD46     		mov	sp, r7
 1418              	.LCFI82:
 1419              		.cfi_def_cfa_register 13
 1420              		@ sp needed
 1421 0038 80BD     		pop	{r7, pc}
 1422              	.L88:
 1423 003a 00BF     		.align	2
 1424              	.L87:
 1425 003c 00000000 		.word	xLastTime.0
 1426              		.cfi_endproc
 1427              	.LFE20:
 1429              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
 1430              		.align	1
 1431              		.syntax unified
 1432              		.thumb
 1433              		.thumb_func
 1434              		.fpu fpv4-sp-d16
 1436              	prvInsertTimerInActiveList:
 1437              	.LFB21:
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 42


 709:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 710:./Drivers/FreeRTOS/timers.c **** 
 711:./Drivers/FreeRTOS/timers.c ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 712:./Drivers/FreeRTOS/timers.c ****                                                   const TickType_t xNextExpiryTime,
 713:./Drivers/FreeRTOS/timers.c ****                                                   const TickType_t xTimeNow,
 714:./Drivers/FreeRTOS/timers.c ****                                                   const TickType_t xCommandTime )
 715:./Drivers/FreeRTOS/timers.c ****     {
 1438              		.loc 1 715 5
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 24
 1441              		@ frame_needed = 1, uses_anonymous_args = 0
 1442 0000 80B5     		push	{r7, lr}
 1443              	.LCFI83:
 1444              		.cfi_def_cfa_offset 8
 1445              		.cfi_offset 7, -8
 1446              		.cfi_offset 14, -4
 1447 0002 86B0     		sub	sp, sp, #24
 1448              	.LCFI84:
 1449              		.cfi_def_cfa_offset 32
 1450 0004 00AF     		add	r7, sp, #0
 1451              	.LCFI85:
 1452              		.cfi_def_cfa_register 7
 1453 0006 F860     		str	r0, [r7, #12]
 1454 0008 B960     		str	r1, [r7, #8]
 1455 000a 7A60     		str	r2, [r7, #4]
 1456 000c 3B60     		str	r3, [r7]
 716:./Drivers/FreeRTOS/timers.c ****         BaseType_t xProcessTimerNow = pdFALSE;
 1457              		.loc 1 716 20
 1458 000e 0023     		movs	r3, #0
 1459 0010 7B61     		str	r3, [r7, #20]
 717:./Drivers/FreeRTOS/timers.c **** 
 718:./Drivers/FreeRTOS/timers.c ****         listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 1460              		.loc 1 718 9
 1461 0012 FB68     		ldr	r3, [r7, #12]
 1462 0014 BA68     		ldr	r2, [r7, #8]
 1463 0016 5A60     		str	r2, [r3, #4]
 719:./Drivers/FreeRTOS/timers.c ****         listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 1464              		.loc 1 719 9
 1465 0018 FB68     		ldr	r3, [r7, #12]
 1466 001a FA68     		ldr	r2, [r7, #12]
 1467 001c 1A61     		str	r2, [r3, #16]
 720:./Drivers/FreeRTOS/timers.c **** 
 721:./Drivers/FreeRTOS/timers.c ****         if( xNextExpiryTime <= xTimeNow )
 1468              		.loc 1 721 11
 1469 001e BA68     		ldr	r2, [r7, #8]
 1470 0020 7B68     		ldr	r3, [r7, #4]
 1471 0022 9A42     		cmp	r2, r3
 1472 0024 12D8     		bhi	.L90
 722:./Drivers/FreeRTOS/timers.c ****         {
 723:./Drivers/FreeRTOS/timers.c ****             /* Has the expiry time elapsed between the command to start/reset a
 724:./Drivers/FreeRTOS/timers.c ****              * timer was issued, and the time the command was processed? */
 725:./Drivers/FreeRTOS/timers.c ****             if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*
 1473              		.loc 1 725 19
 1474 0026 7A68     		ldr	r2, [r7, #4]
 1475 0028 3B68     		ldr	r3, [r7]
 1476 002a D21A     		subs	r2, r2, r3
 1477              		.loc 1 725 74
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 43


 1478 002c FB68     		ldr	r3, [r7, #12]
 1479 002e 9B69     		ldr	r3, [r3, #24]
 1480              		.loc 1 725 15
 1481 0030 9A42     		cmp	r2, r3
 1482 0032 02D3     		bcc	.L91
 726:./Drivers/FreeRTOS/timers.c ****             {
 727:./Drivers/FreeRTOS/timers.c ****                 /* The time between a command being issued and the command being
 728:./Drivers/FreeRTOS/timers.c ****                  * processed actually exceeds the timers period.  */
 729:./Drivers/FreeRTOS/timers.c ****                 xProcessTimerNow = pdTRUE;
 1483              		.loc 1 729 34
 1484 0034 0123     		movs	r3, #1
 1485 0036 7B61     		str	r3, [r7, #20]
 1486 0038 1BE0     		b	.L92
 1487              	.L91:
 730:./Drivers/FreeRTOS/timers.c ****             }
 731:./Drivers/FreeRTOS/timers.c ****             else
 732:./Drivers/FreeRTOS/timers.c ****             {
 733:./Drivers/FreeRTOS/timers.c ****                 vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 1488              		.loc 1 733 17
 1489 003a 104B     		ldr	r3, .L95
 1490 003c 1A68     		ldr	r2, [r3]
 1491 003e FB68     		ldr	r3, [r7, #12]
 1492 0040 0433     		adds	r3, r3, #4
 1493 0042 1946     		mov	r1, r3
 1494 0044 1046     		mov	r0, r2
 1495 0046 FFF7FEFF 		bl	vListInsert
 1496 004a 12E0     		b	.L92
 1497              	.L90:
 734:./Drivers/FreeRTOS/timers.c ****             }
 735:./Drivers/FreeRTOS/timers.c ****         }
 736:./Drivers/FreeRTOS/timers.c ****         else
 737:./Drivers/FreeRTOS/timers.c ****         {
 738:./Drivers/FreeRTOS/timers.c ****             if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 1498              		.loc 1 738 15
 1499 004c 7A68     		ldr	r2, [r7, #4]
 1500 004e 3B68     		ldr	r3, [r7]
 1501 0050 9A42     		cmp	r2, r3
 1502 0052 06D2     		bcs	.L93
 1503              		.loc 1 738 45 discriminator 1
 1504 0054 BA68     		ldr	r2, [r7, #8]
 1505 0056 3B68     		ldr	r3, [r7]
 1506 0058 9A42     		cmp	r2, r3
 1507 005a 02D3     		bcc	.L93
 739:./Drivers/FreeRTOS/timers.c ****             {
 740:./Drivers/FreeRTOS/timers.c ****                 /* If, since the command was issued, the tick count has overflowed
 741:./Drivers/FreeRTOS/timers.c ****                  * but the expiry time has not, then the timer must have already passed
 742:./Drivers/FreeRTOS/timers.c ****                  * its expiry time and should be processed immediately. */
 743:./Drivers/FreeRTOS/timers.c ****                 xProcessTimerNow = pdTRUE;
 1508              		.loc 1 743 34
 1509 005c 0123     		movs	r3, #1
 1510 005e 7B61     		str	r3, [r7, #20]
 1511 0060 07E0     		b	.L92
 1512              	.L93:
 744:./Drivers/FreeRTOS/timers.c ****             }
 745:./Drivers/FreeRTOS/timers.c ****             else
 746:./Drivers/FreeRTOS/timers.c ****             {
 747:./Drivers/FreeRTOS/timers.c ****                 vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 44


 1513              		.loc 1 747 17
 1514 0062 074B     		ldr	r3, .L95+4
 1515 0064 1A68     		ldr	r2, [r3]
 1516 0066 FB68     		ldr	r3, [r7, #12]
 1517 0068 0433     		adds	r3, r3, #4
 1518 006a 1946     		mov	r1, r3
 1519 006c 1046     		mov	r0, r2
 1520 006e FFF7FEFF 		bl	vListInsert
 1521              	.L92:
 748:./Drivers/FreeRTOS/timers.c ****             }
 749:./Drivers/FreeRTOS/timers.c ****         }
 750:./Drivers/FreeRTOS/timers.c **** 
 751:./Drivers/FreeRTOS/timers.c ****         return xProcessTimerNow;
 1522              		.loc 1 751 16
 1523 0072 7B69     		ldr	r3, [r7, #20]
 752:./Drivers/FreeRTOS/timers.c ****     }
 1524              		.loc 1 752 5
 1525 0074 1846     		mov	r0, r3
 1526 0076 1837     		adds	r7, r7, #24
 1527              	.LCFI86:
 1528              		.cfi_def_cfa_offset 8
 1529 0078 BD46     		mov	sp, r7
 1530              	.LCFI87:
 1531              		.cfi_def_cfa_register 13
 1532              		@ sp needed
 1533 007a 80BD     		pop	{r7, pc}
 1534              	.L96:
 1535              		.align	2
 1536              	.L95:
 1537 007c 00000000 		.word	pxOverflowTimerList
 1538 0080 00000000 		.word	pxCurrentTimerList
 1539              		.cfi_endproc
 1540              	.LFE21:
 1542              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1543              		.align	1
 1544              		.syntax unified
 1545              		.thumb
 1546              		.thumb_func
 1547              		.fpu fpv4-sp-d16
 1549              	prvProcessReceivedCommands:
 1550              	.LFB22:
 753:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 754:./Drivers/FreeRTOS/timers.c **** 
 755:./Drivers/FreeRTOS/timers.c ****     static void prvProcessReceivedCommands( void )
 756:./Drivers/FreeRTOS/timers.c ****     {
 1551              		.loc 1 756 5
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 32
 1554              		@ frame_needed = 1, uses_anonymous_args = 0
 1555 0000 80B5     		push	{r7, lr}
 1556              	.LCFI88:
 1557              		.cfi_def_cfa_offset 8
 1558              		.cfi_offset 7, -8
 1559              		.cfi_offset 14, -4
 1560 0002 88B0     		sub	sp, sp, #32
 1561              	.LCFI89:
 1562              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 45


 1563 0004 00AF     		add	r7, sp, #0
 1564              	.LCFI90:
 1565              		.cfi_def_cfa_register 7
 757:./Drivers/FreeRTOS/timers.c ****         DaemonTaskMessage_t xMessage;
 758:./Drivers/FreeRTOS/timers.c ****         Timer_t * pxTimer;
 759:./Drivers/FreeRTOS/timers.c ****         BaseType_t xTimerListsWereSwitched;
 760:./Drivers/FreeRTOS/timers.c ****         TickType_t xTimeNow;
 761:./Drivers/FreeRTOS/timers.c **** 
 762:./Drivers/FreeRTOS/timers.c ****         while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessa
 1566              		.loc 1 762 14
 1567 0006 A6E0     		b	.L98
 1568              	.L113:
 763:./Drivers/FreeRTOS/timers.c ****         {
 764:./Drivers/FreeRTOS/timers.c ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
 765:./Drivers/FreeRTOS/timers.c ****                 {
 766:./Drivers/FreeRTOS/timers.c ****                     /* Negative commands are pended function calls rather than timer
 767:./Drivers/FreeRTOS/timers.c ****                      * commands. */
 768:./Drivers/FreeRTOS/timers.c ****                     if( xMessage.xMessageID < ( BaseType_t ) 0 )
 769:./Drivers/FreeRTOS/timers.c ****                     {
 770:./Drivers/FreeRTOS/timers.c ****                         const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackPara
 771:./Drivers/FreeRTOS/timers.c **** 
 772:./Drivers/FreeRTOS/timers.c ****                         /* The timer uses the xCallbackParameters member to request a
 773:./Drivers/FreeRTOS/timers.c ****                          * callback be executed.  Check the callback is not NULL. */
 774:./Drivers/FreeRTOS/timers.c ****                         configASSERT( pxCallback );
 775:./Drivers/FreeRTOS/timers.c **** 
 776:./Drivers/FreeRTOS/timers.c ****                         /* Call the function. */
 777:./Drivers/FreeRTOS/timers.c ****                         pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulPar
 778:./Drivers/FreeRTOS/timers.c ****                     }
 779:./Drivers/FreeRTOS/timers.c ****                     else
 780:./Drivers/FreeRTOS/timers.c ****                     {
 781:./Drivers/FreeRTOS/timers.c ****                         mtCOVERAGE_TEST_MARKER();
 782:./Drivers/FreeRTOS/timers.c ****                     }
 783:./Drivers/FreeRTOS/timers.c ****                 }
 784:./Drivers/FreeRTOS/timers.c ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 785:./Drivers/FreeRTOS/timers.c **** 
 786:./Drivers/FreeRTOS/timers.c ****             /* Commands that are positive are timer commands rather than pended
 787:./Drivers/FreeRTOS/timers.c ****              * function calls. */
 788:./Drivers/FreeRTOS/timers.c ****             if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 1569              		.loc 1 788 25
 1570 0008 BB68     		ldr	r3, [r7, #8]
 1571              		.loc 1 788 15
 1572 000a 002B     		cmp	r3, #0
 1573 000c C0F2A280 		blt	.L114
 789:./Drivers/FreeRTOS/timers.c ****             {
 790:./Drivers/FreeRTOS/timers.c ****                 /* The messages uses the xTimerParameters member to work on a
 791:./Drivers/FreeRTOS/timers.c ****                  * software timer. */
 792:./Drivers/FreeRTOS/timers.c ****                 pxTimer = xMessage.u.xTimerParameters.pxTimer;
 1574              		.loc 1 792 25
 1575 0010 3B69     		ldr	r3, [r7, #16]
 1576 0012 FB61     		str	r3, [r7, #28]
 793:./Drivers/FreeRTOS/timers.c **** 
 794:./Drivers/FreeRTOS/timers.c ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*li
 1577              		.loc 1 794 21
 1578 0014 FB69     		ldr	r3, [r7, #28]
 1579 0016 5B69     		ldr	r3, [r3, #20]
 1580              		.loc 1 794 19
 1581 0018 002B     		cmp	r3, #0
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 46


 1582 001a 04D0     		beq	.L99
 795:./Drivers/FreeRTOS/timers.c ****                 {
 796:./Drivers/FreeRTOS/timers.c ****                     /* The timer is in a list, remove it. */
 797:./Drivers/FreeRTOS/timers.c ****                     ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 1583              		.loc 1 797 30
 1584 001c FB69     		ldr	r3, [r7, #28]
 1585 001e 0433     		adds	r3, r3, #4
 1586 0020 1846     		mov	r0, r3
 1587 0022 FFF7FEFF 		bl	uxListRemove
 1588              	.L99:
 798:./Drivers/FreeRTOS/timers.c ****                 }
 799:./Drivers/FreeRTOS/timers.c ****                 else
 800:./Drivers/FreeRTOS/timers.c ****                 {
 801:./Drivers/FreeRTOS/timers.c ****                     mtCOVERAGE_TEST_MARKER();
 802:./Drivers/FreeRTOS/timers.c ****                 }
 803:./Drivers/FreeRTOS/timers.c **** 
 804:./Drivers/FreeRTOS/timers.c ****                 traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParamet
 805:./Drivers/FreeRTOS/timers.c **** 
 806:./Drivers/FreeRTOS/timers.c ****                 /* In this case the xTimerListsWereSwitched parameter is not used, but
 807:./Drivers/FreeRTOS/timers.c ****                  *  it must be present in the function call.  prvSampleTimeNow() must be
 808:./Drivers/FreeRTOS/timers.c ****                  *  called after the message is received from xTimerQueue so there is no
 809:./Drivers/FreeRTOS/timers.c ****                  *  possibility of a higher priority task adding a message to the message
 810:./Drivers/FreeRTOS/timers.c ****                  *  queue with a time that is ahead of the timer daemon task (because it
 811:./Drivers/FreeRTOS/timers.c ****                  *  pre-empted the timer daemon task after the xTimeNow value was set). */
 812:./Drivers/FreeRTOS/timers.c ****                 xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 1589              		.loc 1 812 28
 1590 0026 3B1D     		adds	r3, r7, #4
 1591 0028 1846     		mov	r0, r3
 1592 002a FFF7FEFF 		bl	prvSampleTimeNow
 1593 002e B861     		str	r0, [r7, #24]
 813:./Drivers/FreeRTOS/timers.c **** 
 814:./Drivers/FreeRTOS/timers.c ****                 switch( xMessage.xMessageID )
 1594              		.loc 1 814 33
 1595 0030 BB68     		ldr	r3, [r7, #8]
 1596              		.loc 1 814 17
 1597 0032 013B     		subs	r3, r3, #1
 1598 0034 082B     		cmp	r3, #8
 1599 0036 00F28E80 		bhi	.L98
 1600 003a 01A2     		adr	r2, .L102
 1601 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1602              		.p2align 2
 1603              	.L102:
 1604 0040 65000000 		.word	.L104+1
 1605 0044 65000000 		.word	.L104+1
 1606 0048 CD000000 		.word	.L103+1
 1607 004c E1000000 		.word	.L101+1
 1608 0050 2B010000 		.word	.L105+1
 1609 0054 65000000 		.word	.L104+1
 1610 0058 65000000 		.word	.L104+1
 1611 005c CD000000 		.word	.L103+1
 1612 0060 E1000000 		.word	.L101+1
 1613              		.p2align 1
 1614              	.L104:
 815:./Drivers/FreeRTOS/timers.c ****                 {
 816:./Drivers/FreeRTOS/timers.c ****                     case tmrCOMMAND_START:
 817:./Drivers/FreeRTOS/timers.c ****                     case tmrCOMMAND_START_FROM_ISR:
 818:./Drivers/FreeRTOS/timers.c ****                     case tmrCOMMAND_RESET:
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 47


 819:./Drivers/FreeRTOS/timers.c ****                     case tmrCOMMAND_RESET_FROM_ISR:
 820:./Drivers/FreeRTOS/timers.c ****                         /* Start or restart a timer. */
 821:./Drivers/FreeRTOS/timers.c ****                         pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 1615              		.loc 1 821 43
 1616 0064 FB69     		ldr	r3, [r7, #28]
 1617 0066 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1618 006a 43F00103 		orr	r3, r3, #1
 1619 006e DAB2     		uxtb	r2, r3
 1620 0070 FB69     		ldr	r3, [r7, #28]
 1621 0072 83F82820 		strb	r2, [r3, #40]
 822:./Drivers/FreeRTOS/timers.c **** 
 823:./Drivers/FreeRTOS/timers.c ****                         if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessa
 1622              		.loc 1 823 93
 1623 0076 FA68     		ldr	r2, [r7, #12]
 1624              		.loc 1 823 117
 1625 0078 FB69     		ldr	r3, [r7, #28]
 1626 007a 9B69     		ldr	r3, [r3, #24]
 1627              		.loc 1 823 29
 1628 007c D118     		adds	r1, r2, r3
 1629 007e FB68     		ldr	r3, [r7, #12]
 1630 0080 BA69     		ldr	r2, [r7, #24]
 1631 0082 F869     		ldr	r0, [r7, #28]
 1632 0084 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1633 0088 0346     		mov	r3, r0
 1634              		.loc 1 823 27
 1635 008a 002B     		cmp	r3, #0
 1636 008c 63D0     		beq	.L98
 824:./Drivers/FreeRTOS/timers.c ****                         {
 825:./Drivers/FreeRTOS/timers.c ****                             /* The timer expired before it was added to the active
 826:./Drivers/FreeRTOS/timers.c ****                              * timer list.  Process it now. */
 827:./Drivers/FreeRTOS/timers.c ****                             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 1637              		.loc 1 827 42
 1638 008e FB69     		ldr	r3, [r7, #28]
 1639 0090 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1640              		.loc 1 827 53
 1641 0094 03F00403 		and	r3, r3, #4
 1642              		.loc 1 827 31
 1643 0098 002B     		cmp	r3, #0
 1644 009a 09D0     		beq	.L107
 828:./Drivers/FreeRTOS/timers.c ****                             {
 829:./Drivers/FreeRTOS/timers.c ****                                 prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue 
 1645              		.loc 1 829 85
 1646 009c FA68     		ldr	r2, [r7, #12]
 1647              		.loc 1 829 109
 1648 009e FB69     		ldr	r3, [r7, #28]
 1649 00a0 9B69     		ldr	r3, [r3, #24]
 1650              		.loc 1 829 33
 1651 00a2 1344     		add	r3, r3, r2
 1652 00a4 BA69     		ldr	r2, [r7, #24]
 1653 00a6 1946     		mov	r1, r3
 1654 00a8 F869     		ldr	r0, [r7, #28]
 1655 00aa FFF7FEFF 		bl	prvReloadTimer
 1656 00ae 08E0     		b	.L108
 1657              	.L107:
 830:./Drivers/FreeRTOS/timers.c ****                             }
 831:./Drivers/FreeRTOS/timers.c ****                             else
 832:./Drivers/FreeRTOS/timers.c ****                             {
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 48


 833:./Drivers/FreeRTOS/timers.c ****                                 pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 1658              		.loc 1 833 51
 1659 00b0 FB69     		ldr	r3, [r7, #28]
 1660 00b2 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1661 00b6 23F00103 		bic	r3, r3, #1
 1662 00ba DAB2     		uxtb	r2, r3
 1663 00bc FB69     		ldr	r3, [r7, #28]
 1664 00be 83F82820 		strb	r2, [r3, #40]
 1665              	.L108:
 834:./Drivers/FreeRTOS/timers.c ****                             }
 835:./Drivers/FreeRTOS/timers.c **** 
 836:./Drivers/FreeRTOS/timers.c ****                             /* Call the timer callback. */
 837:./Drivers/FreeRTOS/timers.c ****                             traceTIMER_EXPIRED( pxTimer );
 838:./Drivers/FreeRTOS/timers.c ****                             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1666              		.loc 1 838 36
 1667 00c2 FB69     		ldr	r3, [r7, #28]
 1668 00c4 1B6A     		ldr	r3, [r3, #32]
 1669              		.loc 1 838 29
 1670 00c6 F869     		ldr	r0, [r7, #28]
 1671 00c8 9847     		blx	r3
 1672              	.LVL2:
 839:./Drivers/FreeRTOS/timers.c ****                         }
 840:./Drivers/FreeRTOS/timers.c ****                         else
 841:./Drivers/FreeRTOS/timers.c ****                         {
 842:./Drivers/FreeRTOS/timers.c ****                             mtCOVERAGE_TEST_MARKER();
 843:./Drivers/FreeRTOS/timers.c ****                         }
 844:./Drivers/FreeRTOS/timers.c **** 
 845:./Drivers/FreeRTOS/timers.c ****                         break;
 1673              		.loc 1 845 25
 1674 00ca 44E0     		b	.L98
 1675              	.L103:
 846:./Drivers/FreeRTOS/timers.c **** 
 847:./Drivers/FreeRTOS/timers.c ****                     case tmrCOMMAND_STOP:
 848:./Drivers/FreeRTOS/timers.c ****                     case tmrCOMMAND_STOP_FROM_ISR:
 849:./Drivers/FreeRTOS/timers.c ****                         /* The timer has already been removed from the active list. */
 850:./Drivers/FreeRTOS/timers.c ****                         pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 1676              		.loc 1 850 43
 1677 00cc FB69     		ldr	r3, [r7, #28]
 1678 00ce 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1679 00d2 23F00103 		bic	r3, r3, #1
 1680 00d6 DAB2     		uxtb	r2, r3
 1681 00d8 FB69     		ldr	r3, [r7, #28]
 1682 00da 83F82820 		strb	r2, [r3, #40]
 851:./Drivers/FreeRTOS/timers.c ****                         break;
 1683              		.loc 1 851 25
 1684 00de 3AE0     		b	.L98
 1685              	.L101:
 852:./Drivers/FreeRTOS/timers.c **** 
 853:./Drivers/FreeRTOS/timers.c ****                     case tmrCOMMAND_CHANGE_PERIOD:
 854:./Drivers/FreeRTOS/timers.c ****                     case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR:
 855:./Drivers/FreeRTOS/timers.c ****                         pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 1686              		.loc 1 855 43
 1687 00e0 FB69     		ldr	r3, [r7, #28]
 1688 00e2 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1689 00e6 43F00103 		orr	r3, r3, #1
 1690 00ea DAB2     		uxtb	r2, r3
 1691 00ec FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 49


 1692 00ee 83F82820 		strb	r2, [r3, #40]
 856:./Drivers/FreeRTOS/timers.c ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1693              		.loc 1 856 83
 1694 00f2 FA68     		ldr	r2, [r7, #12]
 1695              		.loc 1 856 54
 1696 00f4 FB69     		ldr	r3, [r7, #28]
 1697 00f6 9A61     		str	r2, [r3, #24]
 857:./Drivers/FreeRTOS/timers.c ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1698              		.loc 1 857 25
 1699 00f8 FB69     		ldr	r3, [r7, #28]
 1700 00fa 9B69     		ldr	r3, [r3, #24]
 1701 00fc 002B     		cmp	r3, #0
 1702 00fe 0AD1     		bne	.L109
 1703              	.LBB46:
 1704              	.LBB47:
 198:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1705              		.loc 2 198 9
 1706              		.syntax unified
 1707              	@ 198 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1708 0100 4FF05003 			mov r3, #80												
 1709 0104 83F31188 		msr basepri, r3											
 1710 0108 BFF36F8F 		isb														
 1711 010c BFF34F8F 		dsb														
 1712              	
 1713              	@ 0 "" 2
 1714              		.thumb
 1715              		.syntax unified
 1716 0110 7B61     		str	r3, [r7, #20]
 1717              		.loc 2 206 5
 1718 0112 00BF     		nop
 1719              	.L110:
 1720              	.LBE47:
 1721              	.LBE46:
 1722              		.loc 1 857 25 discriminator 1
 1723 0114 FEE7     		b	.L110
 1724              	.L109:
 858:./Drivers/FreeRTOS/timers.c **** 
 859:./Drivers/FreeRTOS/timers.c ****                         /* The new period does not really have a reference, and can
 860:./Drivers/FreeRTOS/timers.c ****                          * be longer or shorter than the old one.  The command time is
 861:./Drivers/FreeRTOS/timers.c ****                          * therefore set to the current time, and as the period cannot
 862:./Drivers/FreeRTOS/timers.c ****                          * be zero the next expiry time can only be in the future,
 863:./Drivers/FreeRTOS/timers.c ****                          * meaning (unlike for the xTimerStart() case above) there is
 864:./Drivers/FreeRTOS/timers.c ****                          * no fail case that needs to be handled here. */
 865:./Drivers/FreeRTOS/timers.c ****                         ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerP
 1725              		.loc 1 865 91
 1726 0116 FB69     		ldr	r3, [r7, #28]
 1727 0118 9A69     		ldr	r2, [r3, #24]
 1728              		.loc 1 865 34
 1729 011a BB69     		ldr	r3, [r7, #24]
 1730 011c D118     		adds	r1, r2, r3
 1731 011e BB69     		ldr	r3, [r7, #24]
 1732 0120 BA69     		ldr	r2, [r7, #24]
 1733 0122 F869     		ldr	r0, [r7, #28]
 1734 0124 FFF7FEFF 		bl	prvInsertTimerInActiveList
 866:./Drivers/FreeRTOS/timers.c ****                         break;
 1735              		.loc 1 866 25
 1736 0128 15E0     		b	.L98
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 50


 1737              	.L105:
 867:./Drivers/FreeRTOS/timers.c **** 
 868:./Drivers/FreeRTOS/timers.c ****                     case tmrCOMMAND_DELETE:
 869:./Drivers/FreeRTOS/timers.c ****                         #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 870:./Drivers/FreeRTOS/timers.c ****                             {
 871:./Drivers/FreeRTOS/timers.c ****                                 /* The timer has already been removed from the active list,
 872:./Drivers/FreeRTOS/timers.c ****                                  * just free up the memory if the memory was dynamically
 873:./Drivers/FreeRTOS/timers.c ****                                  * allocated. */
 874:./Drivers/FreeRTOS/timers.c ****                                 if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( 
 1738              		.loc 1 874 46
 1739 012a FB69     		ldr	r3, [r7, #28]
 1740 012c 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1741              		.loc 1 874 57
 1742 0130 03F00203 		and	r3, r3, #2
 1743              		.loc 1 874 35
 1744 0134 002B     		cmp	r3, #0
 1745 0136 03D1     		bne	.L111
 875:./Drivers/FreeRTOS/timers.c ****                                 {
 876:./Drivers/FreeRTOS/timers.c ****                                     vPortFree( pxTimer );
 1746              		.loc 1 876 37
 1747 0138 F869     		ldr	r0, [r7, #28]
 1748 013a FFF7FEFF 		bl	vPortFree
 1749 013e 0AE0     		b	.L98
 1750              	.L111:
 877:./Drivers/FreeRTOS/timers.c ****                                 }
 878:./Drivers/FreeRTOS/timers.c ****                                 else
 879:./Drivers/FreeRTOS/timers.c ****                                 {
 880:./Drivers/FreeRTOS/timers.c ****                                     pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 1751              		.loc 1 880 55
 1752 0140 FB69     		ldr	r3, [r7, #28]
 1753 0142 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1754 0146 23F00103 		bic	r3, r3, #1
 1755 014a DAB2     		uxtb	r2, r3
 1756 014c FB69     		ldr	r3, [r7, #28]
 1757 014e 83F82820 		strb	r2, [r3, #40]
 881:./Drivers/FreeRTOS/timers.c ****                                 }
 882:./Drivers/FreeRTOS/timers.c ****                             }
 883:./Drivers/FreeRTOS/timers.c ****                         #else /* if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) */
 884:./Drivers/FreeRTOS/timers.c ****                             {
 885:./Drivers/FreeRTOS/timers.c ****                                 /* If dynamic allocation is not enabled, the memory
 886:./Drivers/FreeRTOS/timers.c ****                                  * could not have been dynamically allocated. So there is
 887:./Drivers/FreeRTOS/timers.c ****                                  * no need to free the memory - just mark the timer as
 888:./Drivers/FreeRTOS/timers.c ****                                  * "not active". */
 889:./Drivers/FreeRTOS/timers.c ****                                 pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 890:./Drivers/FreeRTOS/timers.c ****                             }
 891:./Drivers/FreeRTOS/timers.c ****                         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 892:./Drivers/FreeRTOS/timers.c ****                         break;
 1758              		.loc 1 892 25
 1759 0152 00E0     		b	.L98
 1760              	.L114:
 893:./Drivers/FreeRTOS/timers.c **** 
 894:./Drivers/FreeRTOS/timers.c ****                     default:
 895:./Drivers/FreeRTOS/timers.c ****                         /* Don't expect to get here. */
 896:./Drivers/FreeRTOS/timers.c ****                         break;
 897:./Drivers/FreeRTOS/timers.c ****                 }
 898:./Drivers/FreeRTOS/timers.c ****             }
 1761              		.loc 1 898 13
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 51


 1762 0154 00BF     		nop
 1763              	.L98:
 762:./Drivers/FreeRTOS/timers.c ****         {
 1764              		.loc 1 762 16
 1765 0156 084B     		ldr	r3, .L115
 1766 0158 1B68     		ldr	r3, [r3]
 1767 015a 07F10801 		add	r1, r7, #8
 1768 015e 0022     		movs	r2, #0
 1769 0160 1846     		mov	r0, r3
 1770 0162 FFF7FEFF 		bl	xQueueReceive
 1771 0166 0346     		mov	r3, r0
 762:./Drivers/FreeRTOS/timers.c ****         {
 1772              		.loc 1 762 14
 1773 0168 002B     		cmp	r3, #0
 1774 016a 7FF44DAF 		bne	.L113
 899:./Drivers/FreeRTOS/timers.c ****         }
 900:./Drivers/FreeRTOS/timers.c ****     }
 1775              		.loc 1 900 5
 1776 016e 00BF     		nop
 1777 0170 00BF     		nop
 1778 0172 2037     		adds	r7, r7, #32
 1779              	.LCFI91:
 1780              		.cfi_def_cfa_offset 8
 1781 0174 BD46     		mov	sp, r7
 1782              	.LCFI92:
 1783              		.cfi_def_cfa_register 13
 1784              		@ sp needed
 1785 0176 80BD     		pop	{r7, pc}
 1786              	.L116:
 1787              		.align	2
 1788              	.L115:
 1789 0178 00000000 		.word	xTimerQueue
 1790              		.cfi_endproc
 1791              	.LFE22:
 1793              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 1794              		.align	1
 1795              		.syntax unified
 1796              		.thumb
 1797              		.thumb_func
 1798              		.fpu fpv4-sp-d16
 1800              	prvSwitchTimerLists:
 1801              	.LFB23:
 901:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 902:./Drivers/FreeRTOS/timers.c **** 
 903:./Drivers/FreeRTOS/timers.c ****     static void prvSwitchTimerLists( void )
 904:./Drivers/FreeRTOS/timers.c ****     {
 1802              		.loc 1 904 5
 1803              		.cfi_startproc
 1804              		@ args = 0, pretend = 0, frame = 8
 1805              		@ frame_needed = 1, uses_anonymous_args = 0
 1806 0000 80B5     		push	{r7, lr}
 1807              	.LCFI93:
 1808              		.cfi_def_cfa_offset 8
 1809              		.cfi_offset 7, -8
 1810              		.cfi_offset 14, -4
 1811 0002 82B0     		sub	sp, sp, #8
 1812              	.LCFI94:
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 52


 1813              		.cfi_def_cfa_offset 16
 1814 0004 00AF     		add	r7, sp, #0
 1815              	.LCFI95:
 1816              		.cfi_def_cfa_register 7
 905:./Drivers/FreeRTOS/timers.c ****         TickType_t xNextExpireTime;
 906:./Drivers/FreeRTOS/timers.c ****         List_t * pxTemp;
 907:./Drivers/FreeRTOS/timers.c **** 
 908:./Drivers/FreeRTOS/timers.c ****         /* The tick count has overflowed.  The timer lists must be switched.
 909:./Drivers/FreeRTOS/timers.c ****          * If there are any timers still referenced from the current timer list
 910:./Drivers/FreeRTOS/timers.c ****          * then they must have expired and should be processed before the lists
 911:./Drivers/FreeRTOS/timers.c ****          * are switched. */
 912:./Drivers/FreeRTOS/timers.c ****         while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 1817              		.loc 1 912 14
 1818 0006 09E0     		b	.L118
 1819              	.L119:
 913:./Drivers/FreeRTOS/timers.c ****         {
 914:./Drivers/FreeRTOS/timers.c ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 1820              		.loc 1 914 31
 1821 0008 0E4B     		ldr	r3, .L120
 1822 000a 1B68     		ldr	r3, [r3]
 1823 000c DB68     		ldr	r3, [r3, #12]
 1824              		.loc 1 914 29
 1825 000e 1B68     		ldr	r3, [r3]
 1826 0010 3B60     		str	r3, [r7]
 915:./Drivers/FreeRTOS/timers.c **** 
 916:./Drivers/FreeRTOS/timers.c ****             /* Process the expired timer.  For auto-reload timers, be careful to
 917:./Drivers/FreeRTOS/timers.c ****              * process only expirations that occur on the current list.  Further
 918:./Drivers/FreeRTOS/timers.c ****              * expirations must wait until after the lists are switched. */
 919:./Drivers/FreeRTOS/timers.c ****             prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
 1827              		.loc 1 919 13
 1828 0012 4FF0FF31 		mov	r1, #-1
 1829 0016 3868     		ldr	r0, [r7]
 1830 0018 FFF7FEFF 		bl	prvProcessExpiredTimer
 1831              	.L118:
 912:./Drivers/FreeRTOS/timers.c ****         {
 1832              		.loc 1 912 16
 1833 001c 094B     		ldr	r3, .L120
 1834 001e 1B68     		ldr	r3, [r3]
 1835 0020 1B68     		ldr	r3, [r3]
 912:./Drivers/FreeRTOS/timers.c ****         {
 1836              		.loc 1 912 14
 1837 0022 002B     		cmp	r3, #0
 1838 0024 F0D1     		bne	.L119
 920:./Drivers/FreeRTOS/timers.c ****         }
 921:./Drivers/FreeRTOS/timers.c **** 
 922:./Drivers/FreeRTOS/timers.c ****         pxTemp = pxCurrentTimerList;
 1839              		.loc 1 922 16
 1840 0026 074B     		ldr	r3, .L120
 1841 0028 1B68     		ldr	r3, [r3]
 1842 002a 7B60     		str	r3, [r7, #4]
 923:./Drivers/FreeRTOS/timers.c ****         pxCurrentTimerList = pxOverflowTimerList;
 1843              		.loc 1 923 28
 1844 002c 064B     		ldr	r3, .L120+4
 1845 002e 1B68     		ldr	r3, [r3]
 1846 0030 044A     		ldr	r2, .L120
 1847 0032 1360     		str	r3, [r2]
 924:./Drivers/FreeRTOS/timers.c ****         pxOverflowTimerList = pxTemp;
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 53


 1848              		.loc 1 924 29
 1849 0034 044A     		ldr	r2, .L120+4
 1850 0036 7B68     		ldr	r3, [r7, #4]
 1851 0038 1360     		str	r3, [r2]
 925:./Drivers/FreeRTOS/timers.c ****     }
 1852              		.loc 1 925 5
 1853 003a 00BF     		nop
 1854 003c 0837     		adds	r7, r7, #8
 1855              	.LCFI96:
 1856              		.cfi_def_cfa_offset 8
 1857 003e BD46     		mov	sp, r7
 1858              	.LCFI97:
 1859              		.cfi_def_cfa_register 13
 1860              		@ sp needed
 1861 0040 80BD     		pop	{r7, pc}
 1862              	.L121:
 1863 0042 00BF     		.align	2
 1864              	.L120:
 1865 0044 00000000 		.word	pxCurrentTimerList
 1866 0048 00000000 		.word	pxOverflowTimerList
 1867              		.cfi_endproc
 1868              	.LFE23:
 1870              		.section	.rodata
 1871              		.align	2
 1872              	.LC1:
 1873 0008 546D7251 		.ascii	"TmrQ\000"
 1873      00
 1874              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 1875              		.align	1
 1876              		.syntax unified
 1877              		.thumb
 1878              		.thumb_func
 1879              		.fpu fpv4-sp-d16
 1881              	prvCheckForValidListAndQueue:
 1882              	.LFB24:
 926:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 927:./Drivers/FreeRTOS/timers.c **** 
 928:./Drivers/FreeRTOS/timers.c ****     static void prvCheckForValidListAndQueue( void )
 929:./Drivers/FreeRTOS/timers.c ****     {
 1883              		.loc 1 929 5
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 0
 1886              		@ frame_needed = 1, uses_anonymous_args = 0
 1887 0000 80B5     		push	{r7, lr}
 1888              	.LCFI98:
 1889              		.cfi_def_cfa_offset 8
 1890              		.cfi_offset 7, -8
 1891              		.cfi_offset 14, -4
 1892 0002 00AF     		add	r7, sp, #0
 1893              	.LCFI99:
 1894              		.cfi_def_cfa_register 7
 930:./Drivers/FreeRTOS/timers.c ****         /* Check that the list from which active timers are referenced, and the
 931:./Drivers/FreeRTOS/timers.c ****          * queue used to communicate with the timer service, have been
 932:./Drivers/FreeRTOS/timers.c ****          * initialised. */
 933:./Drivers/FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 1895              		.loc 1 933 9
 1896 0004 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 54


 934:./Drivers/FreeRTOS/timers.c ****         {
 935:./Drivers/FreeRTOS/timers.c ****             if( xTimerQueue == NULL )
 1897              		.loc 1 935 29
 1898 0008 124B     		ldr	r3, .L124
 1899 000a 1B68     		ldr	r3, [r3]
 1900              		.loc 1 935 15
 1901 000c 002B     		cmp	r3, #0
 1902 000e 1DD1     		bne	.L123
 936:./Drivers/FreeRTOS/timers.c ****             {
 937:./Drivers/FreeRTOS/timers.c ****                 vListInitialise( &xActiveTimerList1 );
 1903              		.loc 1 937 17
 1904 0010 1148     		ldr	r0, .L124+4
 1905 0012 FFF7FEFF 		bl	vListInitialise
 938:./Drivers/FreeRTOS/timers.c ****                 vListInitialise( &xActiveTimerList2 );
 1906              		.loc 1 938 17
 1907 0016 1148     		ldr	r0, .L124+8
 1908 0018 FFF7FEFF 		bl	vListInitialise
 939:./Drivers/FreeRTOS/timers.c ****                 pxCurrentTimerList = &xActiveTimerList1;
 1909              		.loc 1 939 36
 1910 001c 104B     		ldr	r3, .L124+12
 1911 001e 0E4A     		ldr	r2, .L124+4
 1912 0020 1A60     		str	r2, [r3]
 940:./Drivers/FreeRTOS/timers.c ****                 pxOverflowTimerList = &xActiveTimerList2;
 1913              		.loc 1 940 37
 1914 0022 104B     		ldr	r3, .L124+16
 1915 0024 0D4A     		ldr	r2, .L124+8
 1916 0026 1A60     		str	r2, [r3]
 941:./Drivers/FreeRTOS/timers.c **** 
 942:./Drivers/FreeRTOS/timers.c ****                 #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 943:./Drivers/FreeRTOS/timers.c ****                     {
 944:./Drivers/FreeRTOS/timers.c ****                         /* The timer queue is allocated statically in case
 945:./Drivers/FreeRTOS/timers.c ****                          * configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 946:./Drivers/FreeRTOS/timers.c ****                         PRIVILEGED_DATA static StaticQueue_t xStaticTimerQueue;                    
 947:./Drivers/FreeRTOS/timers.c ****                         PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) config
 948:./Drivers/FreeRTOS/timers.c **** 
 949:./Drivers/FreeRTOS/timers.c ****                         xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH,
 950:./Drivers/FreeRTOS/timers.c ****                     }
 951:./Drivers/FreeRTOS/timers.c ****                 #else
 952:./Drivers/FreeRTOS/timers.c ****                     {
 953:./Drivers/FreeRTOS/timers.c ****                         xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeo
 1917              		.loc 1 953 39
 1918 0028 0022     		movs	r2, #0
 1919 002a 0C21     		movs	r1, #12
 1920 002c 0A20     		movs	r0, #10
 1921 002e FFF7FEFF 		bl	xQueueGenericCreate
 1922 0032 0346     		mov	r3, r0
 1923              		.loc 1 953 37
 1924 0034 074A     		ldr	r2, .L124
 1925 0036 1360     		str	r3, [r2]
 954:./Drivers/FreeRTOS/timers.c ****                     }
 955:./Drivers/FreeRTOS/timers.c ****                 #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 956:./Drivers/FreeRTOS/timers.c **** 
 957:./Drivers/FreeRTOS/timers.c ****                 #if ( configQUEUE_REGISTRY_SIZE > 0 )
 958:./Drivers/FreeRTOS/timers.c ****                     {
 959:./Drivers/FreeRTOS/timers.c ****                         if( xTimerQueue != NULL )
 1926              		.loc 1 959 41
 1927 0038 064B     		ldr	r3, .L124
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 55


 1928 003a 1B68     		ldr	r3, [r3]
 1929              		.loc 1 959 27
 1930 003c 002B     		cmp	r3, #0
 1931 003e 05D0     		beq	.L123
 960:./Drivers/FreeRTOS/timers.c ****                         {
 961:./Drivers/FreeRTOS/timers.c ****                             vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 1932              		.loc 1 961 29
 1933 0040 044B     		ldr	r3, .L124
 1934 0042 1B68     		ldr	r3, [r3]
 1935 0044 0849     		ldr	r1, .L124+20
 1936 0046 1846     		mov	r0, r3
 1937 0048 FFF7FEFF 		bl	vQueueAddToRegistry
 1938              	.L123:
 962:./Drivers/FreeRTOS/timers.c ****                         }
 963:./Drivers/FreeRTOS/timers.c ****                         else
 964:./Drivers/FreeRTOS/timers.c ****                         {
 965:./Drivers/FreeRTOS/timers.c ****                             mtCOVERAGE_TEST_MARKER();
 966:./Drivers/FreeRTOS/timers.c ****                         }
 967:./Drivers/FreeRTOS/timers.c ****                     }
 968:./Drivers/FreeRTOS/timers.c ****                 #endif /* configQUEUE_REGISTRY_SIZE */
 969:./Drivers/FreeRTOS/timers.c ****             }
 970:./Drivers/FreeRTOS/timers.c ****             else
 971:./Drivers/FreeRTOS/timers.c ****             {
 972:./Drivers/FreeRTOS/timers.c ****                 mtCOVERAGE_TEST_MARKER();
 973:./Drivers/FreeRTOS/timers.c ****             }
 974:./Drivers/FreeRTOS/timers.c ****         }
 975:./Drivers/FreeRTOS/timers.c ****         taskEXIT_CRITICAL();
 1939              		.loc 1 975 9
 1940 004c FFF7FEFF 		bl	vPortExitCritical
 976:./Drivers/FreeRTOS/timers.c ****     }
 1941              		.loc 1 976 5
 1942 0050 00BF     		nop
 1943 0052 80BD     		pop	{r7, pc}
 1944              	.L125:
 1945              		.align	2
 1946              	.L124:
 1947 0054 00000000 		.word	xTimerQueue
 1948 0058 00000000 		.word	xActiveTimerList1
 1949 005c 00000000 		.word	xActiveTimerList2
 1950 0060 00000000 		.word	pxCurrentTimerList
 1951 0064 00000000 		.word	pxOverflowTimerList
 1952 0068 08000000 		.word	.LC1
 1953              		.cfi_endproc
 1954              	.LFE24:
 1956              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1957              		.align	1
 1958              		.global	xTimerIsTimerActive
 1959              		.syntax unified
 1960              		.thumb
 1961              		.thumb_func
 1962              		.fpu fpv4-sp-d16
 1964              	xTimerIsTimerActive:
 1965              	.LFB25:
 977:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
 978:./Drivers/FreeRTOS/timers.c **** 
 979:./Drivers/FreeRTOS/timers.c ****     BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 980:./Drivers/FreeRTOS/timers.c ****     {
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 56


 1966              		.loc 1 980 5
 1967              		.cfi_startproc
 1968              		@ args = 0, pretend = 0, frame = 24
 1969              		@ frame_needed = 1, uses_anonymous_args = 0
 1970 0000 80B5     		push	{r7, lr}
 1971              	.LCFI100:
 1972              		.cfi_def_cfa_offset 8
 1973              		.cfi_offset 7, -8
 1974              		.cfi_offset 14, -4
 1975 0002 86B0     		sub	sp, sp, #24
 1976              	.LCFI101:
 1977              		.cfi_def_cfa_offset 32
 1978 0004 00AF     		add	r7, sp, #0
 1979              	.LCFI102:
 1980              		.cfi_def_cfa_register 7
 1981 0006 7860     		str	r0, [r7, #4]
 981:./Drivers/FreeRTOS/timers.c ****         BaseType_t xReturn;
 982:./Drivers/FreeRTOS/timers.c ****         Timer_t * pxTimer = xTimer;
 1982              		.loc 1 982 19
 1983 0008 7B68     		ldr	r3, [r7, #4]
 1984 000a 3B61     		str	r3, [r7, #16]
 983:./Drivers/FreeRTOS/timers.c **** 
 984:./Drivers/FreeRTOS/timers.c ****         configASSERT( xTimer );
 1985              		.loc 1 984 9
 1986 000c 7B68     		ldr	r3, [r7, #4]
 1987 000e 002B     		cmp	r3, #0
 1988 0010 0AD1     		bne	.L127
 1989              	.LBB48:
 1990              	.LBB49:
 198:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1991              		.loc 2 198 9
 1992              		.syntax unified
 1993              	@ 198 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1994 0012 4FF05003 			mov r3, #80												
 1995 0016 83F31188 		msr basepri, r3											
 1996 001a BFF36F8F 		isb														
 1997 001e BFF34F8F 		dsb														
 1998              	
 1999              	@ 0 "" 2
 2000              		.thumb
 2001              		.syntax unified
 2002 0022 FB60     		str	r3, [r7, #12]
 2003              		.loc 2 206 5
 2004 0024 00BF     		nop
 2005              	.L128:
 2006              	.LBE49:
 2007              	.LBE48:
 2008              		.loc 1 984 9 discriminator 1
 2009 0026 FEE7     		b	.L128
 2010              	.L127:
 985:./Drivers/FreeRTOS/timers.c **** 
 986:./Drivers/FreeRTOS/timers.c ****         /* Is the timer in the list of active timers? */
 987:./Drivers/FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 2011              		.loc 1 987 9
 2012 0028 FFF7FEFF 		bl	vPortEnterCritical
 988:./Drivers/FreeRTOS/timers.c ****         {
 989:./Drivers/FreeRTOS/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 57


 2013              		.loc 1 989 26
 2014 002c 3B69     		ldr	r3, [r7, #16]
 2015 002e 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 2016              		.loc 1 989 37
 2017 0032 03F00103 		and	r3, r3, #1
 2018              		.loc 1 989 15
 2019 0036 002B     		cmp	r3, #0
 2020 0038 02D1     		bne	.L129
 990:./Drivers/FreeRTOS/timers.c ****             {
 991:./Drivers/FreeRTOS/timers.c ****                 xReturn = pdFALSE;
 2021              		.loc 1 991 25
 2022 003a 0023     		movs	r3, #0
 2023 003c 7B61     		str	r3, [r7, #20]
 2024 003e 01E0     		b	.L130
 2025              	.L129:
 992:./Drivers/FreeRTOS/timers.c ****             }
 993:./Drivers/FreeRTOS/timers.c ****             else
 994:./Drivers/FreeRTOS/timers.c ****             {
 995:./Drivers/FreeRTOS/timers.c ****                 xReturn = pdTRUE;
 2026              		.loc 1 995 25
 2027 0040 0123     		movs	r3, #1
 2028 0042 7B61     		str	r3, [r7, #20]
 2029              	.L130:
 996:./Drivers/FreeRTOS/timers.c ****             }
 997:./Drivers/FreeRTOS/timers.c ****         }
 998:./Drivers/FreeRTOS/timers.c ****         taskEXIT_CRITICAL();
 2030              		.loc 1 998 9
 2031 0044 FFF7FEFF 		bl	vPortExitCritical
 999:./Drivers/FreeRTOS/timers.c **** 
1000:./Drivers/FreeRTOS/timers.c ****         return xReturn;
 2032              		.loc 1 1000 16
 2033 0048 7B69     		ldr	r3, [r7, #20]
1001:./Drivers/FreeRTOS/timers.c ****     } /*lint !e818 Can't be pointer to const due to the typedef. */
 2034              		.loc 1 1001 5
 2035 004a 1846     		mov	r0, r3
 2036 004c 1837     		adds	r7, r7, #24
 2037              	.LCFI103:
 2038              		.cfi_def_cfa_offset 8
 2039 004e BD46     		mov	sp, r7
 2040              	.LCFI104:
 2041              		.cfi_def_cfa_register 13
 2042              		@ sp needed
 2043 0050 80BD     		pop	{r7, pc}
 2044              		.cfi_endproc
 2045              	.LFE25:
 2047              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 2048              		.align	1
 2049              		.global	pvTimerGetTimerID
 2050              		.syntax unified
 2051              		.thumb
 2052              		.thumb_func
 2053              		.fpu fpv4-sp-d16
 2055              	pvTimerGetTimerID:
 2056              	.LFB26:
1002:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
1003:./Drivers/FreeRTOS/timers.c **** 
1004:./Drivers/FreeRTOS/timers.c ****     void * pvTimerGetTimerID( const TimerHandle_t xTimer )
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 58


1005:./Drivers/FreeRTOS/timers.c ****     {
 2057              		.loc 1 1005 5
 2058              		.cfi_startproc
 2059              		@ args = 0, pretend = 0, frame = 24
 2060              		@ frame_needed = 1, uses_anonymous_args = 0
 2061 0000 80B5     		push	{r7, lr}
 2062              	.LCFI105:
 2063              		.cfi_def_cfa_offset 8
 2064              		.cfi_offset 7, -8
 2065              		.cfi_offset 14, -4
 2066 0002 86B0     		sub	sp, sp, #24
 2067              	.LCFI106:
 2068              		.cfi_def_cfa_offset 32
 2069 0004 00AF     		add	r7, sp, #0
 2070              	.LCFI107:
 2071              		.cfi_def_cfa_register 7
 2072 0006 7860     		str	r0, [r7, #4]
1006:./Drivers/FreeRTOS/timers.c ****         Timer_t * const pxTimer = xTimer;
 2073              		.loc 1 1006 25
 2074 0008 7B68     		ldr	r3, [r7, #4]
 2075 000a 7B61     		str	r3, [r7, #20]
1007:./Drivers/FreeRTOS/timers.c ****         void * pvReturn;
1008:./Drivers/FreeRTOS/timers.c **** 
1009:./Drivers/FreeRTOS/timers.c ****         configASSERT( xTimer );
 2076              		.loc 1 1009 9
 2077 000c 7B68     		ldr	r3, [r7, #4]
 2078 000e 002B     		cmp	r3, #0
 2079 0010 0AD1     		bne	.L133
 2080              	.LBB50:
 2081              	.LBB51:
 198:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2082              		.loc 2 198 9
 2083              		.syntax unified
 2084              	@ 198 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2085 0012 4FF05003 			mov r3, #80												
 2086 0016 83F31188 		msr basepri, r3											
 2087 001a BFF36F8F 		isb														
 2088 001e BFF34F8F 		dsb														
 2089              	
 2090              	@ 0 "" 2
 2091              		.thumb
 2092              		.syntax unified
 2093 0022 FB60     		str	r3, [r7, #12]
 2094              		.loc 2 206 5
 2095 0024 00BF     		nop
 2096              	.L134:
 2097              	.LBE51:
 2098              	.LBE50:
 2099              		.loc 1 1009 9 discriminator 1
 2100 0026 FEE7     		b	.L134
 2101              	.L133:
1010:./Drivers/FreeRTOS/timers.c **** 
1011:./Drivers/FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 2102              		.loc 1 1011 9
 2103 0028 FFF7FEFF 		bl	vPortEnterCritical
1012:./Drivers/FreeRTOS/timers.c ****         {
1013:./Drivers/FreeRTOS/timers.c ****             pvReturn = pxTimer->pvTimerID;
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 59


 2104              		.loc 1 1013 22
 2105 002c 7B69     		ldr	r3, [r7, #20]
 2106 002e DB69     		ldr	r3, [r3, #28]
 2107 0030 3B61     		str	r3, [r7, #16]
1014:./Drivers/FreeRTOS/timers.c ****         }
1015:./Drivers/FreeRTOS/timers.c ****         taskEXIT_CRITICAL();
 2108              		.loc 1 1015 9
 2109 0032 FFF7FEFF 		bl	vPortExitCritical
1016:./Drivers/FreeRTOS/timers.c **** 
1017:./Drivers/FreeRTOS/timers.c ****         return pvReturn;
 2110              		.loc 1 1017 16
 2111 0036 3B69     		ldr	r3, [r7, #16]
1018:./Drivers/FreeRTOS/timers.c ****     }
 2112              		.loc 1 1018 5
 2113 0038 1846     		mov	r0, r3
 2114 003a 1837     		adds	r7, r7, #24
 2115              	.LCFI108:
 2116              		.cfi_def_cfa_offset 8
 2117 003c BD46     		mov	sp, r7
 2118              	.LCFI109:
 2119              		.cfi_def_cfa_register 13
 2120              		@ sp needed
 2121 003e 80BD     		pop	{r7, pc}
 2122              		.cfi_endproc
 2123              	.LFE26:
 2125              		.section	.text.vTimerSetTimerID,"ax",%progbits
 2126              		.align	1
 2127              		.global	vTimerSetTimerID
 2128              		.syntax unified
 2129              		.thumb
 2130              		.thumb_func
 2131              		.fpu fpv4-sp-d16
 2133              	vTimerSetTimerID:
 2134              	.LFB27:
1019:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
1020:./Drivers/FreeRTOS/timers.c **** 
1021:./Drivers/FreeRTOS/timers.c ****     void vTimerSetTimerID( TimerHandle_t xTimer,
1022:./Drivers/FreeRTOS/timers.c ****                            void * pvNewID )
1023:./Drivers/FreeRTOS/timers.c ****     {
 2135              		.loc 1 1023 5
 2136              		.cfi_startproc
 2137              		@ args = 0, pretend = 0, frame = 16
 2138              		@ frame_needed = 1, uses_anonymous_args = 0
 2139 0000 80B5     		push	{r7, lr}
 2140              	.LCFI110:
 2141              		.cfi_def_cfa_offset 8
 2142              		.cfi_offset 7, -8
 2143              		.cfi_offset 14, -4
 2144 0002 84B0     		sub	sp, sp, #16
 2145              	.LCFI111:
 2146              		.cfi_def_cfa_offset 24
 2147 0004 00AF     		add	r7, sp, #0
 2148              	.LCFI112:
 2149              		.cfi_def_cfa_register 7
 2150 0006 7860     		str	r0, [r7, #4]
 2151 0008 3960     		str	r1, [r7]
1024:./Drivers/FreeRTOS/timers.c ****         Timer_t * const pxTimer = xTimer;
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 60


 2152              		.loc 1 1024 25
 2153 000a 7B68     		ldr	r3, [r7, #4]
 2154 000c FB60     		str	r3, [r7, #12]
1025:./Drivers/FreeRTOS/timers.c **** 
1026:./Drivers/FreeRTOS/timers.c ****         configASSERT( xTimer );
 2155              		.loc 1 1026 9
 2156 000e 7B68     		ldr	r3, [r7, #4]
 2157 0010 002B     		cmp	r3, #0
 2158 0012 0AD1     		bne	.L137
 2159              	.LBB52:
 2160              	.LBB53:
 198:Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2161              		.loc 2 198 9
 2162              		.syntax unified
 2163              	@ 198 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2164 0014 4FF05003 			mov r3, #80												
 2165 0018 83F31188 		msr basepri, r3											
 2166 001c BFF36F8F 		isb														
 2167 0020 BFF34F8F 		dsb														
 2168              	
 2169              	@ 0 "" 2
 2170              		.thumb
 2171              		.syntax unified
 2172 0024 BB60     		str	r3, [r7, #8]
 2173              		.loc 2 206 5
 2174 0026 00BF     		nop
 2175              	.L138:
 2176              	.LBE53:
 2177              	.LBE52:
 2178              		.loc 1 1026 9 discriminator 1
 2179 0028 FEE7     		b	.L138
 2180              	.L137:
1027:./Drivers/FreeRTOS/timers.c **** 
1028:./Drivers/FreeRTOS/timers.c ****         taskENTER_CRITICAL();
 2181              		.loc 1 1028 9
 2182 002a FFF7FEFF 		bl	vPortEnterCritical
1029:./Drivers/FreeRTOS/timers.c ****         {
1030:./Drivers/FreeRTOS/timers.c ****             pxTimer->pvTimerID = pvNewID;
 2183              		.loc 1 1030 32
 2184 002e FB68     		ldr	r3, [r7, #12]
 2185 0030 3A68     		ldr	r2, [r7]
 2186 0032 DA61     		str	r2, [r3, #28]
1031:./Drivers/FreeRTOS/timers.c ****         }
1032:./Drivers/FreeRTOS/timers.c ****         taskEXIT_CRITICAL();
 2187              		.loc 1 1032 9
 2188 0034 FFF7FEFF 		bl	vPortExitCritical
1033:./Drivers/FreeRTOS/timers.c ****     }
 2189              		.loc 1 1033 5
 2190 0038 00BF     		nop
 2191 003a 1037     		adds	r7, r7, #16
 2192              	.LCFI113:
 2193              		.cfi_def_cfa_offset 8
 2194 003c BD46     		mov	sp, r7
 2195              	.LCFI114:
 2196              		.cfi_def_cfa_register 13
 2197              		@ sp needed
 2198 003e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 61


 2199              		.cfi_endproc
 2200              	.LFE27:
 2202              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 2203              		.align	1
 2204              		.global	uxTimerGetTimerNumber
 2205              		.syntax unified
 2206              		.thumb
 2207              		.thumb_func
 2208              		.fpu fpv4-sp-d16
 2210              	uxTimerGetTimerNumber:
 2211              	.LFB28:
1034:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
1035:./Drivers/FreeRTOS/timers.c **** 
1036:./Drivers/FreeRTOS/timers.c ****     #if ( INCLUDE_xTimerPendFunctionCall == 1 )
1037:./Drivers/FreeRTOS/timers.c **** 
1038:./Drivers/FreeRTOS/timers.c ****         BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend,
1039:./Drivers/FreeRTOS/timers.c ****                                                   void * pvParameter1,
1040:./Drivers/FreeRTOS/timers.c ****                                                   uint32_t ulParameter2,
1041:./Drivers/FreeRTOS/timers.c ****                                                   BaseType_t * pxHigherPriorityTaskWoken )
1042:./Drivers/FreeRTOS/timers.c ****         {
1043:./Drivers/FreeRTOS/timers.c ****             DaemonTaskMessage_t xMessage;
1044:./Drivers/FreeRTOS/timers.c ****             BaseType_t xReturn;
1045:./Drivers/FreeRTOS/timers.c **** 
1046:./Drivers/FreeRTOS/timers.c ****             /* Complete the message with the function parameters and post it to the
1047:./Drivers/FreeRTOS/timers.c ****              * daemon task. */
1048:./Drivers/FreeRTOS/timers.c ****             xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
1049:./Drivers/FreeRTOS/timers.c ****             xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1050:./Drivers/FreeRTOS/timers.c ****             xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1051:./Drivers/FreeRTOS/timers.c ****             xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1052:./Drivers/FreeRTOS/timers.c **** 
1053:./Drivers/FreeRTOS/timers.c ****             xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
1054:./Drivers/FreeRTOS/timers.c **** 
1055:./Drivers/FreeRTOS/timers.c ****             tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1056:./Drivers/FreeRTOS/timers.c **** 
1057:./Drivers/FreeRTOS/timers.c ****             return xReturn;
1058:./Drivers/FreeRTOS/timers.c ****         }
1059:./Drivers/FreeRTOS/timers.c **** 
1060:./Drivers/FreeRTOS/timers.c ****     #endif /* INCLUDE_xTimerPendFunctionCall */
1061:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
1062:./Drivers/FreeRTOS/timers.c **** 
1063:./Drivers/FreeRTOS/timers.c ****     #if ( INCLUDE_xTimerPendFunctionCall == 1 )
1064:./Drivers/FreeRTOS/timers.c **** 
1065:./Drivers/FreeRTOS/timers.c ****         BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend,
1066:./Drivers/FreeRTOS/timers.c ****                                            void * pvParameter1,
1067:./Drivers/FreeRTOS/timers.c ****                                            uint32_t ulParameter2,
1068:./Drivers/FreeRTOS/timers.c ****                                            TickType_t xTicksToWait )
1069:./Drivers/FreeRTOS/timers.c ****         {
1070:./Drivers/FreeRTOS/timers.c ****             DaemonTaskMessage_t xMessage;
1071:./Drivers/FreeRTOS/timers.c ****             BaseType_t xReturn;
1072:./Drivers/FreeRTOS/timers.c **** 
1073:./Drivers/FreeRTOS/timers.c ****             /* This function can only be called after a timer has been created or
1074:./Drivers/FreeRTOS/timers.c ****              * after the scheduler has been started because, until then, the timer
1075:./Drivers/FreeRTOS/timers.c ****              * queue does not exist. */
1076:./Drivers/FreeRTOS/timers.c ****             configASSERT( xTimerQueue );
1077:./Drivers/FreeRTOS/timers.c **** 
1078:./Drivers/FreeRTOS/timers.c ****             /* Complete the message with the function parameters and post it to the
1079:./Drivers/FreeRTOS/timers.c ****              * daemon task. */
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 62


1080:./Drivers/FreeRTOS/timers.c ****             xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
1081:./Drivers/FreeRTOS/timers.c ****             xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1082:./Drivers/FreeRTOS/timers.c ****             xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1083:./Drivers/FreeRTOS/timers.c ****             xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1084:./Drivers/FreeRTOS/timers.c **** 
1085:./Drivers/FreeRTOS/timers.c ****             xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
1086:./Drivers/FreeRTOS/timers.c **** 
1087:./Drivers/FreeRTOS/timers.c ****             tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1088:./Drivers/FreeRTOS/timers.c **** 
1089:./Drivers/FreeRTOS/timers.c ****             return xReturn;
1090:./Drivers/FreeRTOS/timers.c ****         }
1091:./Drivers/FreeRTOS/timers.c **** 
1092:./Drivers/FreeRTOS/timers.c ****     #endif /* INCLUDE_xTimerPendFunctionCall */
1093:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
1094:./Drivers/FreeRTOS/timers.c **** 
1095:./Drivers/FreeRTOS/timers.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
1096:./Drivers/FreeRTOS/timers.c **** 
1097:./Drivers/FreeRTOS/timers.c ****         UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1098:./Drivers/FreeRTOS/timers.c ****         {
 2212              		.loc 1 1098 9
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 8
 2215              		@ frame_needed = 1, uses_anonymous_args = 0
 2216              		@ link register save eliminated.
 2217 0000 80B4     		push	{r7}
 2218              	.LCFI115:
 2219              		.cfi_def_cfa_offset 4
 2220              		.cfi_offset 7, -4
 2221 0002 83B0     		sub	sp, sp, #12
 2222              	.LCFI116:
 2223              		.cfi_def_cfa_offset 16
 2224 0004 00AF     		add	r7, sp, #0
 2225              	.LCFI117:
 2226              		.cfi_def_cfa_register 7
 2227 0006 7860     		str	r0, [r7, #4]
1099:./Drivers/FreeRTOS/timers.c ****             return ( ( Timer_t * ) xTimer )->uxTimerNumber;
 2228              		.loc 1 1099 44
 2229 0008 7B68     		ldr	r3, [r7, #4]
 2230 000a 5B6A     		ldr	r3, [r3, #36]
1100:./Drivers/FreeRTOS/timers.c ****         }
 2231              		.loc 1 1100 9
 2232 000c 1846     		mov	r0, r3
 2233 000e 0C37     		adds	r7, r7, #12
 2234              	.LCFI118:
 2235              		.cfi_def_cfa_offset 4
 2236 0010 BD46     		mov	sp, r7
 2237              	.LCFI119:
 2238              		.cfi_def_cfa_register 13
 2239              		@ sp needed
 2240 0012 5DF8047B 		ldr	r7, [sp], #4
 2241              	.LCFI120:
 2242              		.cfi_restore 7
 2243              		.cfi_def_cfa_offset 0
 2244 0016 7047     		bx	lr
 2245              		.cfi_endproc
 2246              	.LFE28:
 2248              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 63


 2249              		.align	1
 2250              		.global	vTimerSetTimerNumber
 2251              		.syntax unified
 2252              		.thumb
 2253              		.thumb_func
 2254              		.fpu fpv4-sp-d16
 2256              	vTimerSetTimerNumber:
 2257              	.LFB29:
1101:./Drivers/FreeRTOS/timers.c **** 
1102:./Drivers/FreeRTOS/timers.c ****     #endif /* configUSE_TRACE_FACILITY */
1103:./Drivers/FreeRTOS/timers.c **** /*-----------------------------------------------------------*/
1104:./Drivers/FreeRTOS/timers.c **** 
1105:./Drivers/FreeRTOS/timers.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
1106:./Drivers/FreeRTOS/timers.c **** 
1107:./Drivers/FreeRTOS/timers.c ****         void vTimerSetTimerNumber( TimerHandle_t xTimer,
1108:./Drivers/FreeRTOS/timers.c ****                                    UBaseType_t uxTimerNumber )
1109:./Drivers/FreeRTOS/timers.c ****         {
 2258              		.loc 1 1109 9
 2259              		.cfi_startproc
 2260              		@ args = 0, pretend = 0, frame = 8
 2261              		@ frame_needed = 1, uses_anonymous_args = 0
 2262              		@ link register save eliminated.
 2263 0000 80B4     		push	{r7}
 2264              	.LCFI121:
 2265              		.cfi_def_cfa_offset 4
 2266              		.cfi_offset 7, -4
 2267 0002 83B0     		sub	sp, sp, #12
 2268              	.LCFI122:
 2269              		.cfi_def_cfa_offset 16
 2270 0004 00AF     		add	r7, sp, #0
 2271              	.LCFI123:
 2272              		.cfi_def_cfa_register 7
 2273 0006 7860     		str	r0, [r7, #4]
 2274 0008 3960     		str	r1, [r7]
1110:./Drivers/FreeRTOS/timers.c ****             ( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 2275              		.loc 1 1110 53
 2276 000a 7B68     		ldr	r3, [r7, #4]
 2277 000c 3A68     		ldr	r2, [r7]
 2278 000e 5A62     		str	r2, [r3, #36]
1111:./Drivers/FreeRTOS/timers.c ****         }
 2279              		.loc 1 1111 9
 2280 0010 00BF     		nop
 2281 0012 0C37     		adds	r7, r7, #12
 2282              	.LCFI124:
 2283              		.cfi_def_cfa_offset 4
 2284 0014 BD46     		mov	sp, r7
 2285              	.LCFI125:
 2286              		.cfi_def_cfa_register 13
 2287              		@ sp needed
 2288 0016 5DF8047B 		ldr	r7, [sp], #4
 2289              	.LCFI126:
 2290              		.cfi_restore 7
 2291              		.cfi_def_cfa_offset 0
 2292 001a 7047     		bx	lr
 2293              		.cfi_endproc
 2294              	.LFE29:
 2296              		.section	.bss.xLastTime.0,"aw",%nobits
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 64


 2297              		.align	2
 2300              	xLastTime.0:
 2301 0000 00000000 		.space	4
 2302              		.text
 2303              	.Letext0:
 2304              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 2305              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 2306              		.file 5 "Drivers/FreeRTOS/include/list.h"
 2307              		.file 6 "Drivers/FreeRTOS/include/task.h"
 2308              		.file 7 "Drivers/FreeRTOS/include/queue.h"
 2309              		.file 8 "Drivers/FreeRTOS/include/timers.h"
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 65


DEFINED SYMBOLS
                            *ABS*:00000000 timers.c
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:18     .bss.xActiveTimerList1:00000000 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:21     .bss.xActiveTimerList1:00000000 xActiveTimerList1
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:24     .bss.xActiveTimerList2:00000000 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:27     .bss.xActiveTimerList2:00000000 xActiveTimerList2
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:30     .bss.pxCurrentTimerList:00000000 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:33     .bss.pxCurrentTimerList:00000000 pxCurrentTimerList
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:36     .bss.pxOverflowTimerList:00000000 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:39     .bss.pxOverflowTimerList:00000000 pxOverflowTimerList
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:42     .bss.xTimerQueue:00000000 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:45     .bss.xTimerQueue:00000000 xTimerQueue
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:48     .bss.xTimerTaskHandle:00000000 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:51     .bss.xTimerTaskHandle:00000000 xTimerTaskHandle
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:54     .rodata:00000000 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:58     .text.xTimerCreateTimerTask:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:66     .text.xTimerCreateTimerTask:00000000 xTimerCreateTimerTask
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1881   .text.prvCheckForValidListAndQueue:00000000 prvCheckForValidListAndQueue
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:149    .text.xTimerCreateTimerTask:00000054 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1110   .text.prvTimerTask:00000000 prvTimerTask
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:157    .text.xTimerCreate:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:164    .text.xTimerCreate:00000000 xTimerCreate
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:230    .text.prvInitialiseNewTimer:00000000 prvInitialiseNewTimer
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:224    .text.prvInitialiseNewTimer:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:326    .text.xTimerGenericCommand:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:333    .text.xTimerGenericCommand:00000000 xTimerGenericCommand
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:452    .text.xTimerGenericCommand:00000098 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:457    .text.xTimerGetTimerDaemonTaskHandle:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:464    .text.xTimerGetTimerDaemonTaskHandle:00000000 xTimerGetTimerDaemonTaskHandle
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:528    .text.xTimerGetTimerDaemonTaskHandle:00000034 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:533    .text.xTimerGetPeriod:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:540    .text.xTimerGetPeriod:00000000 xTimerGetPeriod
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:608    .text.vTimerSetReloadMode:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:615    .text.vTimerSetReloadMode:00000000 vTimerSetReloadMode
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:702    .text.uxTimerGetReloadMode:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:709    .text.uxTimerGetReloadMode:00000000 uxTimerGetReloadMode
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:793    .text.xTimerGetExpiryTime:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:800    .text.xTimerGetExpiryTime:00000000 xTimerGetExpiryTime
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:871    .text.pcTimerGetName:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:878    .text.pcTimerGetName:00000000 pcTimerGetName
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:946    .text.prvReloadTimer:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:952    .text.prvReloadTimer:00000000 prvReloadTimer
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1436   .text.prvInsertTimerInActiveList:00000000 prvInsertTimerInActiveList
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1019   .text.prvProcessExpiredTimer:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1025   .text.prvProcessExpiredTimer:00000000 prvProcessExpiredTimer
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1099   .text.prvProcessExpiredTimer:0000005c $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1104   .text.prvTimerTask:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1282   .text.prvGetNextExpireTime:00000000 prvGetNextExpireTime
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1153   .text.prvProcessTimerOrBlockTask:00000000 prvProcessTimerOrBlockTask
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1549   .text.prvProcessReceivedCommands:00000000 prvProcessReceivedCommands
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1147   .text.prvProcessTimerOrBlockTask:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1365   .text.prvSampleTimeNow:00000000 prvSampleTimeNow
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1269   .text.prvProcessTimerOrBlockTask:00000090 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1276   .text.prvGetNextExpireTime:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1354   .text.prvGetNextExpireTime:00000044 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1359   .text.prvSampleTimeNow:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1800   .text.prvSwitchTimerLists:00000000 prvSwitchTimerLists
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s 			page 66


C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1425   .text.prvSampleTimeNow:0000003c $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:2300   .bss.xLastTime.0:00000000 xLastTime.0
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1430   .text.prvInsertTimerInActiveList:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1537   .text.prvInsertTimerInActiveList:0000007c $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1543   .text.prvProcessReceivedCommands:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1604   .text.prvProcessReceivedCommands:00000040 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1613   .text.prvProcessReceivedCommands:00000064 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1789   .text.prvProcessReceivedCommands:00000178 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1794   .text.prvSwitchTimerLists:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1865   .text.prvSwitchTimerLists:00000044 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1875   .text.prvCheckForValidListAndQueue:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1947   .text.prvCheckForValidListAndQueue:00000054 $d
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1957   .text.xTimerIsTimerActive:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:1964   .text.xTimerIsTimerActive:00000000 xTimerIsTimerActive
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:2048   .text.pvTimerGetTimerID:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:2055   .text.pvTimerGetTimerID:00000000 pvTimerGetTimerID
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:2126   .text.vTimerSetTimerID:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:2133   .text.vTimerSetTimerID:00000000 vTimerSetTimerID
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:2203   .text.uxTimerGetTimerNumber:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:2210   .text.uxTimerGetTimerNumber:00000000 uxTimerGetTimerNumber
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:2249   .text.vTimerSetTimerNumber:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:2256   .text.vTimerSetTimerNumber:00000000 vTimerSetTimerNumber
C:\Users\Benson\AppData\Local\Temp\ccPu8Wkp.s:2297   .bss.xLastTime.0:00000000 $d

UNDEFINED SYMBOLS
xTaskCreate
pvPortMalloc
vListInitialiseItem
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
vPortEnterCritical
vPortExitCritical
uxListRemove
vTaskSuspendAll
xTaskResumeAll
vQueueWaitForMessageRestricted
xTaskGetTickCount
vListInsert
vPortFree
xQueueReceive
vListInitialise
xQueueGenericCreate
vQueueAddToRegistry
