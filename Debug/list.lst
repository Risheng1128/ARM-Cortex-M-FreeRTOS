ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"list.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.vListInitialise,"ax",%progbits
  18              		.align	1
  19              		.global	vListInitialise
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	vListInitialise:
  27              	.LFB5:
  28              		.file 1 "./Drivers/FreeRTOS/list.c"
   1:./Drivers/FreeRTOS/list.c **** /*
   2:./Drivers/FreeRTOS/list.c ****  * FreeRTOS Kernel V10.4.6
   3:./Drivers/FreeRTOS/list.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:./Drivers/FreeRTOS/list.c ****  *
   5:./Drivers/FreeRTOS/list.c ****  * SPDX-License-Identifier: MIT
   6:./Drivers/FreeRTOS/list.c ****  *
   7:./Drivers/FreeRTOS/list.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:./Drivers/FreeRTOS/list.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:./Drivers/FreeRTOS/list.c ****  * the Software without restriction, including without limitation the rights to
  10:./Drivers/FreeRTOS/list.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:./Drivers/FreeRTOS/list.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:./Drivers/FreeRTOS/list.c ****  * subject to the following conditions:
  13:./Drivers/FreeRTOS/list.c ****  *
  14:./Drivers/FreeRTOS/list.c ****  * The above copyright notice and this permission notice shall be included in all
  15:./Drivers/FreeRTOS/list.c ****  * copies or substantial portions of the Software.
  16:./Drivers/FreeRTOS/list.c ****  *
  17:./Drivers/FreeRTOS/list.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:./Drivers/FreeRTOS/list.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:./Drivers/FreeRTOS/list.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:./Drivers/FreeRTOS/list.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:./Drivers/FreeRTOS/list.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:./Drivers/FreeRTOS/list.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:./Drivers/FreeRTOS/list.c ****  *
  24:./Drivers/FreeRTOS/list.c ****  * https://www.FreeRTOS.org
  25:./Drivers/FreeRTOS/list.c ****  * https://github.com/FreeRTOS
  26:./Drivers/FreeRTOS/list.c ****  *
  27:./Drivers/FreeRTOS/list.c ****  */
  28:./Drivers/FreeRTOS/list.c **** 
  29:./Drivers/FreeRTOS/list.c **** 
  30:./Drivers/FreeRTOS/list.c **** #include <stdlib.h>
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s 			page 2


  31:./Drivers/FreeRTOS/list.c **** 
  32:./Drivers/FreeRTOS/list.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:./Drivers/FreeRTOS/list.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  34:./Drivers/FreeRTOS/list.c ****  * task.h is included from an application file. */
  35:./Drivers/FreeRTOS/list.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:./Drivers/FreeRTOS/list.c **** 
  37:./Drivers/FreeRTOS/list.c **** #include "FreeRTOS.h"
  38:./Drivers/FreeRTOS/list.c **** #include "list.h"
  39:./Drivers/FreeRTOS/list.c **** 
  40:./Drivers/FreeRTOS/list.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  41:./Drivers/FreeRTOS/list.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be
  42:./Drivers/FreeRTOS/list.c ****  * defined for the header files above, but not in this file, in order to
  43:./Drivers/FreeRTOS/list.c ****  * generate the correct privileged Vs unprivileged linkage and placement. */
  44:./Drivers/FreeRTOS/list.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  45:./Drivers/FreeRTOS/list.c **** 
  46:./Drivers/FreeRTOS/list.c **** /*-----------------------------------------------------------
  47:./Drivers/FreeRTOS/list.c **** * PUBLIC LIST API documented in list.h
  48:./Drivers/FreeRTOS/list.c **** *----------------------------------------------------------*/
  49:./Drivers/FreeRTOS/list.c **** 
  50:./Drivers/FreeRTOS/list.c **** void vListInitialise( List_t * const pxList )
  51:./Drivers/FreeRTOS/list.c **** {
  29              		.loc 1 51 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
  52:./Drivers/FreeRTOS/list.c ****     /* The list structure contains a list item which is used to mark the
  53:./Drivers/FreeRTOS/list.c ****      * end of the list.  To initialise the list the list end is inserted
  54:./Drivers/FreeRTOS/list.c ****      * as the only list entry. */
  55:./Drivers/FreeRTOS/list.c ****     pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini li
  45              		.loc 1 55 40
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 03F10802 		add	r2, r3, #8
  48              		.loc 1 55 21
  49 000e 7B68     		ldr	r3, [r7, #4]
  50 0010 5A60     		str	r2, [r3, #4]
  56:./Drivers/FreeRTOS/list.c **** 
  57:./Drivers/FreeRTOS/list.c ****     /* The list end value is the highest possible value in the list to
  58:./Drivers/FreeRTOS/list.c ****      * ensure it remains at the end of the list. */
  59:./Drivers/FreeRTOS/list.c ****     pxList->xListEnd.xItemValue = portMAX_DELAY;
  51              		.loc 1 59 33
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 4FF0FF32 		mov	r2, #-1
  54 0018 9A60     		str	r2, [r3, #8]
  60:./Drivers/FreeRTOS/list.c **** 
  61:./Drivers/FreeRTOS/list.c ****     /* The list end next and previous pointers point to itself so we know
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s 			page 3


  62:./Drivers/FreeRTOS/list.c ****      * when the list is empty. */
  63:./Drivers/FreeRTOS/list.c ****     pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );     /*lint !e826 !e740 !e9087
  55              		.loc 1 63 48
  56 001a 7B68     		ldr	r3, [r7, #4]
  57 001c 03F10802 		add	r2, r3, #8
  58              		.loc 1 63 29
  59 0020 7B68     		ldr	r3, [r7, #4]
  60 0022 DA60     		str	r2, [r3, #12]
  64:./Drivers/FreeRTOS/list.c ****     pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087
  61              		.loc 1 64 52
  62 0024 7B68     		ldr	r3, [r7, #4]
  63 0026 03F10802 		add	r2, r3, #8
  64              		.loc 1 64 33
  65 002a 7B68     		ldr	r3, [r7, #4]
  66 002c 1A61     		str	r2, [r3, #16]
  65:./Drivers/FreeRTOS/list.c **** 
  66:./Drivers/FreeRTOS/list.c ****     pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  67              		.loc 1 66 29
  68 002e 7B68     		ldr	r3, [r7, #4]
  69 0030 0022     		movs	r2, #0
  70 0032 1A60     		str	r2, [r3]
  67:./Drivers/FreeRTOS/list.c **** 
  68:./Drivers/FreeRTOS/list.c ****     /* Write known values into the list if
  69:./Drivers/FreeRTOS/list.c ****      * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  70:./Drivers/FreeRTOS/list.c ****     listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
  71:./Drivers/FreeRTOS/list.c ****     listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
  72:./Drivers/FreeRTOS/list.c **** }
  71              		.loc 1 72 1
  72 0034 00BF     		nop
  73 0036 0C37     		adds	r7, r7, #12
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 4
  76 0038 BD46     		mov	sp, r7
  77              	.LCFI4:
  78              		.cfi_def_cfa_register 13
  79              		@ sp needed
  80 003a 5DF8047B 		ldr	r7, [sp], #4
  81              	.LCFI5:
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 003e 7047     		bx	lr
  85              		.cfi_endproc
  86              	.LFE5:
  88              		.section	.text.vListInitialiseItem,"ax",%progbits
  89              		.align	1
  90              		.global	vListInitialiseItem
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu fpv4-sp-d16
  96              	vListInitialiseItem:
  97              	.LFB6:
  73:./Drivers/FreeRTOS/list.c **** /*-----------------------------------------------------------*/
  74:./Drivers/FreeRTOS/list.c **** 
  75:./Drivers/FreeRTOS/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
  76:./Drivers/FreeRTOS/list.c **** {
  98              		.loc 1 76 1
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s 			page 4


  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 8
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103 0000 80B4     		push	{r7}
 104              	.LCFI6:
 105              		.cfi_def_cfa_offset 4
 106              		.cfi_offset 7, -4
 107 0002 83B0     		sub	sp, sp, #12
 108              	.LCFI7:
 109              		.cfi_def_cfa_offset 16
 110 0004 00AF     		add	r7, sp, #0
 111              	.LCFI8:
 112              		.cfi_def_cfa_register 7
 113 0006 7860     		str	r0, [r7, #4]
  77:./Drivers/FreeRTOS/list.c ****     /* Make sure the list item is not recorded as being on a list. */
  78:./Drivers/FreeRTOS/list.c ****     pxItem->pxContainer = NULL;
 114              		.loc 1 78 25
 115 0008 7B68     		ldr	r3, [r7, #4]
 116 000a 0022     		movs	r2, #0
 117 000c 1A61     		str	r2, [r3, #16]
  79:./Drivers/FreeRTOS/list.c **** 
  80:./Drivers/FreeRTOS/list.c ****     /* Write known values into the list item if
  81:./Drivers/FreeRTOS/list.c ****      * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  82:./Drivers/FreeRTOS/list.c ****     listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  83:./Drivers/FreeRTOS/list.c ****     listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  84:./Drivers/FreeRTOS/list.c **** }
 118              		.loc 1 84 1
 119 000e 00BF     		nop
 120 0010 0C37     		adds	r7, r7, #12
 121              	.LCFI9:
 122              		.cfi_def_cfa_offset 4
 123 0012 BD46     		mov	sp, r7
 124              	.LCFI10:
 125              		.cfi_def_cfa_register 13
 126              		@ sp needed
 127 0014 5DF8047B 		ldr	r7, [sp], #4
 128              	.LCFI11:
 129              		.cfi_restore 7
 130              		.cfi_def_cfa_offset 0
 131 0018 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE6:
 135              		.section	.text.vListInsertEnd,"ax",%progbits
 136              		.align	1
 137              		.global	vListInsertEnd
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	vListInsertEnd:
 144              	.LFB7:
  85:./Drivers/FreeRTOS/list.c **** /*-----------------------------------------------------------*/
  86:./Drivers/FreeRTOS/list.c **** 
  87:./Drivers/FreeRTOS/list.c **** void vListInsertEnd( List_t * const pxList,
  88:./Drivers/FreeRTOS/list.c ****                      ListItem_t * const pxNewListItem )
  89:./Drivers/FreeRTOS/list.c **** {
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s 			page 5


 145              		.loc 1 89 1
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 16
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150 0000 80B4     		push	{r7}
 151              	.LCFI12:
 152              		.cfi_def_cfa_offset 4
 153              		.cfi_offset 7, -4
 154 0002 85B0     		sub	sp, sp, #20
 155              	.LCFI13:
 156              		.cfi_def_cfa_offset 24
 157 0004 00AF     		add	r7, sp, #0
 158              	.LCFI14:
 159              		.cfi_def_cfa_register 7
 160 0006 7860     		str	r0, [r7, #4]
 161 0008 3960     		str	r1, [r7]
  90:./Drivers/FreeRTOS/list.c ****     ListItem_t * const pxIndex = pxList->pxIndex;
 162              		.loc 1 90 24
 163 000a 7B68     		ldr	r3, [r7, #4]
 164 000c 5B68     		ldr	r3, [r3, #4]
 165 000e FB60     		str	r3, [r7, #12]
  91:./Drivers/FreeRTOS/list.c **** 
  92:./Drivers/FreeRTOS/list.c ****     /* Only effective when configASSERT() is also defined, these tests may catch
  93:./Drivers/FreeRTOS/list.c ****      * the list data structures being overwritten in memory.  They will not catch
  94:./Drivers/FreeRTOS/list.c ****      * data errors caused by incorrect configuration or use of FreeRTOS. */
  95:./Drivers/FreeRTOS/list.c ****     listTEST_LIST_INTEGRITY( pxList );
  96:./Drivers/FreeRTOS/list.c ****     listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
  97:./Drivers/FreeRTOS/list.c **** 
  98:./Drivers/FreeRTOS/list.c ****     /* Insert a new list item into pxList, but rather than sort the list,
  99:./Drivers/FreeRTOS/list.c ****      * makes the new list item the last item to be removed by a call to
 100:./Drivers/FreeRTOS/list.c ****      * listGET_OWNER_OF_NEXT_ENTRY(). */
 101:./Drivers/FreeRTOS/list.c ****     pxNewListItem->pxNext = pxIndex;
 166              		.loc 1 101 27
 167 0010 3B68     		ldr	r3, [r7]
 168 0012 FA68     		ldr	r2, [r7, #12]
 169 0014 5A60     		str	r2, [r3, #4]
 102:./Drivers/FreeRTOS/list.c ****     pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 170              		.loc 1 102 40
 171 0016 FB68     		ldr	r3, [r7, #12]
 172 0018 9A68     		ldr	r2, [r3, #8]
 173              		.loc 1 102 31
 174 001a 3B68     		ldr	r3, [r7]
 175 001c 9A60     		str	r2, [r3, #8]
 103:./Drivers/FreeRTOS/list.c **** 
 104:./Drivers/FreeRTOS/list.c ****     /* Only used during decision coverage testing. */
 105:./Drivers/FreeRTOS/list.c ****     mtCOVERAGE_TEST_DELAY();
 106:./Drivers/FreeRTOS/list.c **** 
 107:./Drivers/FreeRTOS/list.c ****     pxIndex->pxPrevious->pxNext = pxNewListItem;
 176              		.loc 1 107 12
 177 001e FB68     		ldr	r3, [r7, #12]
 178 0020 9B68     		ldr	r3, [r3, #8]
 179              		.loc 1 107 33
 180 0022 3A68     		ldr	r2, [r7]
 181 0024 5A60     		str	r2, [r3, #4]
 108:./Drivers/FreeRTOS/list.c ****     pxIndex->pxPrevious = pxNewListItem;
 182              		.loc 1 108 25
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s 			page 6


 183 0026 FB68     		ldr	r3, [r7, #12]
 184 0028 3A68     		ldr	r2, [r7]
 185 002a 9A60     		str	r2, [r3, #8]
 109:./Drivers/FreeRTOS/list.c **** 
 110:./Drivers/FreeRTOS/list.c ****     /* Remember which list the item is in. */
 111:./Drivers/FreeRTOS/list.c ****     pxNewListItem->pxContainer = pxList;
 186              		.loc 1 111 32
 187 002c 3B68     		ldr	r3, [r7]
 188 002e 7A68     		ldr	r2, [r7, #4]
 189 0030 1A61     		str	r2, [r3, #16]
 112:./Drivers/FreeRTOS/list.c **** 
 113:./Drivers/FreeRTOS/list.c ****     ( pxList->uxNumberOfItems )++;
 190              		.loc 1 113 13
 191 0032 7B68     		ldr	r3, [r7, #4]
 192 0034 1B68     		ldr	r3, [r3]
 193              		.loc 1 113 32
 194 0036 5A1C     		adds	r2, r3, #1
 195 0038 7B68     		ldr	r3, [r7, #4]
 196 003a 1A60     		str	r2, [r3]
 114:./Drivers/FreeRTOS/list.c **** }
 197              		.loc 1 114 1
 198 003c 00BF     		nop
 199 003e 1437     		adds	r7, r7, #20
 200              	.LCFI15:
 201              		.cfi_def_cfa_offset 4
 202 0040 BD46     		mov	sp, r7
 203              	.LCFI16:
 204              		.cfi_def_cfa_register 13
 205              		@ sp needed
 206 0042 5DF8047B 		ldr	r7, [sp], #4
 207              	.LCFI17:
 208              		.cfi_restore 7
 209              		.cfi_def_cfa_offset 0
 210 0046 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE7:
 214              		.section	.text.vListInsert,"ax",%progbits
 215              		.align	1
 216              		.global	vListInsert
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu fpv4-sp-d16
 222              	vListInsert:
 223              	.LFB8:
 115:./Drivers/FreeRTOS/list.c **** /*-----------------------------------------------------------*/
 116:./Drivers/FreeRTOS/list.c **** 
 117:./Drivers/FreeRTOS/list.c **** void vListInsert( List_t * const pxList,
 118:./Drivers/FreeRTOS/list.c ****                   ListItem_t * const pxNewListItem )
 119:./Drivers/FreeRTOS/list.c **** {
 224              		.loc 1 119 1
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 16
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229 0000 80B4     		push	{r7}
 230              	.LCFI18:
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s 			page 7


 231              		.cfi_def_cfa_offset 4
 232              		.cfi_offset 7, -4
 233 0002 85B0     		sub	sp, sp, #20
 234              	.LCFI19:
 235              		.cfi_def_cfa_offset 24
 236 0004 00AF     		add	r7, sp, #0
 237              	.LCFI20:
 238              		.cfi_def_cfa_register 7
 239 0006 7860     		str	r0, [r7, #4]
 240 0008 3960     		str	r1, [r7]
 120:./Drivers/FreeRTOS/list.c ****     ListItem_t * pxIterator;
 121:./Drivers/FreeRTOS/list.c ****     const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 241              		.loc 1 121 22
 242 000a 3B68     		ldr	r3, [r7]
 243 000c 1B68     		ldr	r3, [r3]
 244 000e BB60     		str	r3, [r7, #8]
 122:./Drivers/FreeRTOS/list.c **** 
 123:./Drivers/FreeRTOS/list.c ****     /* Only effective when configASSERT() is also defined, these tests may catch
 124:./Drivers/FreeRTOS/list.c ****      * the list data structures being overwritten in memory.  They will not catch
 125:./Drivers/FreeRTOS/list.c ****      * data errors caused by incorrect configuration or use of FreeRTOS. */
 126:./Drivers/FreeRTOS/list.c ****     listTEST_LIST_INTEGRITY( pxList );
 127:./Drivers/FreeRTOS/list.c ****     listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 128:./Drivers/FreeRTOS/list.c **** 
 129:./Drivers/FreeRTOS/list.c ****     /* Insert the new list item into the list, sorted in xItemValue order.
 130:./Drivers/FreeRTOS/list.c ****      *
 131:./Drivers/FreeRTOS/list.c ****      * If the list already contains a list item with the same item value then the
 132:./Drivers/FreeRTOS/list.c ****      * new list item should be placed after it.  This ensures that TCBs which are
 133:./Drivers/FreeRTOS/list.c ****      * stored in ready lists (all of which have the same xItemValue value) get a
 134:./Drivers/FreeRTOS/list.c ****      * share of the CPU.  However, if the xItemValue is the same as the back marker
 135:./Drivers/FreeRTOS/list.c ****      * the iteration loop below will not end.  Therefore the value is checked
 136:./Drivers/FreeRTOS/list.c ****      * first, and the algorithm slightly modified if necessary. */
 137:./Drivers/FreeRTOS/list.c ****     if( xValueOfInsertion == portMAX_DELAY )
 245              		.loc 1 137 7
 246 0010 BB68     		ldr	r3, [r7, #8]
 247 0012 B3F1FF3F 		cmp	r3, #-1
 248 0016 03D1     		bne	.L5
 138:./Drivers/FreeRTOS/list.c ****     {
 139:./Drivers/FreeRTOS/list.c ****         pxIterator = pxList->xListEnd.pxPrevious;
 249              		.loc 1 139 20
 250 0018 7B68     		ldr	r3, [r7, #4]
 251 001a 1B69     		ldr	r3, [r3, #16]
 252 001c FB60     		str	r3, [r7, #12]
 253 001e 0CE0     		b	.L6
 254              	.L5:
 140:./Drivers/FreeRTOS/list.c ****     }
 141:./Drivers/FreeRTOS/list.c ****     else
 142:./Drivers/FreeRTOS/list.c ****     {
 143:./Drivers/FreeRTOS/list.c ****         /* *** NOTE ***********************************************************
 144:./Drivers/FreeRTOS/list.c ****         *  If you find your application is crashing here then likely causes are
 145:./Drivers/FreeRTOS/list.c ****         *  listed below.  In addition see https://www.FreeRTOS.org/FAQHelp.html for
 146:./Drivers/FreeRTOS/list.c ****         *  more tips, and ensure configASSERT() is defined!
 147:./Drivers/FreeRTOS/list.c ****         *  https://www.FreeRTOS.org/a00110.html#configASSERT
 148:./Drivers/FreeRTOS/list.c ****         *
 149:./Drivers/FreeRTOS/list.c ****         *   1) Stack overflow -
 150:./Drivers/FreeRTOS/list.c ****         *      see https://www.FreeRTOS.org/Stacks-and-stack-overflow-checking.html
 151:./Drivers/FreeRTOS/list.c ****         *   2) Incorrect interrupt priority assignment, especially on Cortex-M
 152:./Drivers/FreeRTOS/list.c ****         *      parts where numerically high priority values denote low actual
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s 			page 8


 153:./Drivers/FreeRTOS/list.c ****         *      interrupt priorities, which can seem counter intuitive.  See
 154:./Drivers/FreeRTOS/list.c ****         *      https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html and the definition
 155:./Drivers/FreeRTOS/list.c ****         *      of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 156:./Drivers/FreeRTOS/list.c ****         *      https://www.FreeRTOS.org/a00110.html
 157:./Drivers/FreeRTOS/list.c ****         *   3) Calling an API function from within a critical section or when
 158:./Drivers/FreeRTOS/list.c ****         *      the scheduler is suspended, or calling an API function that does
 159:./Drivers/FreeRTOS/list.c ****         *      not end in "FromISR" from an interrupt.
 160:./Drivers/FreeRTOS/list.c ****         *   4) Using a queue or semaphore before it has been initialised or
 161:./Drivers/FreeRTOS/list.c ****         *      before the scheduler has been started (are interrupts firing
 162:./Drivers/FreeRTOS/list.c ****         *      before vTaskStartScheduler() has been called?).
 163:./Drivers/FreeRTOS/list.c ****         *   5) If the FreeRTOS port supports interrupt nesting then ensure that
 164:./Drivers/FreeRTOS/list.c ****         *      the priority of the tick interrupt is at or below
 165:./Drivers/FreeRTOS/list.c ****         *      configMAX_SYSCALL_INTERRUPT_PRIORITY.
 166:./Drivers/FreeRTOS/list.c ****         **********************************************************************/
 167:./Drivers/FreeRTOS/list.c **** 
 168:./Drivers/FreeRTOS/list.c ****         for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <=
 255              		.loc 1 168 25
 256 0020 7B68     		ldr	r3, [r7, #4]
 257 0022 0833     		adds	r3, r3, #8
 258 0024 FB60     		str	r3, [r7, #12]
 259              		.loc 1 168 9
 260 0026 02E0     		b	.L7
 261              	.L8:
 262              		.loc 1 168 131 discriminator 3
 263 0028 FB68     		ldr	r3, [r7, #12]
 264 002a 5B68     		ldr	r3, [r3, #4]
 265 002c FB60     		str	r3, [r7, #12]
 266              	.L7:
 267              		.loc 1 168 77 discriminator 1
 268 002e FB68     		ldr	r3, [r7, #12]
 269 0030 5B68     		ldr	r3, [r3, #4]
 270              		.loc 1 168 85 discriminator 1
 271 0032 1B68     		ldr	r3, [r3]
 272              		.loc 1 168 9 discriminator 1
 273 0034 BA68     		ldr	r2, [r7, #8]
 274 0036 9A42     		cmp	r2, r3
 275 0038 F6D2     		bcs	.L8
 276              	.L6:
 169:./Drivers/FreeRTOS/list.c ****         {
 170:./Drivers/FreeRTOS/list.c ****             /* There is nothing to do here, just iterating to the wanted
 171:./Drivers/FreeRTOS/list.c ****              * insertion position. */
 172:./Drivers/FreeRTOS/list.c ****         }
 173:./Drivers/FreeRTOS/list.c ****     }
 174:./Drivers/FreeRTOS/list.c **** 
 175:./Drivers/FreeRTOS/list.c ****     pxNewListItem->pxNext = pxIterator->pxNext;
 277              		.loc 1 175 39
 278 003a FB68     		ldr	r3, [r7, #12]
 279 003c 5A68     		ldr	r2, [r3, #4]
 280              		.loc 1 175 27
 281 003e 3B68     		ldr	r3, [r7]
 282 0040 5A60     		str	r2, [r3, #4]
 176:./Drivers/FreeRTOS/list.c ****     pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 283              		.loc 1 176 18
 284 0042 3B68     		ldr	r3, [r7]
 285 0044 5B68     		ldr	r3, [r3, #4]
 286              		.loc 1 176 39
 287 0046 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s 			page 9


 288 0048 9A60     		str	r2, [r3, #8]
 177:./Drivers/FreeRTOS/list.c ****     pxNewListItem->pxPrevious = pxIterator;
 289              		.loc 1 177 31
 290 004a 3B68     		ldr	r3, [r7]
 291 004c FA68     		ldr	r2, [r7, #12]
 292 004e 9A60     		str	r2, [r3, #8]
 178:./Drivers/FreeRTOS/list.c ****     pxIterator->pxNext = pxNewListItem;
 293              		.loc 1 178 24
 294 0050 FB68     		ldr	r3, [r7, #12]
 295 0052 3A68     		ldr	r2, [r7]
 296 0054 5A60     		str	r2, [r3, #4]
 179:./Drivers/FreeRTOS/list.c **** 
 180:./Drivers/FreeRTOS/list.c ****     /* Remember which list the item is in.  This allows fast removal of the
 181:./Drivers/FreeRTOS/list.c ****      * item later. */
 182:./Drivers/FreeRTOS/list.c ****     pxNewListItem->pxContainer = pxList;
 297              		.loc 1 182 32
 298 0056 3B68     		ldr	r3, [r7]
 299 0058 7A68     		ldr	r2, [r7, #4]
 300 005a 1A61     		str	r2, [r3, #16]
 183:./Drivers/FreeRTOS/list.c **** 
 184:./Drivers/FreeRTOS/list.c ****     ( pxList->uxNumberOfItems )++;
 301              		.loc 1 184 13
 302 005c 7B68     		ldr	r3, [r7, #4]
 303 005e 1B68     		ldr	r3, [r3]
 304              		.loc 1 184 32
 305 0060 5A1C     		adds	r2, r3, #1
 306 0062 7B68     		ldr	r3, [r7, #4]
 307 0064 1A60     		str	r2, [r3]
 185:./Drivers/FreeRTOS/list.c **** }
 308              		.loc 1 185 1
 309 0066 00BF     		nop
 310 0068 1437     		adds	r7, r7, #20
 311              	.LCFI21:
 312              		.cfi_def_cfa_offset 4
 313 006a BD46     		mov	sp, r7
 314              	.LCFI22:
 315              		.cfi_def_cfa_register 13
 316              		@ sp needed
 317 006c 5DF8047B 		ldr	r7, [sp], #4
 318              	.LCFI23:
 319              		.cfi_restore 7
 320              		.cfi_def_cfa_offset 0
 321 0070 7047     		bx	lr
 322              		.cfi_endproc
 323              	.LFE8:
 325              		.section	.text.uxListRemove,"ax",%progbits
 326              		.align	1
 327              		.global	uxListRemove
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 331              		.fpu fpv4-sp-d16
 333              	uxListRemove:
 334              	.LFB9:
 186:./Drivers/FreeRTOS/list.c **** /*-----------------------------------------------------------*/
 187:./Drivers/FreeRTOS/list.c **** 
 188:./Drivers/FreeRTOS/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s 			page 10


 189:./Drivers/FreeRTOS/list.c **** {
 335              		.loc 1 189 1
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 16
 338              		@ frame_needed = 1, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 340 0000 80B4     		push	{r7}
 341              	.LCFI24:
 342              		.cfi_def_cfa_offset 4
 343              		.cfi_offset 7, -4
 344 0002 85B0     		sub	sp, sp, #20
 345              	.LCFI25:
 346              		.cfi_def_cfa_offset 24
 347 0004 00AF     		add	r7, sp, #0
 348              	.LCFI26:
 349              		.cfi_def_cfa_register 7
 350 0006 7860     		str	r0, [r7, #4]
 190:./Drivers/FreeRTOS/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 191:./Drivers/FreeRTOS/list.c ****  * item. */
 192:./Drivers/FreeRTOS/list.c ****     List_t * const pxList = pxItemToRemove->pxContainer;
 351              		.loc 1 192 20
 352 0008 7B68     		ldr	r3, [r7, #4]
 353 000a 1B69     		ldr	r3, [r3, #16]
 354 000c FB60     		str	r3, [r7, #12]
 193:./Drivers/FreeRTOS/list.c **** 
 194:./Drivers/FreeRTOS/list.c ****     pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 355              		.loc 1 194 19
 356 000e 7B68     		ldr	r3, [r7, #4]
 357 0010 5B68     		ldr	r3, [r3, #4]
 358              		.loc 1 194 56
 359 0012 7A68     		ldr	r2, [r7, #4]
 360 0014 9268     		ldr	r2, [r2, #8]
 361              		.loc 1 194 40
 362 0016 9A60     		str	r2, [r3, #8]
 195:./Drivers/FreeRTOS/list.c ****     pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 363              		.loc 1 195 19
 364 0018 7B68     		ldr	r3, [r7, #4]
 365 001a 9B68     		ldr	r3, [r3, #8]
 366              		.loc 1 195 56
 367 001c 7A68     		ldr	r2, [r7, #4]
 368 001e 5268     		ldr	r2, [r2, #4]
 369              		.loc 1 195 40
 370 0020 5A60     		str	r2, [r3, #4]
 196:./Drivers/FreeRTOS/list.c **** 
 197:./Drivers/FreeRTOS/list.c ****     /* Only used during decision coverage testing. */
 198:./Drivers/FreeRTOS/list.c ****     mtCOVERAGE_TEST_DELAY();
 199:./Drivers/FreeRTOS/list.c **** 
 200:./Drivers/FreeRTOS/list.c ****     /* Make sure the index is left pointing to a valid item. */
 201:./Drivers/FreeRTOS/list.c ****     if( pxList->pxIndex == pxItemToRemove )
 371              		.loc 1 201 15
 372 0022 FB68     		ldr	r3, [r7, #12]
 373 0024 5B68     		ldr	r3, [r3, #4]
 374              		.loc 1 201 7
 375 0026 7A68     		ldr	r2, [r7, #4]
 376 0028 9A42     		cmp	r2, r3
 377 002a 03D1     		bne	.L10
 202:./Drivers/FreeRTOS/list.c ****     {
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s 			page 11


 203:./Drivers/FreeRTOS/list.c ****         pxList->pxIndex = pxItemToRemove->pxPrevious;
 378              		.loc 1 203 41
 379 002c 7B68     		ldr	r3, [r7, #4]
 380 002e 9A68     		ldr	r2, [r3, #8]
 381              		.loc 1 203 25
 382 0030 FB68     		ldr	r3, [r7, #12]
 383 0032 5A60     		str	r2, [r3, #4]
 384              	.L10:
 204:./Drivers/FreeRTOS/list.c ****     }
 205:./Drivers/FreeRTOS/list.c ****     else
 206:./Drivers/FreeRTOS/list.c ****     {
 207:./Drivers/FreeRTOS/list.c ****         mtCOVERAGE_TEST_MARKER();
 208:./Drivers/FreeRTOS/list.c ****     }
 209:./Drivers/FreeRTOS/list.c **** 
 210:./Drivers/FreeRTOS/list.c ****     pxItemToRemove->pxContainer = NULL;
 385              		.loc 1 210 33
 386 0034 7B68     		ldr	r3, [r7, #4]
 387 0036 0022     		movs	r2, #0
 388 0038 1A61     		str	r2, [r3, #16]
 211:./Drivers/FreeRTOS/list.c ****     ( pxList->uxNumberOfItems )--;
 389              		.loc 1 211 13
 390 003a FB68     		ldr	r3, [r7, #12]
 391 003c 1B68     		ldr	r3, [r3]
 392              		.loc 1 211 32
 393 003e 5A1E     		subs	r2, r3, #1
 394 0040 FB68     		ldr	r3, [r7, #12]
 395 0042 1A60     		str	r2, [r3]
 212:./Drivers/FreeRTOS/list.c **** 
 213:./Drivers/FreeRTOS/list.c ****     return pxList->uxNumberOfItems;
 396              		.loc 1 213 18
 397 0044 FB68     		ldr	r3, [r7, #12]
 398 0046 1B68     		ldr	r3, [r3]
 214:./Drivers/FreeRTOS/list.c **** }
 399              		.loc 1 214 1
 400 0048 1846     		mov	r0, r3
 401 004a 1437     		adds	r7, r7, #20
 402              	.LCFI27:
 403              		.cfi_def_cfa_offset 4
 404 004c BD46     		mov	sp, r7
 405              	.LCFI28:
 406              		.cfi_def_cfa_register 13
 407              		@ sp needed
 408 004e 5DF8047B 		ldr	r7, [sp], #4
 409              	.LCFI29:
 410              		.cfi_restore 7
 411              		.cfi_def_cfa_offset 0
 412 0052 7047     		bx	lr
 413              		.cfi_endproc
 414              	.LFE9:
 416              		.text
 417              	.Letext0:
 418              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 419              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 420              		.file 4 "Drivers/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
 421              		.file 5 "Drivers/FreeRTOS/include/list.h"
ARM GAS  C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 list.c
C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s:18     .text.vListInitialise:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s:26     .text.vListInitialise:00000000 vListInitialise
C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s:89     .text.vListInitialiseItem:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s:96     .text.vListInitialiseItem:00000000 vListInitialiseItem
C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s:136    .text.vListInsertEnd:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s:143    .text.vListInsertEnd:00000000 vListInsertEnd
C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s:215    .text.vListInsert:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s:222    .text.vListInsert:00000000 vListInsert
C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s:326    .text.uxListRemove:00000000 $t
C:\Users\Benson\AppData\Local\Temp\ccSXWZci.s:333    .text.uxListRemove:00000000 uxListRemove

NO UNDEFINED SYMBOLS
